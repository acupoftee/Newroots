{"ast":null,"code":"import _objectSpread from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelahe/School/treehacks/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/angelahe/School/treehacks/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar.js';\nimport CheckinModal from './components/CheckinModal.js';\nimport FeedTab from './components/FeedTab.js';\nimport HomePage from './components/HomePage.js';\nimport NetworkTab from './components/NetworkTab.js';\nimport UserTab from './components/UserTab.js';\nvar data = {\n  baseURL: '',\n  graphicsURL: 'https://zephyo.github.io/treehacks/graphics/',\n  activeTab: 0,\n  userData: null,\n  feed: []\n},\n    userBase = 'users',\n    config = {\n  apiKey: \"AIzaSyBnWbqZC0wncY06pWlHX8DCbIM_EM9zrE8\",\n  authDomain: \"day-7-messaging.firebaseapp.com\",\n  databaseURL: \"https://day-7-messaging.firebaseio.com\",\n  projectId: \"day-7-messaging\",\n  storageBucket: \"day-7-messaging.appspot.com\",\n  messagingSenderId: \"307150346579\"\n};\nfirebase.initializeApp(config);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setActiveTab = function (index) {\n      _this.setState({\n        activeTab: index\n      });\n    };\n\n    _this.checkLogin = function (user, pass) {\n      //check against database \n      //if (user)\n      //if valid, set userData\n      _this.setState({\n        userData: {\n          profileImage: '',\n          name: 'Gloria Wang',\n          username: 'gloria',\n          lastCheckin: '02/14/2019',\n          checkin: [{\n            q: 'How are you feeling today?',\n            type: 'range'\n          }, {\n            q: 'Have you took your medication?',\n            type: 'yesno'\n          }]\n        }\n      });\n    };\n\n    _this.updateCheckin = function () {\n      _this.setState({\n        userData: _objectSpread({}, _this.state.userData, {\n          lastCheckin: moment().format('L')\n        })\n      });\n    };\n\n    _this.needToCheckin = function () {\n      if (_this.state.userData.lastCheckin != moment().format('L')) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.logout = function () {\n      _this.setState({\n        userData: null\n      });\n    };\n\n    _this.state = data;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        firebaseRef: firebase.database().ref(userBase)\n      }, this.update);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.userData === null) {\n        return React.createElement(HomePage, {\n          graphicsURL: this.state.graphicsURL,\n          checkLogin: this.checkLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      }\n\n      var activeTab; //active tab is feed\n\n      if (this.state.activeTab == 0) {\n        activeTab = React.createElement(FeedTab, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      } //active tab is network\n      else if (this.state.activeTab == 1) {\n          activeTab = React.createElement(NetworkTab, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n        } //active tab is profile\n        else {\n            activeTab = React.createElement(UserTab, {\n              logout: this.logout,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            });\n          }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-bg-texture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(NavBar, {\n        graphicsURL: this.state.graphicsURL,\n        setActiveTab: this.setActiveTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), activeTab, this.needToCheckin() ? React.createElement(CheckinModal, {\n        graphicsURL: this.state.graphicsURL,\n        updateCheckin: this.updateCheckin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/angelahe/School/treehacks/my-app/src/App.js"],"names":["React","Component","NavBar","CheckinModal","FeedTab","HomePage","NetworkTab","UserTab","data","baseURL","graphicsURL","activeTab","userData","feed","userBase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","App","props","setActiveTab","index","setState","checkLogin","user","pass","profileImage","name","username","lastCheckin","checkin","q","type","updateCheckin","state","moment","format","needToCheckin","logout","firebaseRef","database","ref","update"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,IAAIC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,EADA;AAETC,EAAAA,WAAW,EAAE,8CAFJ;AAGTC,EAAAA,SAAS,EAAE,CAHF;AAITC,EAAAA,QAAQ,EAAE,IAJD;AAKTC,EAAAA,IAAI,EAAE;AALG,CAAX;AAAA,IAUAC,QAAQ,GAAC,OAVT;AAAA,IAYAC,MAAM,GAAG;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,iCAFL;AAGPC,EAAAA,WAAW,EAAE,wCAHN;AAIPC,EAAAA,SAAS,EAAE,iBAJJ;AAKPC,EAAAA,aAAa,EAAE,6BALR;AAMPC,EAAAA,iBAAiB,EAAE;AANZ,CAZT;AAqBAC,QAAQ,CAACC,aAAT,CAAuBR,MAAvB;;IAEMS,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAWnBC,YAXmB,GAWJ,UAACC,KAAD,EAAW;AACtB,YAAKC,QAAL,CAAc;AACdjB,QAAAA,SAAS,EAAEgB;AADG,OAAd;AAGH,KAfkB;;AAAA,UAiBnBE,UAjBmB,GAiBN,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC3B;AACA;AACA;AACA,YAAKH,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EACR;AACEoB,UAAAA,YAAY,EAAE,EADhB;AAEEC,UAAAA,IAAI,EAAE,aAFR;AAGEC,UAAAA,QAAQ,EAAE,QAHZ;AAIEC,UAAAA,WAAW,EAAE,YAJf;AAKEC,UAAAA,OAAO,EAAE,CACP;AACEC,YAAAA,CAAC,EAAE,4BADL;AAEEC,YAAAA,IAAI,EAAE;AAFR,WADO,EAKP;AACED,YAAAA,CAAC,EAAE,gCADL;AAEEC,YAAAA,IAAI,EAAE;AAFR,WALO;AALX;AAFY,OAAd;AAmBD,KAxCkB;;AAAA,UA2CnBC,aA3CmB,GA2CH,YAAM;AACpB,YAAKX,QAAL,CAAc;AACdhB,QAAAA,QAAQ,oBACC,MAAK4B,KAAL,CAAW5B,QADZ;AAEFuB,UAAAA,WAAW,EAAEM,MAAM,GAAGC,MAAT,CAAgB,GAAhB;AAFX;AADM,OAAd;AAMD,KAlDkB;;AAAA,UAqDnBC,aArDmB,GAqDH,YAAM;AACpB,UAAI,MAAKH,KAAL,CAAW5B,QAAX,CAAoBuB,WAApB,IAAmCM,MAAM,GAAGC,MAAT,CAAgB,GAAhB,CAAvC,EAA4D;AAC1D,eAAO,IAAP;AACD,OAFD,MAGI;AACF,eAAO,KAAP;AACD;AACF,KA5DkB;;AAAA,UA+DnBE,MA/DmB,GA+DV,YAAM;AACb,YAAKhB,QAAL,CAAc;AACdhB,QAAAA,QAAQ,EAAE;AADI,OAAd;AAGD,KAnEkB;;AAEjB,UAAK4B,KAAL,GAAahC,IAAb;AAFiB;AAGlB;;;;yCAEoB;AACnB,WAAKoB,QAAL,CAAc;AACZiB,QAAAA,WAAW,EAAEvB,QAAQ,CAACwB,QAAT,GAAoBC,GAApB,CAAwBjC,QAAxB;AADD,OAAd,EAEG,KAAKkC,MAFR;AAGD;;;6BA4DQ;AACP,UAAI,KAAKR,KAAL,CAAW5B,QAAX,KAAwB,IAA5B,EAAiC;AAC/B,eACE,oBAAC,QAAD;AACE,UAAA,WAAW,EAAI,KAAK4B,KAAL,CAAW9B,WAD5B;AAEE,UAAA,UAAU,EAAI,KAAKmB,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AACD,UAAIlB,SAAJ,CATO,CAUP;;AACA,UAAI,KAAK6B,KAAL,CAAW7B,SAAX,IAAwB,CAA5B,EAA8B;AAC5BA,QAAAA,SAAS,GACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,CAKA;AALA,WAMK,IAAI,KAAK6B,KAAL,CAAW7B,SAAX,IAAwB,CAA5B,EAA8B;AACjCA,UAAAA,SAAS,GACP,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,SAJI,CAKL;AALK,aAMD;AACFA,YAAAA,SAAS,GACP,oBAAC,OAAD;AACE,cAAA,MAAM,EAAI,KAAKiC,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,MAAD;AACG,QAAA,WAAW,EAAI,KAAKJ,KAAL,CAAW9B,WAD7B;AAEG,QAAA,YAAY,EAAI,KAAKgB,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOKf,SAPL,EAQE,KAAKgC,aAAL,KACE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAI,KAAKH,KAAL,CAAW9B,WAD5B;AAEE,QAAA,aAAa,EAAI,KAAK6B,aAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAKI,IAbN,CADF;AAiBD;;;;EAtHevC,KAAK,CAACC,S;;AAyHxB,eAAeuB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar.js';\nimport CheckinModal from './components/CheckinModal.js';\nimport FeedTab from './components/FeedTab.js';\nimport HomePage from './components/HomePage.js';\nimport NetworkTab from './components/NetworkTab.js';\nimport UserTab from './components/UserTab.js';\n\nvar data = {\n  baseURL: '',\n  graphicsURL: 'https://zephyo.github.io/treehacks/graphics/',\n  activeTab: 0,\n  userData: null,\n  feed: [\n    \n  ],\n},\n    \nuserBase='users',\n    \nconfig = {\n  apiKey: \"AIzaSyBnWbqZC0wncY06pWlHX8DCbIM_EM9zrE8\",\n  authDomain: \"day-7-messaging.firebaseapp.com\",\n  databaseURL: \"https://day-7-messaging.firebaseio.com\",\n  projectId: \"day-7-messaging\",\n  storageBucket: \"day-7-messaging.appspot.com\",\n  messagingSenderId: \"307150346579\"\n};\n\nfirebase.initializeApp(config);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = data;\n  }\n\n  componentWillMount() {\n    this.setState({\n      firebaseRef: firebase.database().ref(userBase),\n    }, this.update);\n  }\n  \n  setActiveTab = (index) => {\n      this.setState({\n      activeTab: index,\n    });\n  }\n  \n  checkLogin = (user, pass) => {\n    //check against database \n    //if (user)\n    //if valid, set userData\n    this.setState({\n      userData: \n      {\n        profileImage: '',\n        name: 'Gloria Wang',\n        username: 'gloria',\n        lastCheckin: '02/14/2019',\n        checkin: [\n          {\n            q: 'How are you feeling today?',\n            type: 'range',\n          },\n          {\n            q: 'Have you took your medication?',\n            type: 'yesno'\n          }\n        ],\n      },\n    });\n  }\n  \n  // update this.state.lastCheckin as well as input checkin data to feed/database\n  updateCheckin = () => {\n    this.setState({\n    userData: {\n          ...this.state.userData,\n          lastCheckin: moment().format('L')\n        }\n    });\n  }\n  \n  //check this.state.lastCheckin and see whether user has checked in today\n  needToCheckin = () => {\n    if (this.state.userData.lastCheckin != moment().format('L')){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  \n  //logout\n  logout = () => {\n    this.setState({\n    userData: null\n    });\n  }\n  \n  render() {\n    if (this.state.userData === null){\n      return (\n        <HomePage\n          graphicsURL = {this.state.graphicsURL}\n          checkLogin = {this.checkLogin}\n        />\n      );\n    }\n    var activeTab;\n    //active tab is feed\n    if (this.state.activeTab == 0){\n      activeTab = (\n        <FeedTab />\n      );\n    }\n    //active tab is network\n    else if (this.state.activeTab == 1){\n      activeTab = (\n        <NetworkTab />\n      );\n    }\n    //active tab is profile\n    else{\n      activeTab = (\n        <UserTab \n          logout = {this.logout}\n          />\n      );\n    }\n    \n    return (\n      <div className=\"container\">\n        <div className=\"bg\"></div>\n        <div className=\"main-bg-texture\"></div>\n        <NavBar\n           graphicsURL = {this.state.graphicsURL}\n           setActiveTab = {this.setActiveTab}\n          />\n          {activeTab}\n       {this.needToCheckin() ? \n          <CheckinModal \n            graphicsURL = {this.state.graphicsURL}\n            updateCheckin = {this.updateCheckin}\n          /> \n          : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}