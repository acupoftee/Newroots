{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/OnboardingCategories.js\";\nimport React, { Component } from 'react';\n\nvar Button = function Button(props) {\n  return React.createElement(\"button\", {\n    className: \"cont-onboarding\",\n    onClick: props.Listener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: props.Classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nvar OnboardingCategories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OnboardingCategories, _React$Component);\n\n  function OnboardingCategories(props) {\n    var _this;\n\n    _classCallCheck(this, OnboardingCategories);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnboardingCategories).call(this, props));\n\n    _this.changeSelected = function (i, j) {\n      var selected = _this.state.selectedCheckins;\n      selected[i][j] = !selected[i][j];\n\n      _this.setState({\n        selectedCheckins: selected\n      });\n    };\n\n    _this.changeOptions = function (i) {\n      var arr = _this.state.showOptions;\n      arr[i] = !arr[i];\n\n      _this.setState({\n        showOptions: arr\n      });\n    };\n\n    _this.onSubmit = function () {\n      var checkins = [],\n          s = _this.state.selectedCheckins;\n\n      for (var i = 0; i < s.length; i++) {\n        for (var j = 0; j < s[i].length; j++) {\n          if (s[i][j] === true) {\n            checkins.push(_this.state.defCheckins[i][j]);\n          }\n        }\n      }\n\n      _this.props.setCheckins(checkins);\n\n      _this.props.firebase.user(_this.props.uid).update({\n        checkins: checkins\n      });\n    };\n\n    _this.state = {\n      categories: ['mindful', 'relaxation', 'social', 'stress', 'physical'],\n      showOptions: [false, false, false, false, false],\n      defCheckins: [[{\n        q: 'Have you made time to do something you love?',\n        type: 'yes/no'\n      }, {\n        q: 'How loving were you towards yourself?',\n        type: 'range'\n      }, {\n        q: 'What are you grateful for?',\n        type: 'text'\n      }], [{\n        q: 'Have you taken a deep breath today?',\n        type: 'yes/no'\n      }, {\n        q: 'Have you listened to relaxing music?',\n        type: 'yes/no'\n      }, {\n        q: 'Did you spend time in nature?',\n        type: 'yes/no'\n      }], [{\n        q: 'Have you reached out to friends or family today?',\n        type: 'yes/no'\n      }, {\n        q: 'Have you done something for someone else?',\n        type: 'yes/no'\n      }], [{\n        q: 'How overwhelmed do you feel?',\n        type: 'range'\n      }, {\n        q: 'Did you feel anxious about something?',\n        type: 'yes/no'\n      }], [{\n        q: 'How hydrated are you?',\n        type: 'range'\n      }, {\n        q: 'Have you stretched and moved your body?',\n        type: 'yes/no'\n      }, {\n        q: 'How was your sleep?',\n        type: 'range'\n      }]],\n      selectedCheckins: [[false, false, false], [false, false, false], [false, false], [false, false], [false, false, false]]\n    };\n    return _this;\n  }\n\n  _createClass(OnboardingCategories, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          categories = _this$state.categories,\n          showOptions = _this$state.showOptions,\n          defCheckins = _this$state.defCheckins,\n          selectedCheckins = _this$state.selectedCheckins;\n      var checkins = [];\n\n      if (categories && showOptions && defCheckins && selectedCheckins) {\n        for (var i = 0; i < showOptions.length; i++) {\n          var addEl = void 0;\n\n          if (showOptions[i] === true) {\n            addEl = React.createElement(\"div\", {\n              className: \"ob-cat\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, categories[i]), defCheckins[i].map(function (item, j) {\n              var _this2 = this;\n\n              console.log(JSON.stringify(item));\n              var className;\n\n              if (selectedCheckins[i][j] === true) {\n                className = 'ob-cat-opt selected';\n              } else {\n                className = 'ob-cat-opt';\n              }\n\n              var el = null;\n\n              if (item.type == 'text') {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-align-justify\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 165\n                  },\n                  __self: this\n                });\n              } else if (item.type == 'yes/no') {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-brightness\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 170\n                  },\n                  __self: this\n                });\n              } else {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-star\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 174\n                  },\n                  __self: this\n                });\n              }\n\n              return React.createElement(\"button\", {\n                className: className,\n                onClick: function onClick() {\n                  return _this2.changeSelected(i, j);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178\n                },\n                __self: this\n              }, el, item.q);\n            }));\n          } else {\n            addEl = React.createElement(\"button\", {\n              onClick: function onClick() {\n                return _this3.changeOptions(i);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 189\n              },\n              __self: this\n            }, categories[i]);\n          }\n\n          checkins.push(addEl);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"categories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, checkins, React.createElement(Button, {\n        Listener: this.onSubmit,\n        Classes: \"jam jam-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OnboardingCategories;\n}(React.Component);\n\n;\nexport default OnboardingCategories;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/OnboardingCategories.js"],"names":["React","Component","Button","props","Listener","Classes","OnboardingCategories","changeSelected","i","j","selected","state","selectedCheckins","setState","changeOptions","arr","showOptions","onSubmit","checkins","s","length","push","defCheckins","setCheckins","firebase","user","uid","update","categories","q","type","addEl","map","item","console","log","JSON","stringify","className","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst Button = (props) => {\n  return (\n    <button className=\"cont-onboarding\" onClick={props.Listener}>\n      <span className={props.Classes}></span>\n    </button>\n  );\n}\n\nclass OnboardingCategories extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [\n        'mindful',\n        'relaxation',\n        'social',\n        'stress',\n        'physical'\n      ],\n      showOptions: [\n        false,\n        false,\n        false,\n        false,\n        false,\n      ],\n      defCheckins: [\n        [\n          {\n            q: 'Have you made time to do something you love?',\n            type: 'yes/no'\n          },\n          {\n            q: 'How loving were you towards yourself?',\n            type: 'range'\n          },\n          {\n            q: 'What are you grateful for?',\n            type: 'text'\n          }\n        ],\n        [\n          {\n            q: 'Have you taken a deep breath today?',\n            type: 'yes/no'\n          },\n          {\n            q: 'Have you listened to relaxing music?',\n            type: 'yes/no'\n          },\n          {\n            q: 'Did you spend time in nature?',\n            type: 'yes/no'\n          }\n        ],\n        [\n          {\n            q: 'Have you reached out to friends or family today?',\n            type: 'yes/no'\n          },\n          {\n            q: 'Have you done something for someone else?',\n            type: 'yes/no'\n          }\n        ],\n        [\n          {\n            q: 'How overwhelmed do you feel?',\n            type: 'range'\n          },\n          {\n            q: 'Did you feel anxious about something?',\n            type: 'yes/no'\n          }\n        ],\n        [\n          {\n            q: 'How hydrated are you?',\n            type: 'range'\n          },\n          {\n            q: 'Have you stretched and moved your body?',\n            type: 'yes/no'\n          },\n          {\n            q: 'How was your sleep?',\n            type: 'range'\n          },\n        ],\n      ],\n      selectedCheckins: [\n        [false, false, false],\n        [false, false, false],\n        [false, false],\n        [false, false],\n        [false, false, false],\n      ]\n    };\n  }\n\n\n  changeSelected = (i, j) => {\n    let selected = this.state.selectedCheckins;\n    selected[i][j] = !selected[i][j];\n    this.setState({ selectedCheckins: selected })\n  }\n\n  changeOptions = (i) => {\n    let arr = this.state.showOptions;\n    arr[i] = !arr[i];\n    this.setState({ showOptions: arr })\n  }\n\n  onSubmit = () => {\n    let checkins = [], s = this.state.selectedCheckins;\n    for (var i = 0; i < s.length; i++) {\n      for (var j = 0; j < s[i].length; j++) {\n        if (s[i][j] === true) {\n          checkins.push(this.state.defCheckins[i][j])\n        }\n      }\n    }\n    this.props.setCheckins(checkins)\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: checkins\n      });\n  }\n\n\n  render() {\n\n    let { categories, showOptions, defCheckins, selectedCheckins } = this.state;\n\n\n\n    let checkins = [];\n\n    if (categories && showOptions && defCheckins && selectedCheckins) {\n      for (var i = 0; i < showOptions.length; i++) {\n        let addEl;\n        if (showOptions[i] === true) {\n          addEl = (\n            <div className=\"ob-cat\">\n              <button >\n                {categories[i]}\n              </button>\n\n              {defCheckins[i].map(function (item, j) {\n                console.log(JSON.stringify(item));\n                let className;\n\n                if (selectedCheckins[i][j] === true) {\n                  className = 'ob-cat-opt selected'\n                } else {\n                  className = 'ob-cat-opt'\n                }\n\n                let el = null;\n                if (item.type == 'text') {\n                  el = (\n                    <span className=\"jam checkicon jam-align-justify\"></span>\n                  );\n                }\n                else if (item.type == 'yes/no') {\n                  el = (\n                    <span className=\"jam checkicon jam-brightness\"></span>\n                  );\n                } else {\n                  el = (\n                    <span className=\"jam checkicon jam-star\"></span>\n                  );\n                }\n\n                return <button className={className} onClick={() => this.changeSelected(i, j)}>\n                  {el}\n                  {item.q}\n                </button>;\n              })}\n\n            </div>\n          );\n        }\n        else {\n          addEl = (\n            <button onClick={() => this.changeOptions(i)}>\n              {categories[i]}\n            </button>\n          );\n        }\n        checkins.push(addEl);\n      }\n    }\n\n    return (\n      <div className=\"categories\">\n        {checkins}\n\n        <Button\n          Listener={this.onSubmit}\n          Classes=\"jam jam-check\"\n        />\n      </div>\n\n    );\n  }\n};\n\nexport default OnboardingCategories;"]},"metadata":{},"sourceType":"module"}