{"ast":null,"code":"import _defineProperty from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/AddCheckin.js\";\nimport React, { Component } from 'react';\nvar INITIAL_STATE = {\n  q: '',\n  type: 'text'\n};\n\nvar AddCheckin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddCheckin, _React$Component);\n\n  function AddCheckin(props) {\n    var _this;\n\n    _classCallCheck(this, AddCheckin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddCheckin).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.setType = function (type) {\n      _this.setState({\n        type: type\n      });\n    };\n\n    _this.onSubmit = function () {\n      _this.props.setAddMode(false);\n\n      _this.props.addCheckin({\n        q: _this.state.q,\n        type: _this.state.type\n      });\n    };\n\n    _this.onCancel = function () {\n      _this.props.setAddMode(false);\n    };\n\n    _this.state = INITIAL_STATE;\n    return _this;\n  }\n\n  _createClass(AddCheckin, [{\n    key: \"render\",\n    value: function render() {\n      var q = this.state.q;\n      return React.createElement(\"div\", {\n        className: \"add-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add Check-in\"), React.createElement(\"textarea\", {\n        id: \"check-in\",\n        name: \"q\",\n        placeholder: \"What's your check-in?\",\n        value: q,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Check-in type\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-align-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), \" Text\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-brightness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \" Yes/No\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \" Scale\")), React.createElement(\"div\", {\n        className: \"yesno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"yes\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-check\",\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"no\",\n        onClick: this.onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"jam jam-close\",\n        style: {\n          color: '#8A8184'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \"))));\n    }\n  }]);\n\n  return AddCheckin;\n}(React.Component);\n\nexport default AddCheckin;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/AddCheckin.js"],"names":["React","Component","INITIAL_STATE","q","type","AddCheckin","props","onChange","event","setState","target","name","value","setType","onSubmit","setAddMode","addCheckin","state","onCancel","color"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\n\nconst INITIAL_STATE = {\n  q: '',\n  type: 'text',\n};\n\nclass AddCheckin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  setType = (type) => {\n    this.setState({type: type});\n  }\n\n  onSubmit = () => {\n    this.props.setAddMode(false);\n    this.props.addCheckin({\n      q: this.state.q,\n      type: this.state.type\n    });\n  }\n\n  onCancel = () => {\n    this.props.setAddMode(false);\n  }\n\n  render (){ \n    const { q } = this.state;\n\n    return (\n      <div className=\"add-panel\">\n        <h1>Add Check-in</h1>\n        <textarea \n          id=\"check-in\" \n          name=\"q\" \n          placeholder=\"What's your check-in?\" \n          value={q} \n          onChange={this.onChange}>\n        </textarea>\n        <h3>Check-in type</h3>\n        <ul>\n          <li><span className=\"jam jam-align-justify\"></span> Text</li>\n          <li><span className=\"jam jam-brightness\"></span> Yes/No</li>\n          <li><span className=\"jam jam-star\"></span> Scale</li>\n        </ul>\n        <div className=\"yesno\">\n          <button className=\"yes\" onClick = {this.onSubmit}>\n          <span className=\"jam jam-check\"   style={{color: 'white'} }></span></button>\n        <button className=\"no\" onClick = {this.onCancel}>\n          <span className=\"jam jam-close\"   style={{color: '#8A8184'}}> </span></button>\n      </div>\n    </div>\n    );\n  }\n}\n\n\nexport default AddCheckin;"]},"metadata":{},"sourceType":"module"}