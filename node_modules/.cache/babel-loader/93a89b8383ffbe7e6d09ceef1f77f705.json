{"ast":null,"code":"import _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gollyzoom/Documents/GitHub/treehacks/src/components/FeedTab.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\nvar feedListen;\n\nvar FeedTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedTab, _React$Component);\n\n  function FeedTab(props) {\n    _classCallCheck(this, FeedTab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FeedTab).call(this, props));\n  }\n\n  _createClass(FeedTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n      var element = this;\n      var tempFeed = [];\n      feedListen = this.props.firebase.user(this.props.uid).collection(\"feed\").onSnapshot(function (snapshot) {\n        //let tempFeed = [];\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === \"added\") {\n            //console.log(\"New city: \", change.doc.data());\n            tempFeed.push(change.doc.id);\n          }\n        });\n        element.setState({\n          feed: tempFeed\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      feedListen();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*feed = this.props.feed;\n       for (var i = 0; i< feed.length; i++){\n        \n      }*/\n      return React.createElement(\"section\", {\n        className: \"feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"create-thought\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"2\",\n        placeholder: \"Your thoughts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"update\")), React.createElement(\"h1\", {\n        className: \"date-marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"February 15\"), React.createElement(CheckinPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ThoughtPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FeedTab;\n}(React.Component);\n\nexport default FeedTab;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/FeedTab.js"],"names":["React","Component","$","autosize","CheckinPost","ThoughtPost","feedListen","FeedTab","props","element","tempFeed","firebase","user","uid","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","doc","id","setState","feed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAIC,UAAJ;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gFACXA,KADW;AAElB;;;;wCAEmB;AAClBL,MAAAA,QAAQ,CAACD,CAAC,CAAC,UAAD,CAAF,CAAR;AACA,UAAIO,OAAO,GAAG,IAAd;AACA,UAAIC,QAAQ,GAAG,EAAf;AACAJ,MAAAA,UAAU,GAAG,KAAKE,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyB,KAAKJ,KAAL,CAAWK,GAApC,EAAyCC,UAAzC,CAAoD,MAApD,EACVC,UADU,CACC,UAAUC,QAAV,EAAoB;AAC9B;AACAA,QAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8B,UAAUC,MAAV,EAAkB;AAE9C,cAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B;AACAV,YAAAA,QAAQ,CAACW,IAAT,CAAcF,MAAM,CAACG,GAAP,CAAWC,EAAzB;AACD;AAEF,SAPD;AAQAd,QAAAA,OAAO,CAACe,QAAR,CAAiB;AACfC,UAAAA,IAAI,EAAEf;AADS,SAAjB;AAGD,OAdU,CAAb;AAeD;;;2CACsB;AACrBJ,MAAAA,UAAU;AACX;;;6BAEQ;AAEP;;;;AAMA,aACE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,WAAW,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAKE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAOC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,EAQC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,CADF;AAYD;;;;EAjDmBN,KAAK,CAACC,S;;AAoD5B,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\n\nlet feedListen;\n\nclass FeedTab extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    autosize($('textarea'));\n    let element = this;\n    let tempFeed = [];\n    feedListen = this.props.firebase.user(this.props.uid).collection(\"feed\")\n      .onSnapshot(function (snapshot) {\n        //let tempFeed = [];\n        snapshot.docChanges().forEach(function (change) {\n\n          if (change.type === \"added\") {\n            //console.log(\"New city: \", change.doc.data());\n            tempFeed.push(change.doc.id);\n          }\n\n        });\n        element.setState({\n          feed: tempFeed\n        })\n      });\n  }\n  componentWillUnmount() {\n    feedListen();\n  }\n\n  render() {\n\n    /*feed = this.props.feed;\n\n    for (var i = 0; i< feed.length; i++){\n      \n    }*/\n\n    return (\n      <section className=\"feed\">\n        <div className=\"create-thought\">\n          <textarea rows=\"2\" placeholder=\"Your thoughts\"></textarea>\n          <button id=\"update\">update</button>\n        </div>\n        <h1 className=\"date-marker\">February 15</h1>\n\n       <CheckinPost />\n       <ThoughtPost />\n      </section>\n    );\n  }\n}\n\nexport default FeedTab;\n"]},"metadata":{},"sourceType":"module"}