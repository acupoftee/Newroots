{"ast":null,"code":"import _defineProperty from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gollyzoom/Documents/GitHub/treehacks/src/components/AddFriend.js\";\nimport React, { Component } from 'react';\nimport plant from '../graphics/icon.png';\nimport $ from 'jquery';\nimport Avatar from './Avatar';\n\nvar AddFriend =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFriend, _React$Component);\n\n  function AddFriend(props) {\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFriend).call(this, props));\n\n    _this.setAddedFriend = function (mssg) {\n      _this.setState({\n        addedFriend: mssg\n      });\n    };\n\n    _this.setInvitedFriend = function (mssg) {\n      _this.setState({\n        invitedFriend: mssg\n      });\n    };\n\n    _this.addFriend = function () {\n      if (_this.state.loading === true) return;\n      var users = _this.state.networkUsers;\n      var email = $('#add-friend-email').val();\n\n      for (var i = 0; i < users.length; i++) {\n        if (users[i].email == email) {\n          //are they your friend?\n          var index = users.indexOf(users[i].uid);\n\n          if (index > -1) {\n            _this.setAddedFriend(\"you're already friends!\");\n\n            break;\n          } //send request\n\n\n          sendRequest(users[i].uid);\n          break;\n        }\n      }\n\n      _this.setAddedFriend(\"couldn't find \" + email);\n    };\n\n    _this.sendRequest = function (uid) {\n      _this.props.firebase.user(uid).once('value').then(function (snapshot) {\n        var req;\n\n        if (snapshot.val() == null) {\n          req = [];\n        } else {\n          req = snapshot.val().requests;\n        }\n\n        req.push(_this.props.uid);\n\n        var keyref = _this.props.firebase.user(uid).push();\n\n        keyref.update({\n          requests: req\n        });\n      });\n\n      _this.setAddedFriend('sent request!');\n    };\n\n    _this.inviteFriend = function () {\n      _this.setAddedFriend('invited!');\n    };\n\n    _this.acceptRequest = function (uid) {\n      //remove uid from your request\n      // propgate to networktab and app\n      removeRequest(uid); //insert uid to your network array and their network array\n      //propogate backwards - update networktab's state and app's state\n\n      var networkUsers = _this.state.networkUsers;\n      networkUsers.push(uid);\n\n      _this.state.setState({\n        networkUsers: networkUsers\n      });\n\n      _this.props.firebase.user(_this.props.uid).update({\n        network: networkUsers\n      });\n    };\n\n    _this.removeRequest = function (uid) {\n      //remove uid from your requests\n      // update networktab's - update networktab's state and app's state\n      var requestArr = _this.state.requests;\n      var index = requestArr.indexOf(uid);\n\n      if (index > -1) {\n        requestArr.splice(index, 1);\n      }\n\n      var usersArr = _this.state.requestUsers;\n\n      for (var i = 0; i < usersArr.length; i++) {\n        if (usersArr[i].uid == uid) {\n          usersArr.splice(i, 1);\n        }\n      }\n\n      _this.setState({\n        requests: requestArr,\n        requestUsers: usersArr\n      });\n\n      _this.props.firebase.user(_this.props.uid).update({\n        requests: requestArr\n      });\n    };\n\n    _this.loadRequestUsers = function () {\n      _this.setState({\n        loading: true,\n        requestUsers: null\n      });\n\n      var users = [];\n      var counter = 0;\n\n      for (var i = 0; i < _this.state.requests.length; i++) {\n        _this.props.firebase.users(_this.state.requests[i]).get().then(function (doc) {\n          users.push(doc.data());\n\n          _this.setState({\n            requestUsers: users\n          });\n\n          counter++;\n\n          if (counter === _this.state.requests.length) {\n            _this.setState({\n              loading: false\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = _defineProperty({\n      requests: _this.props.requests,\n      requestUsers: null,\n      loading: false,\n      networkUsers: _this.props.networkUsers,\n      addedFriend: '',\n      invitedFriend: ''\n    }, \"loading\", false);\n    return _this;\n  }\n\n  _createClass(AddFriend, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.requestUsers == null && this.state.requests.length > 0) {\n        if (this.state.loading == false) {\n          this.loadRequestUsers();\n        }\n      }\n\n      var addedFriend = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.addedFriend);\n      var invitedFriend = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.invitedFriend);\n      var requests = [];\n\n      var _loop = function _loop() {\n        var uid = _this2.state.requests[i];\n        var user = _this2.state.requestUsers[i];\n        addEl = React.createElement(\"div\", {\n          className: \"preview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          PpfURL: user.PpfURL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, user.name), React.createElement(\"div\", {\n          className: \"yesno\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"yes\",\n          onClick: function onClick() {\n            return _this2.acceptRequest(uid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-check\",\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"no\",\n          onClick: function onClick() {\n            return _this2.removeRequest(uid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jam jam-close\",\n          style: {\n            color: '#8A8184'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \" \"))));\n        requests.push(addEl);\n      };\n\n      for (var i = 0; i < this.state.requestUsers.length; i++) {\n        var addEl;\n\n        _loop();\n      }\n\n      return React.createElement(\"div\", {\n        className: \"modal network\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this2.props.setAddFriend(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, requests ? React.createElement(\"div\", {\n        className: \"scrolling-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, requests) : null, React.createElement(\"span\", {\n        className: \"jam jam-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        src: plant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"add-friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"add friend\"), addedFriend, React.createElement(\"div\", {\n        className: \"network-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"add-friend-email\",\n        type: \"email\",\n        placeholder: \"what's their email?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"send request\"))), React.createElement(\"div\", {\n        className: \"invite-friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"invite friend\"), invitedFriend, React.createElement(\"div\", {\n        className: \"network-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"what's their email?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.inviteFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"send invite\"))));\n    }\n  }]);\n\n  return AddFriend;\n}(React.Component);\n\n;\nexport default AddFriend;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/AddFriend.js"],"names":["React","Component","plant","$","Avatar","AddFriend","props","setAddedFriend","mssg","setState","addedFriend","setInvitedFriend","invitedFriend","addFriend","state","loading","users","networkUsers","email","val","i","length","index","indexOf","uid","sendRequest","firebase","user","once","then","snapshot","req","requests","push","keyref","update","inviteFriend","acceptRequest","removeRequest","network","requestArr","splice","usersArr","requestUsers","loadRequestUsers","counter","get","doc","data","addEl","PpfURL","name","color","setAddFriend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport plant from '../graphics/icon.png';\nimport $ from 'jquery';\nimport Avatar from './Avatar';\n\nclass AddFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: this.props.requests,\n      requestUsers: null,\n      loading: false,\n      networkUsers: this.props.networkUsers,\n      addedFriend: '',\n      invitedFriend: '',\n      loading: false\n    };\n  }\n\n  setAddedFriend = (mssg) => {\n    this.setState({\n      addedFriend: mssg\n    });\n  }\n\n  setInvitedFriend = (mssg) => {\n    this.setState({\n      invitedFriend: mssg\n    });\n  }\n\n  addFriend = () => {\n    if (this.state.loading === true) return;\n\n    let users = this.state.networkUsers;\n    let email = $('#add-friend-email').val();\n\n    for (var i = 0; i < users.length; i++) {\n      if (users[i].email == email) {\n        //are they your friend?\n        let index = users.indexOf(users[i].uid);\n        if (index > -1) {\n          this.setAddedFriend(\"you're already friends!\");\n          break;\n        }\n        //send request\n        sendRequest(users[i].uid);\n        break;\n      }\n    }\n    this.setAddedFriend(\"couldn't find \" + email);\n  };\n\n  sendRequest = (uid) => {\n    this.props.firebase.user(uid).once('value').then((snapshot) => {\n      let req;\n      if (snapshot.val() == null) {\n        req = [];\n      } else {\n        req = snapshot.val().requests;\n      }\n      req.push(this.props.uid);\n      var keyref = this.props.firebase.user(uid).push();\n      keyref.update({\n        requests: req\n      });\n    });\n    this.setAddedFriend('sent request!');\n  }\n\n  inviteFriend = () => {\n    this.setAddedFriend('invited!');\n  };\n\n  acceptRequest = (uid) => {\n    //remove uid from your request\n    // propgate to networktab and app\n    removeRequest(uid);\n    //insert uid to your network array and their network array\n    //propogate backwards - update networktab's state and app's state\n    let networkUsers = this.state.networkUsers;\n    networkUsers.push(uid);\n\n    this.state.setState({ networkUsers: networkUsers });\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        network: networkUsers\n      });\n  }\n\n  removeRequest = (uid) => {\n    //remove uid from your requests\n    // update networktab's - update networktab's state and app's state\n    let requestArr = this.state.requests;\n    let index = requestArr.indexOf(uid);\n    if (index > -1) {\n      requestArr.splice(index, 1);\n    }\n    let usersArr = this.state.requestUsers;\n    for (var i = 0; i < usersArr.length; i++) {\n      if (usersArr[i].uid == uid) {\n        usersArr.splice(i, 1);\n      }\n    }\n    this.setState({ requests: requestArr, requestUsers: usersArr });\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        requests: requestArr\n      });\n  }\n\n  loadRequestUsers = () => {\n    this.setState({ loading: true, requestUsers: null });\n    let users = [];\n    let counter = 0;\n    for (var i = 0; i < this.state.requests.length; i++) {\n      this.props.firebase\n        .users(this.state.requests[i]).get().then((doc) => {\n          users.push(doc.data());\n          this.setState({ requestUsers: users });\n          counter++;\n          if (counter === this.state.requests.length) {\n            this.setState({ loading: false });\n          }\n        });\n    }\n  }\n\n  render() {\n    if (this.state.requestUsers == null && this.state.requests.length > 0) {\n      if (this.state.loading == false) {\n        this.loadRequestUsers();\n      }\n    }\n\n    let addedFriend = (\n      <p>\n        {this.state.addedFriend}\n      </p>\n    );\n\n    let invitedFriend = (\n      <p>\n        {this.state.invitedFriend}\n      </p>\n    );\n\n    let requests = [];\n    for (var i = 0; i < this.state.requestUsers.length; i++) {\n      let uid = this.state.requests[i];\n      let user = this.state.requestUsers[i];\n      var addEl = (\n        <div className=\"preview\">\n          <Avatar PpfURL={user.PpfURL} />\n          <p>{user.name}</p>\n          <div className=\"yesno\">\n            <button className=\"yes\" onClick={() => this.acceptRequest(uid)}>\n              <span className=\"jam jam-check\" style={{ color: 'white' }}></span>\n            </button>\n            <button className=\"no\" onClick={() => this.removeRequest(uid)}>\n              <span className=\"jam jam-close\" style={{ color: '#8A8184' }}> </span>\n            </button>\n          </div>\n        </div>\n      );\n      requests.push(addEl);\n    }\n\n    return (\n      <div className=\"modal network\">\n        <button className=\"close\" onClick={() => this.props.setAddFriend(false)}>\n\n          {requests ? <div className=\"scrolling-row\">{requests}</div> : null}\n\n          <span className=\"jam jam-close\"></span>\n        </button>\n        <img src={plant}></img>\n        <div className=\"add-friend\">\n          <h2>add friend</h2>\n          {addedFriend}\n          <div className=\"network-input\">\n            <input id=\"add-friend-email\" type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.addFriend}>send request</button>\n          </div>\n        </div>\n        <div className=\"invite-friend\">\n          <h2>invite friend</h2>\n          {invitedFriend}\n          <div className=\"network-input\">\n            <input type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.inviteFriend}>send invite</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default AddFriend;"]},"metadata":{},"sourceType":"module"}