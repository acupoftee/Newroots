{"ast":null,"code":"import _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gollyzoom/Documents/GitHub/treehacks/src/components/FeedTab.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\nvar feedListen;\n\nvar FeedTab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedTab, _React$Component);\n\n  function FeedTab(props) {\n    var _this;\n\n    _classCallCheck(this, FeedTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedTab).call(this, props));\n    _this.state = {\n      thoughts: [],\n      checkins: [] //this.processTime = this.processTime.bind(this);\n\n    };\n    return _this;\n  }\n  /*processTime(time){\n      current = + new Date();\n      if((current - time) < 60){\n          return \"a few seconds ago\"\n      }\n      else if((current - time) < 240){\n          return \"a few minutes ago\"\n      }\n      else{\n          var curr_date = new Date(current);\n          var given_date = new Date(time);\n          if((curr_date.getFullYear - given_date.getFullYear) != 0){\n              return \n          }\n      }\n      \n        // Hours part from the timestamp\n      var hours = date.getHours();\n        // Minutes part from the timestamp\n      var minutes = \"0\" + date.getMinutes();\n        // Seconds part from the timestamp\n      var seconds = \"0\" + date.getSeconds();\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n  }*/\n\n\n  _createClass(FeedTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      autosize($('textarea'));\n      var element = this;\n      var tempFeed = [];\n      var tempCheckins = [];\n      var tempThoughts = [];\n      feedListen = this.props.firebase.user(this.props.uid).collection(\"feed\").onSnapshot(function (snapshot) {\n        //let tempFeed = [];\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === \"added\") {\n            //console.log(\"New city: \", change.doc.data());\n            tempFeed.push(change.doc.id);\n\n            if (change.doc.data().checkin) {\n              tempCheckins.push({\n                name: change.doc.data().author,\n                timestamp: +new Date(),\n                ismyPost: element.props.uid == change.doc.data().author_uid,\n                checkinData: JSON.parse(change.doc.data().checkinData)\n              });\n            }\n          }\n        });\n        console.log(tempCheckins);\n        element.setState({\n          feed: tempFeed,\n          checkins: tempCheckins\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      feedListen();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*feed = this.props.feed;\n       for (var i = 0; i< feed.length; i++){\n        \n      }*/\n      return React.createElement(\"section\", {\n        className: \"feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"create-thought\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"2\",\n        placeholder: \"Your thoughts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"update\")), React.createElement(\"h1\", {\n        className: \"date-marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"February 15\"), React.createElement(CheckinPost, {\n        props: this.state.checkins[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })\n      /*<ThoughtPost /> */\n      );\n    }\n  }]);\n\n  return FeedTab;\n}(React.Component);\n\nexport default FeedTab;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/FeedTab.js"],"names":["React","Component","$","autosize","CheckinPost","ThoughtPost","feedListen","FeedTab","props","state","thoughts","checkins","element","tempFeed","tempCheckins","tempThoughts","firebase","user","uid","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","doc","id","data","checkin","name","author","timestamp","Date","ismyPost","author_uid","checkinData","JSON","parse","console","log","setState","feed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\n\nlet feedListen;\n\nclass FeedTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n        thoughts:[],\n        checkins:[]\n    }\n    //this.processTime = this.processTime.bind(this);\n  }\n  /*processTime(time){\n      current = + new Date();\n      if((current - time) < 60){\n          return \"a few seconds ago\"\n      }\n      else if((current - time) < 240){\n          return \"a few minutes ago\"\n      }\n      else{\n          var curr_date = new Date(current);\n          var given_date = new Date(time);\n          if((curr_date.getFullYear - given_date.getFullYear) != 0){\n              return \n          }\n      }\n      \n        // Hours part from the timestamp\n      var hours = date.getHours();\n        // Minutes part from the timestamp\n      var minutes = \"0\" + date.getMinutes();\n        // Seconds part from the timestamp\n      var seconds = \"0\" + date.getSeconds();\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n  }*/\n  componentDidMount() {\n    autosize($('textarea'));\n    let element = this;\n    let tempFeed = [];\n    let tempCheckins = [];\n    let tempThoughts = [];\n    feedListen = this.props.firebase.user(this.props.uid).collection(\"feed\")\n      .onSnapshot(function (snapshot) {\n        //let tempFeed = [];\n        snapshot.docChanges().forEach(function (change) {\n\n          if (change.type === \"added\") {\n            //console.log(\"New city: \", change.doc.data());\n            tempFeed.push(change.doc.id);\n              if(change.doc.data().checkin){\n                  tempCheckins.push({\n                      name:change.doc.data().author,\n                      timestamp:+ new Date(),\n                      ismyPost:(element.props.uid == change.doc.data().author_uid),\n                      checkinData:JSON.parse(change.doc.data().checkinData)\n                  })\n              }\n          }\n\n        });\n        console.log(tempCheckins);\n        element.setState({\n          feed: tempFeed,\n          checkins: tempCheckins\n        })\n      });\n  }\n  componentWillUnmount() {\n    feedListen();\n  }\n\n  render() {\n\n    /*feed = this.props.feed;\n\n    for (var i = 0; i< feed.length; i++){\n      \n    }*/\n\n    return (\n      <section className=\"feed\">\n        <div className=\"create-thought\">\n          <textarea rows=\"2\" placeholder=\"Your thoughts\"></textarea>\n          <button id=\"update\">update</button>\n        </div>\n        <h1 className=\"date-marker\">February 15</h1>\n\n       {<CheckinPost props={this.state.checkins[0]} />\n       /*<ThoughtPost /> */}\n      </section>\n    );\n  }\n}\n\nexport default FeedTab;\n"]},"metadata":{},"sourceType":"module"}