{"ast":null,"code":"import _classCallCheck from \"/Users/gollyzoom/Documents/GitHub/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nvar config = {\n  apiKey: \"AIzaSyAE-aLJJ6ihwSxicksB67Yeg_84vE4J_wM\",\n  authDomain: \"treehacks2019.firebaseapp.com\",\n  databaseURL: \"https://treehacks2019.firebaseio.com\",\n  projectId: \"treehacks2019\",\n  storageBucket: \"treehacks2019.appspot.com\",\n  messagingSenderId: \"50059105382\"\n};\n\nvar Firebase = function Firebase() {\n  var _this = this;\n\n  _classCallCheck(this, Firebase);\n\n  this.doCreateUserWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.doSignInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.doSignOut = function () {\n    return _this.auth.signOut();\n  };\n\n  this.doPasswordReset = function (email) {\n    return _this.auth.sendPasswordResetEmail(email);\n  };\n\n  this.doPasswordUpdate = function (password) {\n    return _this.auth.currentUser.updatePassword(password);\n  };\n\n  this.user = function (uid) {\n    return _this.fs.collection('users').doc(uid);\n  };\n\n  this.users = function () {\n    return _this.db.collection('users');\n  };\n\n  this.feed = function (uid) {\n    return _this.db.collection(\"users\").doc(uid).collection('feed');\n  };\n\n  this.photos = function () {\n    return _this.store.ref('photos');\n  };\n\n  app.initializeApp(config);\n  this.auth = app.auth();\n  this.db = app.database();\n  this.store = app.storage();\n  this.fs = app.firestore();\n} // *** Auth API ***\n;\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/gollyzoom/Documents/GitHub/treehacks/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","fs","collection","doc","users","db","feed","photos","store","ref","initializeApp","database","storage","firestore"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,kBAAP;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE;AANN,CAAf;;IASMC,Q,GACJ,oBAAc;AAAA;;AAAA;;AAAA,OAUdC,gCAVc,GAUqB,UAACC,KAAD,EAAQC,QAAR;AAAA,WACjC,KAAI,CAACC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CADiC;AAAA,GAVrB;;AAAA,OAadG,4BAbc,GAaiB,UAACJ,KAAD,EAAQC,QAAR;AAAA,WAC7B,KAAI,CAACC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAD6B;AAAA,GAbjB;;AAAA,OAgBdK,SAhBc,GAgBF;AAAA,WAAM,KAAI,CAACJ,IAAL,CAAUK,OAAV,EAAN;AAAA,GAhBE;;AAAA,OAkBdC,eAlBc,GAkBI,UAAAR,KAAK;AAAA,WAAI,KAAI,CAACE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAAJ;AAAA,GAlBT;;AAAA,OAoBdU,gBApBc,GAoBK,UAAAT,QAAQ;AAAA,WACzB,KAAI,CAACC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CADyB;AAAA,GApBb;;AAAA,OA+BdY,IA/Bc,GA+BP,UAAAC,GAAG;AAAA,WAAI,KAAI,CAACC,EAAL,CAAQC,UAAR,CAAmB,OAAnB,EAA4BC,GAA5B,CAAgCH,GAAhC,CAAJ;AAAA,GA/BI;;AAAA,OAiCdI,KAjCc,GAiCN;AAAA,WAAM,KAAI,CAACC,EAAL,CAAQH,UAAR,CAAmB,OAAnB,CAAN;AAAA,GAjCM;;AAAA,OAmCdI,IAnCc,GAmCP,UAAAN,GAAG;AAAA,WAAI,KAAI,CAACK,EAAL,CAAQH,UAAR,CAAmB,OAAnB,EAA4BC,GAA5B,CAAgCH,GAAhC,EAAqCE,UAArC,CAAgD,MAAhD,CAAJ;AAAA,GAnCI;;AAAA,OAqCdK,MArCc,GAqCL;AAAA,WAAM,KAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,QAAf,CAAN;AAAA,GArCK;;AACZjC,EAAAA,GAAG,CAACkC,aAAJ,CAAkBjC,MAAlB;AACA,OAAKW,IAAL,GAAYZ,GAAG,CAACY,IAAJ,EAAZ;AACA,OAAKiB,EAAL,GAAU7B,GAAG,CAACmC,QAAJ,EAAV;AACA,OAAKH,KAAL,GAAahC,GAAG,CAACoC,OAAJ,EAAb;AACA,OAAKX,EAAL,GAAUzB,GAAG,CAACqC,SAAJ,EAAV;AACD,C,CAED;;;AAiCF,eAAe7B,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: \"AIzaSyAE-aLJJ6ihwSxicksB67Yeg_84vE4J_wM\",\n  authDomain: \"treehacks2019.firebaseapp.com\",\n  databaseURL: \"https://treehacks2019.firebaseio.com\",\n  projectId: \"treehacks2019\",\n  storageBucket: \"treehacks2019.appspot.com\",\n  messagingSenderId: \"50059105382\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n    this.store = app.storage();\n    this.fs = app.firestore();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password); \n  \n  doSignOut = () => this.auth.signOut();  \n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  /*user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  feed = () => this.db.ref('feed');*/\n\n  user = uid => this.fs.collection('users').doc(uid);\n\n  users = () => this.db.collection('users');\n\n  feed = uid => this.db.collection(\"users\").doc(uid).collection('feed');\n\n  photos = () => this.store.ref('photos');\n}\n\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}