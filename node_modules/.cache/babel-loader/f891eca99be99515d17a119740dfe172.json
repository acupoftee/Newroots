{"ast":null,"code":"import _classCallCheck from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Angela He/treehacks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Angela He/treehacks/src/components/OnboardingCategories.js\";\nimport React, { Component } from 'react';\n\nvar Button = function Button(props) {\n  return React.createElement(\"button\", {\n    className: \"cont-onboarding\",\n    onClick: props.Listener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: props.Classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nvar INITIAL_STATE = {\n  categories: ['mindful', 'relaxation', 'social', 'stress', 'physical'],\n  showOptions: [false, false, false, false, false],\n  defCheckins: [{\n    qs: [{\n      q: 'Have you made time to do something you love?',\n      type: 'yes/no'\n    }, {\n      q: 'How loving were you towards yourself?',\n      type: 'range'\n    }, {\n      q: 'What are you grateful for?',\n      type: 'text'\n    }]\n  }],\n  selectedCheckins: [[false, false, false], [false, false, false], [false, false], [false, false], [false, false, false]]\n};\n\nvar OnboardingCategories =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OnboardingCategories, _React$Component);\n\n  function OnboardingCategories(props) {\n    var _this;\n\n    _classCallCheck(this, OnboardingCategories);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnboardingCategories).call(this, props));\n\n    _this.changeSelected = function (i, j) {\n      var selected = _this.state.selectedCheckins;\n      selected[i][j] = !selected[i][j];\n\n      _this.setState({\n        selectedCheckins: selected\n      });\n    };\n\n    _this.changeOptions = function (i) {\n      var arr = _this.state.showOptions;\n      arr[i] = !arr[i];\n\n      _this.setState({\n        showOptions: arr\n      });\n    };\n\n    _this.onSubmit = function () {\n      var checkins = [],\n          s = _this.state.selectedCheckins;\n\n      for (var i = 0; i < s.length; i++) {\n        for (var j = 0; j < s[i].length; j++) {\n          if (s[i][j] === true) {\n            checkins.push(_this.state.defCheckins[i][j]);\n          }\n        }\n      }\n\n      _this.props.setCheckins(checkins);\n\n      _this.props.firebase.user(_this.props.uid).update({\n        checkins: checkins\n      });\n    };\n\n    _this.state = INITIAL_STATE;\n    return _this;\n  }\n\n  _createClass(OnboardingCategories, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          categories = _this$state.categories,\n          showOptions = _this$state.showOptions,\n          defCheckins = _this$state.defCheckins,\n          selectedCheckins = _this$state.selectedCheckins;\n      console.log('hi ' + JSON.stringify(defCheckins));\n      var checkins = [];\n\n      if (categories && showOptions && defCheckins && selectedCheckins) {\n        for (var i = 0; i < showOptions.length; i++) {\n          var addEl = void 0;\n\n          if (showOptions[i] === true) {\n            var arr = defCheckins[i].qs;\n            console.log(JSON.stringify(arr));\n            var defCh = arr.map(function (item, j) {\n              var _this2 = this;\n\n              console.log(JSON.stringify(item));\n              var className;\n\n              if (selectedCheckins[i][j] === true) {\n                className = 'ob-cat-opt selected';\n              } else {\n                className = 'ob-cat-opt';\n              }\n\n              var el = null;\n\n              if (item.type == 'text') {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-align-justify\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 166\n                  },\n                  __self: this\n                });\n              } else if (item.type == 'yes/no') {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-brightness\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 171\n                  },\n                  __self: this\n                });\n              } else {\n                el = React.createElement(\"span\", {\n                  className: \"jam checkicon jam-star\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 175\n                  },\n                  __self: this\n                });\n              }\n\n              return React.createElement(\"button\", {\n                className: className,\n                onClick: function onClick() {\n                  return _this2.changeSelected(i, j);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179\n                },\n                __self: this\n              }, el, item.q);\n            });\n            addEl = React.createElement(\"div\", {\n              className: \"ob-cat\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188\n              },\n              __self: this\n            }, categories[i]), defCh);\n          } else {\n            addEl = React.createElement(\"button\", {\n              onClick: function onClick() {\n                return _this3.changeOptions(i);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199\n              },\n              __self: this\n            }, categories[i]);\n          }\n\n          checkins.push(addEl);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"categories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, checkins, React.createElement(Button, {\n        Listener: this.onSubmit,\n        Classes: \"jam jam-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OnboardingCategories;\n}(React.Component);\n\n;\nexport default OnboardingCategories;","map":{"version":3,"sources":["/Volumes/Angela He/treehacks/src/components/OnboardingCategories.js"],"names":["React","Component","Button","props","Listener","Classes","INITIAL_STATE","categories","showOptions","defCheckins","qs","q","type","selectedCheckins","OnboardingCategories","changeSelected","i","j","selected","state","setState","changeOptions","arr","onSubmit","checkins","s","length","push","setCheckins","firebase","user","uid","update","console","log","JSON","stringify","addEl","defCh","map","item","className","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst Button = (props) => {\n  return (\n    <button className=\"cont-onboarding\" onClick={props.Listener}>\n      <span className={props.Classes}></span>\n    </button>\n  );\n}\n\nconst INITIAL_STATE = {\n  categories: [\n    'mindful',\n    'relaxation',\n    'social',\n    'stress',\n    'physical'\n  ],\n  showOptions: [\n    false,\n    false,\n    false,\n    false,\n    false,\n  ],\n  defCheckins: [\n    {\n      qs:\n        [{\n          q: 'Have you made time to do something you love?',\n          type: 'yes/no'\n        },\n        {\n          q: 'How loving were you towards yourself?',\n          type: 'range'\n        },\n        {\n          q: 'What are you grateful for?',\n          type: 'text'\n        }]\n    },\n    // [\n    //   {\n    //     q: 'Have you taken a deep breath today?',\n    //     type: 'yes/no'\n    //   },\n    //   {\n    //     q: 'Have you listened to relaxing music?',\n    //     type: 'yes/no'\n    //   },\n    //   {\n    //     q: 'Did you spend time in nature?',\n    //     type: 'yes/no'\n    //   }\n    // ],\n    // [\n    //   {\n    //     q: 'Have you reached out to friends or family today?',\n    //     type: 'yes/no'\n    //   },\n    //   {\n    //     q: 'Have you done something for someone else?',\n    //     type: 'yes/no'\n    //   }\n    // ],\n    // [\n    //   {\n    //     q: 'How overwhelmed do you feel?',\n    //     type: 'range'\n    //   },\n    //   {\n    //     q: 'Did you feel anxious about something?',\n    //     type: 'yes/no'\n    //   }\n    // ],\n    // [\n    //   {\n    //     q: 'How hydrated are you?',\n    //     type: 'range'\n    //   },\n    //   {\n    //     q: 'Have you stretched and moved your body?',\n    //     type: 'yes/no'\n    //   },\n    //   {\n    //     q: 'How was your sleep?',\n    //     type: 'range'\n    //   },\n    // ],\n  ],\n  selectedCheckins: [\n    [false, false, false],\n    [false, false, false],\n    [false, false],\n    [false, false],\n    [false, false, false],\n  ]\n};\n\nclass OnboardingCategories extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n\n  changeSelected = (i, j) => {\n    let selected = this.state.selectedCheckins;\n    selected[i][j] = !selected[i][j];\n    this.setState({ selectedCheckins: selected })\n  }\n\n  changeOptions = (i) => {\n    let arr = this.state.showOptions;\n    arr[i] = !arr[i];\n    this.setState({ showOptions: arr })\n  }\n\n  onSubmit = () => {\n    let checkins = [], s = this.state.selectedCheckins;\n    for (var i = 0; i < s.length; i++) {\n      for (var j = 0; j < s[i].length; j++) {\n        if (s[i][j] === true) {\n          checkins.push(this.state.defCheckins[i][j])\n        }\n      }\n    }\n    this.props.setCheckins(checkins)\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: checkins\n      });\n  }\n\n\n  render() {\n\n    let { categories, showOptions, defCheckins, selectedCheckins } = this.state;\n\n    console.log('hi ' + JSON.stringify(defCheckins));\n\n    let checkins = [];\n\n    if (categories && showOptions && defCheckins && selectedCheckins) {\n      for (var i = 0; i < showOptions.length; i++) {\n\n        let addEl;\n\n        if (showOptions[i] === true) {\n          var arr = defCheckins[i].qs;\n          console.log(JSON.stringify(arr));\n          var defCh = arr.map(function (item, j) {\n            console.log(JSON.stringify(item));\n            let className;\n\n            if (selectedCheckins[i][j] === true) {\n              className = 'ob-cat-opt selected'\n            } else {\n              className = 'ob-cat-opt'\n            }\n\n            let el = null;\n            if (item.type == 'text') {\n              el = (\n                <span className=\"jam checkicon jam-align-justify\"></span>\n              );\n            }\n            else if (item.type == 'yes/no') {\n              el = (\n                <span className=\"jam checkicon jam-brightness\"></span>\n              );\n            } else {\n              el = (\n                <span className=\"jam checkicon jam-star\"></span>\n              );\n            }\n\n            return <button className={className} onClick={() => this.changeSelected(i, j)}>\n              {el}\n              {item.q}\n            </button>;\n          });\n\n\n          addEl = (\n            <div className=\"ob-cat\">\n              <button >\n                {categories[i]}\n              </button>\n\n              {defCh}\n\n            </div>\n          );\n        }\n        else {\n          addEl = (\n            <button onClick={() => this.changeOptions(i)}>\n              {categories[i]}\n            </button>\n          );\n        }\n        checkins.push(addEl);\n      }\n    }\n\n    return (\n      <div className=\"categories\">\n        {checkins}\n\n        <Button\n          Listener={this.onSubmit}\n          Classes=\"jam jam-check\"\n        />\n      </div>\n\n    );\n  }\n};\n\nexport default OnboardingCategories;"]},"metadata":{},"sourceType":"module"}