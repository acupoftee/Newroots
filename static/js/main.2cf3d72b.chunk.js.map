{"version":3,"sources":["components/FeedTab.js","components/NavBar.js","components/CheckinModal.js","components/Avatar.js","components/CommentBox.js","components/CommentBut.js","components/Conversation.js","components/Comments.js","components/CheckinPost.js","components/ThoughtPost.js","components/ThoughtInput.js","components/ErrorMsg.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignupForm.js","components/LoginForm.js","components/HomePage.js","components/AddFriend.js","components/NetworkTab.js","components/AddCheckin.js","components/UserTab.js","components/OnboardingCategories.js","components/Onboarding.js","App.js","serviceWorker.js","index.js","graphics/icon.png","graphics/flower.png","graphics/thing.png","graphics/1.png","graphics/3.png","graphics/plants.png","graphics/hero.gif","graphics/2.png"],"names":["feedListen","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setAddFriend","bool","setState","addFriend","state","requestsLength","_this2","firebase","user","uid","onSnapshot","doc","data","requests","length","_this3","networkNotif","react_default","a","createElement","className","src","icon","id","onClick","setActiveTab","style","color","React","Component","TextQ","q","rows","placeholder","onChange","event","setAnswer","target","value","index","YesNoQ","answer","yesClass","noClass","setComment","RangeQ","$","each","range","parent","find","p","hide","focusin","css","val","show","focusout","on","text","type","min","max","CheckinModal","_this4","incrementCurrIndex","i","currIndex","checkinIndex","checkins","comment","saveCheckinData","time","moment","format","network","PpfURL","undefined","name","checkin","checkinData","timestamp","Date","toString","feed","add","then","docRef","set","posts","update","lastCheckin","updateCheckin","checkinQs","addEl","CheckinModal_TextQ","CheckinModal_YesNoQ","CheckinModal_RangeQ","push","submitButton","texture1","texture2","Avatar","picStyle","backgroundImage","content","CommentBox","commentBox","submitComment","poster","message","post","postid","collection","ref","el","disabled","CommentBut","loadComments","commentLength","Conversation","classN","isMyPost","components_Avatar","Comments","console","log","showComments","convo","conversation","msg","components_Conversation","CheckinPost","loadedComments","tempConvo","get","querySnapshot","forEach","dat","conversationLength","snapshot","docChanges","change","size","editButton","posterUid","components_CommentBut","components_Comments","components_CommentBox","yourPpfURL","ThoughtPost","thought","ThoughtInput","onThoughtChange","onSubmit","ErrorMsg","header","FeedTab","thoughts","autosize","element","tempFeed","tempCheckins","tempThoughts","unshift","comments","comm_cont","JSON","stringify","checkinItems","map","components_CheckinPost","key","thoughtItems","components_ThoughtPost","components_ThoughtInput","components_ErrorMsg","graphics1","FirebaseContext","createContext","withFirebase","Consumer","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","fs","users","photos","store","app","initializeApp","storage","firestore","INITIAL_STATE","passwordOne","error","SignupForm","defineProperty","ID","_this$state","assertThisInitialized","default_vals","authUser","objectSpread","SignUp","catch","_this$state2","isInvalid","setSignUp","LoginForm","checkLogin","setLogin","SignUpFormFB","LoginFormFB","HomePage","signingUp","loggingIn","hero","plants","AddFriend","setAddedFriend","mssg","addedFriend","setInvitedFriend","invitedFriend","where","docs","FieldValue","arrayUnion","err","inviteFriend","acceptRequest","removeRequest","arrayRemove","requestUsers","splice","loadRequestUsers","loading","counter","req","allUsers","_loop","plant","AddFriendFB","NetworkTab","filterNetwork","setRequests","setNetworkUsers","networkUsers","loadNetworkUsers","prev","filter","indexOf","setNetwork","alert","graphics3","dropdown","AddCheckin","setType","setAddMode","addCheckin","setDropdown","onCancel","dropdownEl","LogoutButtonFB","logout","CheckInRow","trash","removeCheckinAt","UserTab","setEditMode","editMode","NameVal","setName","addMode","obj","arr","setCheckins","uploadPpf","firstFile","files","task","put","bytesTransferred","totalBytes","getDownloadURL","downloadURL","setPpfURL","cornerButton","pic","addQ","accept","for","UserTab_CheckInRow","components_AddCheckin","Button","Listener","Classes","defCheckins","categories","showOptions","selectedCheckins","OnboardingCategoriesFB","OnboardingCategories","changeSelected","j","selected","changeOptions","s","incrementPage","ii","defCh","_loop2","item","tru","class","OnboardingCategories_Button","Onboarding","page","enableNotif","button","Onboarding_Button","htmlFor","graphics2","setOnboarding","UserTabFB","NetworkTabFB","NavBarFB","FeedTabFB","CheckinModalFB","baseURL","activeTab","userData","onboarding","App","fillFeed","needToCheckin","components_HomePage","components_Onboarding","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"6IAWIA,uIC6CWC,cApDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAeRQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CACZC,UAAWF,KAhBbR,EAAKW,MAAQ,CACXC,eAAgBb,EAAMa,gBAHPZ,mFAOC,IAAAa,EAAAV,KAEAA,KAAKJ,MAAMe,SAASC,KAAKZ,KAAKJ,MAAMiB,KAE1CC,WAAW,SAACC,GACtBL,EAAKJ,SAAS,CAAEG,eAAgBM,EAAIC,OAAOC,SAASC,4CAU/C,IAAAC,EAAAnB,KACHoB,EAAe,KAMnB,OALIpB,KAAKQ,MAAMC,eAAiB,IAC9BW,EACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASxB,KAAKQ,MAAMC,iBAItCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKC,MAC/BL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,WACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,0BAEAH,EAAAC,EAAAC,cAAA,UAAQI,GAAG,WAAWC,QAAS,kBAAMT,EAAKvB,MAAMiC,aAAa,KAC3DR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBM,MAAO,CAAEC,MAAO,cACzDV,EAAAC,EAAAC,cAAA,UAAQI,GAAG,cAAcC,QAAS,kBAAMT,EAAKvB,MAAMiC,aAAa,KAC9DR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAC7CX,IAILC,EAAAC,EAAAC,cAAA,UAAQI,GAAG,WAAWC,QAAS,kBAAMT,EAAKvB,MAAMiC,aAAa,KAC7DR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeM,MAAO,CAAEC,MAAO,uBA9CpCC,IAAMC,6CCKrBC,EAAQ,SAACtC,GACb,OACEyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAK3B,EAAMuC,GACXd,EAAAC,EAAAC,cAAA,YAAUC,UAAU,WAAWY,KAAK,IAAIC,YAAY,YAClDC,SAAU,SAACC,GAAD,OAAW3C,EAAM4C,UAAUD,EAAME,OAAOC,MAAO9C,EAAM+C,YAKjEC,cACJ,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjB/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KACDY,MAAQ,CACXqC,OAAQ,MAHOhD,wEAMV,IAAAa,EAAAV,KACH8C,EAAW,MAAOC,EAAU,KAAMF,EAAS7C,KAAKQ,MAAMqC,OAM1D,MALc,OAAVA,EACFE,GAAW,YACQ,MAAVF,IACTC,GAAY,aAGZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAKvB,KAAKJ,MAAMuC,GAChBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAWsB,EACjBlB,QAAS,WACPlB,EAAKJ,SAAS,CAAEuC,OAAQ,QACxBnC,EAAKd,MAAM4C,UAAU,MAAO9B,EAAKd,MAAM+C,SAEzCtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAElDV,EAAAC,EAAAC,cAAA,UAAQC,UAAWuB,EACjBnB,QAAS,WACPlB,EAAKJ,SAAS,CAAEuC,OAAQ,OACxBnC,EAAKd,MAAM4C,UAAU,KAAM9B,EAAKd,MAAM+C,SAExCtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAAhD,OAGJV,EAAAC,EAAAC,cAAA,YACEC,UAAU,WACVY,KAAK,IACLC,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAW7B,EAAKd,MAAMoD,WAAWT,EAAO7B,EAAKd,MAAM+C,kBArClDX,IAAMC,WA4CrBgB,cACJ,SAAAA,EAAYrD,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,GAAAnD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KACZJ,qFAINsD,IAAE,uBAAuBC,KAAK,SAAUR,GACtC,IAAIS,EAAQF,IAAElD,MAAMqD,SAASC,KAAK,cAC9BC,EAAIL,IAAEE,GAAOE,KAAK,KACtBJ,IAAEE,GAAOI,OAETN,IAAElD,MAAMyD,QAAQ,WACdP,IAAEE,GAAOM,IAAI,OAAS,QAAU,GAAAR,IAAElD,MAAM2D,MAAmB,IAAO,aAClET,IAAEE,GAAOQ,SAGXV,IAAElD,MAAM6D,SAAS,WACfX,IAAEE,GAAOI,SAGXN,IAAElD,MAAM8D,GAAG,QAAS,WAClBZ,IAAEE,GAAOM,IAAI,OAAS,QAAU,GAAAR,IAAElD,MAAM2D,MAAmB,IAAO,aAClET,IAAEK,GAAGQ,KAAKb,IAAElD,MAAM2D,4CAKf,IAAAxC,EAAAnB,KACP,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAKvB,KAAKJ,MAAMuC,GAChBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,QACVC,IAAI,IACJC,IAAI,KACJxB,MAAO1C,KAAKJ,MAAM+D,IAClBrB,SAAU,SAACC,GAAD,OAAWpB,EAAKvB,MAAM4C,UAAUD,EAAME,OAAOC,MAAOvB,EAAKvB,MAAM+C,UAC3EtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,eAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,kBAAgBF,EAAAC,EAAAC,cAAA,oBAEvCF,EAAAC,EAAAC,cAAA,YACEC,UAAU,WACVY,KAAK,IACLC,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAWpB,EAAKvB,MAAMoD,WAAWT,EAAOpB,EAAKvB,MAAM+C,kBA9ClDX,IAAMC,WA+MZkC,cA1Jb,SAAAA,EAAYvE,GAAO,IAAAwE,EAAA,OAAAtE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjBC,EAAAtE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KASRyE,mBAAqB,WACnB,IAAIC,EAAIF,EAAK5D,MAAM+D,UACnBH,EAAK9D,SAAS,CAAEiE,UAAWD,EAAI,KAZdF,EAenB5B,UAAY,SAACK,EAAQ2B,GACnB,IAAIC,EAAWL,EAAK5D,MAAMiE,SAC1BA,EAASD,GAAc3B,OAASA,EAEhCuB,EAAK9D,SAAS,CAAEmE,SAAUA,KAnBTL,EAsBnBpB,WAAa,SAACT,EAAOiC,GACnB,IAAIC,EAAWL,EAAK5D,MAAMiE,SAC1BA,EAASD,GAAcE,QAAUnC,EAAME,OAAOC,MAE9C0B,EAAK9D,SAAS,CAAEmE,SAAUA,KA1BTL,EA+BnBO,gBAAkB,WAChB,IAAIC,EAAOC,MAASC,OAAO,KAE3B,GAAmC,IAA/BV,EAAK5D,MAAMiE,SAASvD,OAAc,CAEpC,IAAI6D,EAAUX,EAAKxE,MAAMmF,QAErB/D,EAAO,CACTgE,YAFiCC,IAAtBb,EAAKxE,MAAMoF,OAAuB,KAAOZ,EAAKxE,MAAMoF,OAG/DE,KAAMd,EAAKxE,MAAMsF,KACjBrE,IAAKuD,EAAKxE,MAAMiB,IAChBsE,SAAS,EACTC,YAAahB,EAAK5D,MAAMiE,SACxBY,WAAW,IAAIC,MAAOC,YAIxBnB,EAAKxE,MAAMe,SAAS6E,KAAKpB,EAAKxE,MAAMiB,KAAK4E,IAAIzE,GAAM0E,KAAK,SAACC,GAEvD,IADA,IAAIhE,EAAKgE,EAAOhE,GACP2C,EAAI,EAAGA,EAAIS,EAAQ7D,OAAQoD,IAClCF,EAAKxE,MAAMe,SAAS6E,KAAKT,EAAQT,IAAIvD,IAAIY,GAAIiE,IAAI5E,GAInDoD,EAAKxE,MAAMe,SAASkF,QAAQ9E,IAAIY,GAAIiE,IAAI5E,KAK5CoD,EAAKxE,MAAMe,SAASC,KAAKwD,EAAKxE,MAAMiB,KAAKiF,OAAO,CAC9CC,YAAanB,IACZc,KAAK,WACNtB,EAAKxE,MAAMoG,cAAcpB,MA7D3BR,EAAK5D,MAAQ,CACXiE,SAAU7E,EAAM6E,SAChBF,UAAW,GAJIH,wEAuEjB,IADA,IAAI6B,EAAY,GAAIxB,EAAWzE,KAAKQ,MAAMiE,SAAUF,EAAYvE,KAAKQ,MAAM+D,UAClED,EAAIC,EAAWD,EAAIG,EAASvD,QAAUoD,EAAIC,EAAY,EAAGD,IAAK,CACrE,IAAI4B,OAAK,EAEPA,EADsB,QAApBzB,EAASH,GAAGN,KAEZ3C,EAAAC,EAAAC,cAAC4E,EAAD,CACEhE,EAAGsC,EAASH,GAAGnC,EACfQ,MAAO2B,EACP9B,UAAWxC,KAAKwC,YAIO,UAApBiC,EAASH,GAAGN,KAEjB3C,EAAAC,EAAAC,cAAC6E,EAAD,CACEjE,EAAGsC,EAASH,GAAGnC,EACfQ,MAAO2B,EACP9B,UAAWxC,KAAKwC,UAChBQ,WAAYhD,KAAKgD,aAMnB3B,EAAAC,EAAAC,cAAC8E,EAAD,CACElE,EAAGsC,EAASH,GAAGnC,EACfQ,MAAO2B,EACPX,IAAKc,EAASH,GAAGzB,OAAS4B,EAASH,GAAGzB,OAAS,EAC/CL,UAAWxC,KAAKwC,UAChBQ,WAAYhD,KAAKgD,aAIvBiD,EAAUK,KAAKJ,GAGO,IAApBzB,EAASvD,QACX+E,EAAUK,KACRjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAK,aAAevB,KAAKJ,MAAMsF,KAAO,KACtC7D,EAAAC,EAAAC,cAAA,6EAQN,IAAIgF,EAAe,KAenB,OAbEA,EADEhC,EAAY,GAAKE,EAASvD,OAE1BG,EAAAC,EAAAC,cAAA,UAAQI,GAAG,SAASC,QAAS5B,KAAK2E,iBAChCtD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,cAKlDV,EAAAC,EAAAC,cAAA,UAAQI,GAAG,SAASC,QAAS5B,KAAKqE,oBAChChD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAsBM,MAAO,CAAEC,MAAO,cAM1DV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,IAAK+E,MACvCnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,IAAKgF,MACxCpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,UAAKsD,MAASC,OAAO,WACrBzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAkBH,EAAAC,EAAAC,cAAA,yBAEnCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZyE,EAEAM,YAnJcvE,IAAMC,4BC1FlByE,cAnBb,SAAAA,EAAY9G,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA0G,GAAA5G,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4G,GAAAvG,KAAAH,KACZJ,0EAKN,IAAI+G,EAAW3G,KAAKJ,MAAMoF,OAAS,CACjC4B,gBAAiB,OAAS5G,KAAKJ,MAAMoF,OAAS,KAC5C,KAEJ,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMM,MAAO6E,GACzB3G,KAAKJ,MAAMiH,gBAbC7E,IAAMC,WC+DZ6E,cA3Cb,SAAAA,EAAYlH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACjBjH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,KAAMJ,KAMR0C,SAAW,SAAAC,GACT1C,EAAKS,SAAS,CAAEyG,WAAYxE,EAAME,OAAOC,SARxB7C,EAWnBmH,cAAgB,WACd,IAAItC,EAAU7E,EAAKW,MAAMuG,WAErB/F,EAAO,CACTH,IAAKhB,EAAKD,MAAMiB,IAChBmE,OAAQnF,EAAKD,MAAMoF,OACnBiC,OAAQpH,EAAKD,MAAMqH,OACnB5B,WAAW,IAAIC,MAAOC,WACtB2B,QAASxC,GAGX7E,EAAKD,MAAMe,SAASwG,KAAKtH,EAAKD,MAAMwH,QAAQC,WAAW,gBAAgB5B,IAAIzE,GAE3EnB,EAAKS,SAAS,CAAEyG,WAAY,OAC5BlH,EAAK6E,QAAQhC,MAAQ,IAvBrB7C,EAAKW,MAAQ,CACXuG,WAAY,MAHGlH,wEA6BV,IAAAa,EAAAV,KAEP,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAO3B,YAAY,YAAYiF,IAAK,SAAAC,GAAE,OAAI7G,EAAKgE,QAAU6C,GAAKjF,SAAUtC,KAAKsC,WAEzFjB,EAAAC,EAAAC,cAAA,UAAQK,QAAS5B,KAAKgH,cAAeQ,SAAmC,MAAzBxH,KAAKQ,MAAMuG,YACxD1F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAsBM,MAAO,CAAEC,MAAO,sBArCvCC,IAAMC,WCGhBwF,cAjBb,SAAAA,EAAY7H,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,GAAA3H,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2H,GAAAtH,KAAAH,KACZJ,0EAKN,OACEyB,EAAAC,EAAAC,cAAA,UACEK,QAAW5B,KAAKJ,MAAM8H,aACtBlG,UAAU,eACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAChBH,EAAAC,EAAAC,cAAA,YAAOvB,KAAKJ,MAAM+H,cAAgB,qBAZjB3F,IAAMC,WCuBhB2F,EAlBM,SAAChI,GACpB,IAAIiI,EAOJ,OAHEA,EAHGjI,EAAMkI,SAGA,UAFA,QAMTzG,EAAAC,EAAAC,cAAA,OAAKC,UAAWqG,GACdxG,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQpF,EAAMoF,SACtB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,YAAO3B,EAAMsH,YCaNc,cAlCb,SAAAA,EAAYpI,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GAAAlI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,KAAAH,KACZJ,0EAMN,GAFAqI,QAAQC,IAAI,MAAOlI,KAAKJ,MAAMuI,cAEC,GAA3BnI,KAAKJ,MAAMuI,aACb,OAAO,KAIT,IADA,IAAIC,EAAQ,GAAIC,EAAerI,KAAKJ,MAAMyI,aACjC/D,EAAI,EAAGA,EAAI+D,EAAanH,OAAQoD,IAAK,CAC5C,IAAIgE,EAAMD,EAAa/D,GACvB2D,QAAQC,IAAII,EAAIR,UAChBM,EAAM9B,KACJjF,EAAAC,EAAAC,cAACgH,EAAD,CACEvD,OAAQsD,EAAItD,OACZ8C,SAAUQ,EAAIR,SACdZ,QAASoB,EAAIpB,WAKnB,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACK,IAAjB4G,EAAMlH,OACPG,EAAAC,EAAAC,cAAA,yBACE6G,UA7BapG,IAAMC,WCkOduG,cA7Lb,SAAAA,EAAY5I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwI,IACjB3I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0I,GAAArI,KAAAH,KAAMJ,KAwCR6I,eAAiB,WACf,OAA0C,IAAnC5I,EAAKW,MAAM6H,aAAanH,QA1CdrB,EA6CnB6H,aAAe,WAEb,GAAK7H,EAAK4I,iBAgCR5I,EAAKS,SAAS,CAAE6H,cAAetI,EAAKW,MAAM2H,mBAhChB,CAG1B,IAAIO,EAAY,GAGhB7I,EAAKD,MAAMe,SAASkF,QAAQ9E,IAAIlB,EAAKD,MAAMwH,QAAQC,WAAW,gBAAgBsB,MAAMjD,KAAK,SAACkD,GACxFA,EAAcC,QAAQ,SAAC9H,GAErB,IAAI+H,EAAM/H,EAAIC,OACdiH,QAAQC,IAAI,MAAQY,EAAIjI,IAAM,KAAOhB,EAAKD,MAAMiB,KAChD6H,EAAUpC,KAAK,CACbzF,IAAKiI,EAAIjI,IACTiH,SAAUgB,EAAIjI,KAAOhB,EAAKD,MAAMiB,IAChCmE,OAAQ8D,EAAI9D,OACZiC,OAAQ6B,EAAI7B,OACZ5B,UAAWyD,EAAIzD,UACf6B,QAAS4B,EAAI5B,YAMjBrH,EAAKS,SAAS,CACZ+H,aAAcK,EACdK,mBAAoBL,EAAUxH,OAC9BiH,cAAetI,EAAKW,MAAM2H,mBAvEhCtI,EAAKW,MAAQ,CACX6H,aAAc,GACdU,mBAAoB,EACpBZ,cAAc,GALCtI,mFAQC,IAAAa,EAAAV,KAElBA,KAAKJ,MAAMe,SAASkF,QAAQ9E,IAAIf,KAAKJ,MAAMwH,QAAQC,WAAW,gBAAgBvG,WAAW,SAACkI,GAExF,IAAIN,EAAYhI,EAAKF,MAAM6H,aAEvB3H,EAAK+H,kBAEPO,EAASC,aAAaJ,QAAQ,SAACK,GAC7B,GAAoB,UAAhBA,EAAOlF,KAAkB,CAC3B,IAAI8E,EAAMI,EAAOnI,IAAIC,OACrB0H,EAAUpC,KAAK,CACbzF,IAAKiI,EAAIjI,IACTiH,SAAUgB,EAAIjI,KAAOH,EAAKd,MAAMiB,IAChCmE,OAAQ8D,EAAI9D,OACZiC,OAAQ6B,EAAI7B,OACZ5B,UAAWyD,EAAIzD,UACf6B,QAAS4B,EAAI5B,aAMrBe,QAAQC,IAAIQ,GACZhI,EAAKJ,SAAS,CACZ+H,aAAcK,EACdK,mBAAoBC,EAASG,0CAqDjC,IAAI/D,EAAcpF,KAAKJ,MAAMwF,YAEzBgE,EAAa,KACbpJ,KAAKJ,MAAMyJ,WAAarJ,KAAKJ,MAAMiB,MACrCuI,EACE/H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBM,MAAO,CAAEC,MAAO,eAOvD,IAFA,IAAI0C,EAAW,GAENH,EAAI,EAAGA,EAAIc,EAAYlE,OAAQoD,IAAK,CAC3C,IAAIa,EAAUC,EAAYd,GACtBiD,EAAK,KAEW,SAAhBpC,EAAQnB,KACVuD,EACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,YAAO4D,EAAQhD,EAAf,KACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa2D,EAAQtC,SAEtCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW2D,EAAQT,UAIf,UAAhBS,EAAQnB,KACfuD,EACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,YAAO4D,EAAQhD,GACI,OAAlBgD,EAAQtC,OACPxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,cAKlDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,eAMtDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW2D,EAAQT,UAIf,QAAhBS,EAAQnB,OACfuD,EACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,YAAO4D,EAAQhD,EAAf,MAEFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW2D,EAAQtC,UAIxC4B,EAAS6B,KAAKiB,GAGhB,OACElG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQhF,KAAKJ,MAAMoF,SAC3B3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQxB,KAAKJ,MAAMsF,MACtC7D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,mBACFH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQxB,KAAKJ,MAAMyF,aAEzC+D,GAEH/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEZiD,GAKHpD,EAAAC,EAAAC,cAAC+H,EAAD,CACE5B,aAAc1H,KAAK0H,aACnBC,cAAe3H,KAAKQ,MAAMuI,qBAE3B1H,EAAAC,EAAAC,cAACgI,EAAD,CACCpB,aAAcnI,KAAKQ,MAAM2H,aACzBE,aAAcrI,KAAKQ,MAAM6H,eAE3BhH,EAAAC,EAAAC,cAACiI,EAAD,CACE3I,IAAKb,KAAKJ,MAAMiB,IAChBmE,OAAQhF,KAAKJ,MAAM6J,WACnBxC,OAAQjH,KAAKJ,MAAMsF,KACnBvE,SAAUX,KAAKJ,MAAMe,SACrByG,OAAQpH,KAAKJ,MAAMwH,iBAvLHpF,IAAMC,WCuIjByH,cA5Ib,SAAAA,EAAY9J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0J,IACjB7J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4J,GAAAvJ,KAAAH,KAAMJ,KA2CR6I,eAAiB,WACf,OAA0C,IAAnC5I,EAAKW,MAAM6H,aAAanH,QA7CdrB,EAgDnB6H,aAAe,WAEb,GAAK7H,EAAK4I,iBA+BR5I,EAAKS,SAAS,CAAE6H,cAAetI,EAAKW,MAAM2H,mBA/BhB,CAG1B,IAAIO,EAAY,GAGhB7I,EAAKD,MAAMe,SAASkF,QAAQ9E,IAAIlB,EAAKD,MAAMwH,QAAQC,WAAW,gBAAgBsB,MAAMjD,KAAK,SAACkD,GACxFA,EAAcC,QAAQ,SAAC9H,GAErB,IAAI+H,EAAM/H,EAAIC,OACd0H,EAAUpC,KAAK,CACbzF,IAAKiI,EAAIjI,IACTiH,SAAUgB,EAAIjI,KAAOhB,EAAKD,MAAMiB,IAChCmE,OAAQ8D,EAAI9D,OACZiC,OAAQ6B,EAAI7B,OACZ5B,UAAWyD,EAAIzD,UACf6B,QAAS4B,EAAI5B,YAMjBrH,EAAKS,SAAS,CACZ+H,aAAcK,EACdK,mBAAoBL,EAAUxH,OAC9BiH,cAAetI,EAAKW,MAAM2H,mBAzEhCtI,EAAKW,MAAQ,CACX6H,aAAc,GACdU,mBAAoB,EACpBZ,cAAc,GALCtI,mFAQC,IAAAa,EAAAV,KAEJA,KAAKJ,MAAMe,SAASkF,QAAQ9E,IAAIf,KAAKJ,MAAMwH,QAAQC,WAAW,gBAAgBvG,WAAW,SAACkI,GAEtG,IAAIN,EAAYhI,EAAKF,MAAM6H,aAEvB3H,EAAK+H,kBAEPO,EAASC,aAAaJ,QAAQ,SAACK,GAC7B,GAAoB,UAAhBA,EAAOlF,KAAkB,CAC3B,IAAI8E,EAAMI,EAAOnI,IAAIC,OACrB0H,EAAUpC,KAAK,CACbzF,IAAKiI,EAAIjI,IACTiH,SAAUgB,EAAIjI,KAAOH,EAAKd,MAAMiB,IAChCmE,OAAQ8D,EAAI9D,OACZiC,OAAQ6B,EAAI7B,OACZ5B,UAAWyD,EAAIzD,UACf6B,QAAS4B,EAAI5B,aAMrBe,QAAQC,IAAIQ,GACZhI,EAAKJ,SAAS,CACZ+H,aAAcK,EACdK,mBAAoBC,EAASG,0FAqDjC,IAAIC,EAAa,KACbpJ,KAAKJ,MAAMyJ,WAAarJ,KAAKJ,MAAMiB,MACrCuI,EACE/H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBM,MAAO,CAAEC,MAAO,eAIvDkG,QAAQC,IAAI,sBAAwBlI,KAAKJ,MAAMyJ,UAAY,OAASrJ,KAAKJ,MAAMiB,KAC/E,IAAI8I,EACFtI,EAAAC,EAAAC,cAACgH,EAAD,CACET,SAAU9H,KAAKJ,MAAMyJ,WAAarJ,KAAKJ,MAAMiB,IAC7CmE,OAAQhF,KAAKJ,MAAMoF,OACnBkC,QAASlH,KAAKJ,MAAM+J,UAIxB,OACEtI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQhF,KAAKJ,MAAMoF,SAC3B3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQxB,KAAKJ,MAAMsF,MAAY7D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,gBACpDH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQxB,KAAKJ,MAAMyF,aAGzC+D,GAIFO,EAGDtI,EAAAC,EAAAC,cAAC+H,EAAD,CACE5B,aAAc1H,KAAK0H,aACnBC,cAAe3H,KAAKQ,MAAMuI,qBAE3B1H,EAAAC,EAAAC,cAACgI,EAAD,CACCpB,aAAcnI,KAAKQ,MAAM2H,aACzBE,aAAcrI,KAAKQ,MAAM6H,eAE3BhH,EAAAC,EAAAC,cAACiI,EAAD,CACE3I,IAAKb,KAAKJ,MAAMiB,IAChBmE,OAAQhF,KAAKJ,MAAM6J,WACnBxC,OAAQjH,KAAKJ,MAAMsF,KACnBvE,SAAUX,KAAKJ,MAAMe,SACrByG,OAAQpH,KAAKJ,MAAMwH,iBAtIHpF,IAAMC,WCiCjB2H,cA5Db,SAAAA,EAAYhK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4J,IACjB/J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8J,GAAAzJ,KAAAH,KAAMJ,KAMRiK,gBAAkB,SAACtH,GACjB1C,EAAKS,SAAS,CAAEqJ,QAASpH,EAAME,OAAOC,SARrB7C,EAWnBiK,SAAW,WAET,IAAI/E,EAAUlF,EAAKD,MAAMmF,QACrB4E,EAAU9J,EAAKW,MAAMmJ,QAErB3I,EAAO,CACTgE,YAFiCC,IAAtBpF,EAAKD,MAAMoF,OAAuB,KAAOnF,EAAKD,MAAMoF,OAG/DE,KAAMrF,EAAKD,MAAMsF,KACjBrE,IAAKhB,EAAKD,MAAMiB,IAChBwE,WAAW,IAAIC,MAAOC,WACtBoE,QAASA,GAKX9J,EAAKD,MAAMe,SAAS6E,KAAK3F,EAAKD,MAAMiB,KAAK4E,IAAIzE,GAAM0E,KAAK,SAACC,GAEvD,IADA,IAAIhE,EAAKgE,EAAOhE,GACP2C,EAAI,EAAGA,EAAIS,EAAQ7D,OAAQoD,IAClCzE,EAAKD,MAAMe,SAAS6E,KAAKT,EAAQT,IAAIvD,IAAIY,GAAIiE,IAAI5E,GAInDnB,EAAKD,MAAMe,SAASkF,QAAQ9E,IAAIY,GAAIiE,IAAI5E,GAAM0E,KAAK,WACjD7F,EAAKS,SAAS,CACZqJ,QAAS,OAEXzG,IAAE,gBAAgBS,IAAI,SAnC1B9D,EAAKW,MAAQ,CACXmJ,QAAS,MAHM9J,wEA+CjB,OACEwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,YAAUa,KAAK,IAAIT,GAAG,cAAcU,YAAY,gBAAgBC,SAAUtC,KAAK6J,kBAC/ExI,EAAAC,EAAAC,cAAA,UACEI,GAAG,SACHC,QAAS5B,KAAK8J,SACdtC,SAAgC,MAAtBxH,KAAKQ,MAAMmJ,SAHvB,kBAnDmB3H,IAAMC,4BCiBlB8H,cAhBb,SAAAA,EAAYnK,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,GAAAjK,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KACZJ,0EAIN,OACEyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKzB,KAAKJ,MAAM6B,MACrBJ,EAAAC,EAAAC,cAAA,UAAKvB,KAAKJ,MAAMoK,QAChB3I,EAAAC,EAAAC,cAAA,SAAIvB,KAAKJ,MAAM0I,aAXAtG,IAAMC,WX0KdgI,cAhKb,SAAAA,EAAYrK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiK,IACjBpK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmK,GAAA9J,KAAAH,KAAMJ,KACDY,MAAQ,CACX0J,SAAU,GACVzF,SAAU,IAJK5E,mFA6BjBsK,IAASjH,IAAE,aACX,IAAIkH,EAAUpK,KACVqK,EAAW,GACXC,EAAetK,KAAKQ,MAAMiE,SAC1B8F,EAAevK,KAAKQ,MAAM0J,SAC9BxK,EAAaM,KAAKJ,MAAMe,SAASC,KAAKZ,KAAKJ,MAAMiB,KAAKwG,WAAW,QAC9DvG,WAAW,SAACkI,GAEXA,EAASC,aAAaJ,QAAQ,SAACK,GAE7B,GADAjB,QAAQC,IAAI,gBAAkBgB,EAAOlF,MACjB,UAAhBkF,EAAOlF,KAAkB,CAC3BiE,QAAQC,IAAI,aAAcgB,EAAOnI,IAAIC,QACrCqJ,EAAS/D,KAAK4C,EAAOnI,IAAIY,IACzB,IAAImH,EAAMI,EAAOnI,IAAIC,OACjBkI,EAAOnI,IAAIC,OAAOmE,QACpBmF,EAAaE,QAAQ,CACnB3J,IAAKiI,EAAIjI,IACTqE,KAAM4D,EAAI5D,KACVF,OAAQ8D,EAAI9D,OACZK,UAAWR,IAAOiE,EAAIzD,WAAWP,OAAO,OACxCsC,OAAQ8B,EAAOnI,IAAIY,GACnByD,YAAa0D,EAAI1D,cAInBmF,EAAaC,QAAQ,CACnB3J,IAAKiI,EAAIjI,IACTqE,KAAM4D,EAAI5D,KACVF,OAAQ8D,EAAI9D,OACZ2E,QAASb,EAAIa,QACbzC,QAAS4B,EAAI5B,QACbuD,SAAU3B,EAAI4B,UACdrC,aAAc,GACdjB,OAAQ8B,EAAOnI,IAAIY,GACnB0D,UAAWR,IAAOiE,EAAIzD,WAAWP,OAAO,YAMhDmD,QAAQC,IAAIyC,KAAKC,UAAUN,IAC3BrC,QAAQC,IAAIyC,KAAKC,UAAUL,IAC3BH,EAAQ9J,SAAS,CACfmE,SAAU6F,EACVJ,SAAUK,qDAShB7K,qCAcO,IAAAgB,EAAAV,KAEH6K,EAAe7K,KAAKQ,MAAMiE,SAASqG,IAAI,SAAC3F,EAASxC,GAAV,OACzCtB,EAAAC,EAAAC,cAACwJ,EAAD,CACElK,IAAKH,EAAKd,MAAMiB,IAChBwI,UAAWlE,EAAQtE,IAEnBmE,OAAQG,EAAQH,OAChByE,WAAY/I,EAAKd,MAAMoF,OACvBgG,IAAKzF,SAAS5C,GACduC,KAAMC,EAAQD,KACdG,UAAWF,EAAQE,UAEnB+B,OAAQjC,EAAQiC,OAChBhC,YAAaD,EAAQC,YACrBzE,SAAUD,EAAKd,MAAMe,aAGrBsK,EAAejL,KAAKQ,MAAM0J,SAASY,IAAI,SAACnB,EAAShH,GAAV,OACzCtB,EAAAC,EAAAC,cAAC2J,EAAD,CACErK,IAAKH,EAAKd,MAAMiB,IAChBwI,UAAWM,EAAQ9I,IAEnBmE,OAAQ2E,EAAQ3E,OAChByE,WAAY/I,EAAKd,MAAMoF,OAEvBgG,IAAKzF,SAAS5C,GACduC,KAAMyE,EAAQzE,KACdyE,QAASA,EAAQA,QACjBtE,UAAWsE,EAAQtE,UAEnB6B,QAASyC,EAAQzC,QACjBE,OAAQuC,EAAQvC,OAChBzG,SAAUD,EAAKd,MAAMe,aAKzB,OAEEU,EAAAC,EAAAC,cAAA,WAASC,UAAU,QACjBH,EAAAC,EAAAC,cAAC4J,EAAD,CACEnG,OAAQhF,KAAKJ,MAAMoF,OACnBE,KAAMlF,KAAKJ,MAAMsF,KACjBrE,IAAKb,KAAKJ,MAAMiB,IAChBkE,QAAS/E,KAAKJ,MAAMmF,QACpBpE,SAAUX,KAAKJ,MAAMe,WAEvBU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,eACCqJ,EACAI,EAGD5J,EAAAC,EAAAC,cAAC6J,EAAD,CACE3J,IAAK4J,IACLrB,OAAO,gBACP1B,IAAI,oCAzJQtG,IAAMC,6CYXtBqJ,EAAkBtJ,IAAMuJ,cAAc,MAE/BC,EAAe,SAAAvJ,GAAS,OAAI,SAAArC,GAAK,OAC1CyB,EAAAC,EAAAC,cAAC+J,EAAgBG,SAAjB,KACG,SAAA9K,GAAQ,OAAIU,EAAAC,EAAAC,cAACU,EAADnC,OAAA4L,OAAA,GAAe9L,EAAf,CAAsBe,SAAUA,SAIpC2K,qBCJTK,wBAAS,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBCTNC,EDab,SAAAA,IAAc,IAAArM,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAkM,GAAAlM,KASdmM,iCAAmC,SAACC,EAAOC,GAAR,OACjCxM,EAAKyM,KAAKC,+BAA+BH,EAAOC,IAVpCrM,KAYdwM,6BAA+B,SAACJ,EAAOC,GAAR,OAC7BxM,EAAKyM,KAAKG,2BAA2BL,EAAOC,IAbhCrM,KAed0M,UAAY,kBAAM7M,EAAKyM,KAAKK,WAfd3M,KAiBd4M,gBAAkB,SAAAR,GAAK,OAAIvM,EAAKyM,KAAKO,uBAAuBT,IAjB9CpM,KAmBd8M,iBAAmB,SAAAT,GAAQ,OACzBxM,EAAKyM,KAAKS,YAAYC,eAAeX,IApBzBrM,KA8BdY,KAAO,SAAAC,GAAG,OAAIhB,EAAKoN,GAAG5F,WAAW,SAAStG,IAAIF,IA9BhCb,KAgCdkN,MAAQ,kBAAMrN,EAAKoN,GAAG5F,WAAW,UAhCnBrH,KAkCd6F,MAAQ,kBAAMhG,EAAKoN,GAAG5F,WAAW,UAlCnBrH,KAoCdwF,KAAO,SAAA3E,GAAG,OAAIhB,EAAKoN,GAAG5F,WAAW,SAAStG,IAAIF,GAAKwG,WAAW,SApChDrH,KAsCdmH,KAAO,SAAAC,GAAM,OAAIvH,EAAKoN,GAAG5F,WAAW,SAAStG,IAAIqG,IAtCnCpH,KAwCd6F,MAAQ,kBAAMhG,EAAKoN,GAAG5F,WAAW,UAxCnBrH,KA4CdiN,GAAK,kBAAMpN,EAAKoN,IA5CFjN,KA8CdmN,OAAS,SAACtM,GAAD,OAAShB,EAAKuN,MAAM9F,IAAIzG,IA7C/BwM,IAAIC,cAAc3B,GAClB3L,KAAKsM,KAAOe,IAAIf,OAChBtM,KAAKoN,MAAQC,IAAIE,UACjBvN,KAAKiN,GAAKI,IAAIG,+BElBZC,GAAgB,CACpBvI,KAAM,GACNkH,MAAO,GACPsB,YAAa,GACbC,MAAO,MA8GMC,eA1Gb,SAAAA,EAAYhO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,IACjB/N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8N,GAAAzN,KAAAH,KAAMJ,KAIR0C,SAAW,SAAAC,GACT1C,EAAKS,SAALR,OAAA+N,GAAA,EAAA/N,CAAA,GAAiByC,EAAME,OAAOyC,KAAO3C,EAAME,OAAOC,SANjC7C,EASnBiK,SAAW,WAAM,IAgBXgE,EAhBWC,EACsBlO,EAAKW,MAAlC0E,EADO6I,EACP7I,KAAMkH,EADC2B,EACD3B,MAAOsB,EADNK,EACML,YACjBtD,EAAOtK,OAAAkO,GAAA,EAAAlO,CAAAD,GACLoO,EAAe,CACnB/I,KAAMA,EACNkH,MAAOA,EACPrH,QAAS,GACT9D,SAAU,GACVwD,SAAU,CACR,CACEtC,EAAG,6BACH6B,KAAM,UAGVgB,OAAQ,MAGVnF,EAAKD,MAAMe,SACRwL,iCAAiCC,EAAOsB,GACxChI,KAAK,SAAAwI,GAIF,OAFFJ,EAAKI,EAAStN,KAAKC,IAEVuJ,EAAQxK,MAAMe,SAClBC,KAAKkN,GACLlI,IAFI9F,OAAAqO,EAAA,EAAArO,CAAA,CAGHe,IAAKiN,GACFG,IACFvI,KAAK,WACN7F,EAAKS,SAALR,OAAAqO,EAAA,EAAArO,CAAA,GAAmB2N,KACnB5N,EAAKD,MAAMwO,OAAXtO,OAAAqO,EAAA,EAAArO,CAAA,CACAe,IAAKiN,GACFG,QAKVI,MAAM,SAAAV,GACL9N,EAAKS,SAAS,CAAEqN,aA7CpB9N,EAAKW,MAAQiN,GAFI5N,wEAoDV,IAAAa,EAAAV,KAAAsO,EAMHtO,KAAKQ,MAJP0E,EAFKoJ,EAELpJ,KACAkH,EAHKkC,EAGLlC,MACAsB,EAJKY,EAILZ,YACAC,EALKW,EAKLX,MAGIY,EACY,KAAhBb,GACU,KAAVtB,GACS,KAATlH,EAEF,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,iCACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWI,QAAS,kBAAMlB,EAAKd,MAAM4O,WAAU,KACjEnN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBM,MAAO,CAAEC,MAAO,eAGzDV,EAAAC,EAAAC,cAAA,SACE2D,KAAK,OACLlB,KAAK,OACL3B,YAAY,YACZK,MAAOwC,EACP5C,SAAUtC,KAAKsC,WAEjBjB,EAAAC,EAAAC,cAAA,SACE2D,KAAK,QACLlB,KAAK,QACL3B,YAAY,QACZK,MAAO0J,EACP9J,SAAUtC,KAAKsC,WAEjBjB,EAAAC,EAAAC,cAAA,SACE2D,KAAK,cACLlB,KAAK,WACL3B,YAAY,WACZK,MAAOgL,EACPpL,SAAUtC,KAAKsC,WAGhBqL,GAAStM,EAAAC,EAAAC,cAAA,SAAIoM,EAAMzG,SAEpB7F,EAAAC,EAAAC,cAAA,UAAQiG,SAAU+G,EAChB/M,UAAU,aACVI,QAAS,kBAAMlB,EAAKoJ,aAFtB,mBAjGiB9H,IAAMC,WCPzBwL,GAAgB,CACpBrB,MAAO,GACPC,SAAU,GACVsB,MAAO,MA2EMc,eAvEb,SAAAA,EAAY7O,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyO,IACjB5O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2O,GAAAtO,KAAAH,KAAMJ,KAIR0C,SAAW,SAAAC,GACT1C,EAAKS,SAALR,OAAA+N,GAAA,EAAA/N,CAAA,GAAiByC,EAAME,OAAOyC,KAAO3C,EAAME,OAAOC,SANjC7C,EASnBiK,SAAW,WACT,IAAIM,EAAOtK,OAAAkO,GAAA,EAAAlO,CAAAD,GADIkO,EAEalO,EAAKW,MAAzB4L,EAFO2B,EAEP3B,MAAOC,EAFA0B,EAEA1B,SAEfxM,EAAKD,MAAMe,SACR6L,6BAA6BJ,EAAOC,GACpC3G,KAAK,SAACwI,GACL,IAAIJ,EAAKI,EAAStN,KAAKC,IAQvBhB,EAAKD,MAAMe,SAASC,KAAKkN,GAAInF,MAAMjD,KAAK,SAAS3E,GAC7CqJ,EAAQ9J,SAARR,OAAAqO,EAAA,EAAArO,CAAA,GACO2N,KAGPrD,EAAQxK,MAAM8O,WAAW3N,EAAIC,YAIlCqN,MAAM,SAAAV,GACL9N,EAAKS,SAAS,CAAEqN,aAhCpB9N,EAAKW,MAAQiN,GAFI5N,wEAsCV,IAAAa,EAAAV,KAAAsO,EAC4BtO,KAAKQ,MAAhC4L,EADDkC,EACClC,MAAOC,EADRiC,EACQjC,SAAUsB,EADlBW,EACkBX,MAEnBY,EAAyB,KAAblC,GAA6B,KAAVD,EAErC,OACE/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,qBACCF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWI,QAAS,kBAAIlB,EAAKd,MAAM+O,UAAS,KAC5DtN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBM,MAAO,CAACC,MAAO,eAGxDV,EAAAC,EAAAC,cAAA,SACK2D,KAAK,QACLxC,MAAO0J,EACP9J,SAAUtC,KAAKsC,SACf0B,KAAK,OACL3B,YAAY,UAEdhB,EAAAC,EAAAC,cAAA,SACE2D,KAAK,WACLxC,MAAO2J,EACP/J,SAAUtC,KAAKsC,SACf0B,KAAK,WACL3B,YAAY,aAEfsL,GAAStM,EAAAC,EAAAC,cAAA,SAAIoM,EAAMzG,SACrB7F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYI,QAAS5B,KAAK8J,SAAUtC,SAAU+G,GAAhE,iBAlEmBvM,IAAMC,WCCxB2M,GAAepD,EAAaoC,IAC5BiB,GAAcrD,EAAaiD,IA4DlBK,eAzDb,SAAAA,EAAYlP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,IACjBjP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgP,GAAA3O,KAAAH,KAAMJ,KAOR4O,UAAY,SAACnO,GACXR,EAAKS,SAAS,CACZyO,UAAW1O,KAVIR,EAcnB8O,SAAW,SAACtO,GACVR,EAAKS,SAAS,CACZ0O,UAAW3O,KAdbR,EAAKW,MAAQ,CACXuO,WAAW,EACXC,WAAW,GAJInP,wEAoBV,IACHgH,EADGnG,EAAAV,KA2BP,OAxBE6G,EADE7G,KAAKQ,MAAMwO,UAEX3N,EAAAC,EAAAC,cAACsN,GAAD,CACEH,WAAc1O,KAAKJ,MAAM8O,WACzBC,SAAY3O,KAAK2O,WAEb3O,KAAKQ,MAAMuO,UAEjB1N,EAAAC,EAAAC,cAACqN,GAAD,CACER,OAAUpO,KAAKJ,MAAMwO,OACrBI,UAAaxO,KAAKwO,YAIpBnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,4FACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaI,QAAS,kBAAIlB,EAAK8N,WAAU,KAA3D,WACAnN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYI,QAAS,kBAAIlB,EAAKiO,UAAS,KAAzD,WAONtN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAKwN,MACjC5N,EAAAC,EAAAC,cAAA,OAAKE,IAAKyN,MACXrI,UApDgB7E,IAAMC,oBC+OdkN,eApPb,SAAAA,EAAYvP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmP,IACjBtP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqP,GAAAhP,KAAAH,KAAMJ,KAwBRwP,eAAiB,SAACC,GAChBxP,EAAKS,SAAS,CACZgP,YAAaD,KA3BExP,EA+BnB0P,iBAAmB,SAACF,GAClBxP,EAAKS,SAAS,CACZkP,cAAeH,KAjCAxP,EAqCnBU,UAAY,WAIV,IAAI6L,EAAQlJ,IAAE,qBAAqBS,MAEzB9D,EAAKD,MAAMe,SAASuM,QAAQuC,MAAM,QAAS,KAAMrD,GAEvDzD,MACDjD,KAAK,SAAAkD,GAEJ/I,EAAKD,MAAMe,SAASuM,QAAQnM,IAAI6H,EAAc8G,KAAK,GAAG/N,IACnDmE,OAAO,CACN7E,SAAYN,aAAmBgP,WAAWC,WAAW/P,EAAKD,MAAMiB,OAEpEhB,EAAKuP,eAAe,mBAErBf,MAAM,SAAAwB,GACLhQ,EAAKuP,eAAe,iBAAmBhD,MAvD1BvM,EAkFnBiQ,aAAe,WACbjQ,EAAKuP,eAAe,aAnFHvP,EAsFnBkQ,cAAgB,SAAClP,GAEfhB,EAAKmQ,cAAcnP,GAGnB,IAAIkE,EAAUlF,EAAKW,MAAMuE,QACzBA,EAAQuB,KAAKzF,GAEbhB,EAAKS,SAAS,CAAEyE,QAASA,IAEzBlF,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNf,QAASA,IAGblF,EAAKD,MAAMe,SAASC,KAAKC,GACtBiF,OAAO,CACNf,QAASpE,aAAmBgP,WAAWC,WAAW/P,EAAKD,MAAMiB,QAxGhDhB,EA6GnBmQ,cAAgB,SAACnP,GAoBfhB,EAAKD,MAAMe,SAASC,KAAKf,EAAKD,MAAMiB,KAAKiF,OAAO,CAC9C7E,SAAYN,aAAmBgP,WAAWM,YAAYpP,KACrD6E,KAAK,WAEN,IADA,IAAIwH,EAAQrN,EAAKW,MAAM0P,aACd5L,EAAI,EAAGA,EAAI4I,EAAMhM,OAAQoD,IAC5B4I,EAAM5I,GAAGzD,KAAOA,IAClBqM,EAAMiD,OAAO7L,EAAG,GAChBzE,EAAKS,SAAS,CAAE4P,aAAchD,QAxInBrN,EAgJnBuQ,iBAAmB,WACjBvQ,EAAKS,SAAS,CAAE+P,SAAS,EAAMH,aAAc,KAG7C,IAFA,IAAIhD,EAAQ,GACRoD,EAAU,EACLhM,EAAI,EAAGA,EAAIzE,EAAKW,MAAMS,SAASC,OAAQoD,IAAK,CACnD,IAAIiM,EAAM1Q,EAAKW,MAAMS,SAASqD,GAE9BzE,EAAKD,MAAMe,SACRC,KAAK2P,GAAK5H,MAAMjD,KAAK,SAAC3E,GACrBmM,EAAM5G,KAAKvF,EAAIC,QAEfnB,EAAKS,SAAS,CAAE4P,aAAchD,MAC9BoD,IACgBzQ,EAAKW,MAAMS,SAASC,QAElCrB,EAAKS,SAAS,CAAE+P,SAAS,QA7JjCxQ,EAAKW,MAALV,OAAA+N,GAAA,EAAA/N,CAAA,CACEmB,SAAUpB,EAAKD,MAAMqB,SACrBiP,aAAc,GACdG,SAAS,EACTtL,QAASlF,EAAKD,MAAMmF,QACpByL,SAAU,GACVlB,YAAa,GACbE,cAAe,IAPjB,WAQW,GAVM3P,mFAeC,IAAAa,EAAAV,KACRA,KAAKJ,MAAMe,SAASC,KAAKZ,KAAKJ,MAAMiB,KAC1CC,WAAW,SAACC,GACd,IAAIC,EAAOD,EAAIC,OACfN,EAAKJ,SAAS,CACZW,SAAUD,EAAKC,8CAiJZ,IAAAE,EAAAnB,KAAAsO,EAC0BtO,KAAKQ,MAAhC0P,EADC5B,EACD4B,aAAcjP,EADbqN,EACarN,SAIO,GAAvBiP,EAAahP,QAAeD,EAASC,OAAS,GACtB,GAAtBlB,KAAKQ,MAAM6P,SACbrQ,KAAKoQ,mBAiBT,IAbA,IAAId,EACFjO,EAAAC,EAAAC,cAAA,SACGvB,KAAKQ,MAAM8O,aAIZE,EACFnO,EAAAC,EAAAC,cAAA,SACGvB,KAAKQ,MAAMgP,eAIZe,EAAM,GAvBHE,EAAA,WA0BL,IAAI5P,EAAMI,EAASqD,GAGf1D,EAAOsP,EAAa5L,GACpB4B,EACF7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQpE,EAAKoE,SACrB3D,EAAAC,EAAAC,cAAA,SAAIX,EAAKsE,MACT7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMI,QAAS,kBAAMT,EAAK4O,cAAclP,KACxDQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAElDV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKI,QAAS,kBAAMT,EAAK6O,cAAcnP,KACvDQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAAhD,QAKRwO,EAAIjK,KAAKJ,IApBF5B,EAAI,EAAGA,EAAI4L,EAAahP,OAAQoD,IAAK,KAMxC4B,EANwCuK,IAuB9C,OACEpP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQI,QAAS,kBAAMT,EAAKvB,MAAMQ,cAAa,KAG/DiB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAElBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKiP,MAETH,EAAMlP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB+O,GAAa,KAEpDlP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,wBACC+N,EACDjO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,mBAAmBqC,KAAK,QAAQ3B,YAAY,wBACtDhB,EAAAC,EAAAC,cAAA,UAAQK,QAAS5B,KAAKO,WAAtB,aAGJc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,2BACCiO,EACDnO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,QAAQ3B,YAAY,wBAChChB,EAAAC,EAAAC,cAAA,UAAQK,QAAS5B,KAAK8P,cAAtB,oBA7OY9N,IAAMC,wCCGxB0O,GAAcnF,EAAa2D,IA6JlByB,eA1Jb,SAAAA,EAAYhR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Q,IACjB/Q,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8Q,GAAAzQ,KAAAH,KAAMJ,KAuBRQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CACZC,UAAWF,KA1BIR,EA8BnBgR,cAAgB,SAACtO,GACJA,EAAME,OAAOC,OA/BP7C,EAkCnBiR,YAAc,SAAC7P,GACbpB,EAAKS,SAAS,CAAEW,SAAUA,IAC1BpB,EAAKD,MAAMkR,YAAY7P,IApCNpB,EAwCnBkR,gBAAkB,SAAChM,GACjB,IAAImI,EAAQrN,EAAKW,MAAMwQ,aACvB,GAAa,MAAT9D,GAAiC,GAAhBA,EAAMhM,OACzBrB,EAAKS,SAAS,CAAEyE,QAASA,IACzBlF,EAAKoR,uBAEF,CAEH,IAAIC,EAAOrR,EAAKW,MAAMuE,QAELA,EAAQoM,OAAO,SAAU7M,GAAK,OAAO4M,EAAKE,QAAQ9M,GAAK,IAE7DuE,QAAQ,SAAClF,GAClB9D,EAAKD,MAAMe,SACRC,KAAK+C,GACLgF,MAAMjD,KAAK,SAAC3E,GACXmM,EAAM5G,KAAKvF,EAAIC,QACfnB,EAAKS,SAAS,CAAE0Q,aAAc9D,QAIpCrN,EAAKS,SAAS,CAAEyE,QAASA,IAE3BlF,EAAKD,MAAMyR,WAAWtM,IA/DLlF,EAkEnBoR,iBAAmB,WACjBpR,EAAKS,SAAS,CAAE+P,SAAS,EAAMW,aAAc,KAI7C,IAHA,IAAI9D,EAAQ,GACRoD,EAAU,EAELhM,EAAI,EAAGA,EAAIzE,EAAKW,MAAMuE,QAAQ7D,OAAQoD,IAE7CzE,EAAKD,MAAMe,SACRC,KAAKf,EAAKW,MAAMuE,QAAQT,IACxBqE,MAAMjD,KAAK,SAAC3E,GACXmM,EAAM5G,KAAKvF,EAAIC,QACfnB,EAAKS,SAAS,CAAE0Q,aAAc9D,MAC9BoD,IACgBzQ,EAAKW,MAAMuE,QAAQ7D,QACjCrB,EAAKS,SAAS,CAAE+P,SAAS,OA9EjCxQ,EAAKW,MAAQ,CACXD,WAAW,EACXwE,QAASlF,EAAKD,MAAMmF,QACpBiM,aAAc,GACdX,SAAS,EACTpP,SAAUpB,EAAKD,MAAMqB,UAPNpB,mFAWC,IAAAa,EAAAV,KACRA,KAAKJ,MAAMe,SAASC,KAAKZ,KAAKJ,MAAMiB,KAI1CC,WAAW,SAACC,GACd,IAAIC,EAAOD,EAAIC,OACfN,EAAKqQ,gBAAgB/P,EAAK+D,SAC1BrE,EAAKoQ,YAAY9P,EAAKC,6CAmEjB,IAAAE,EAAAnB,OACDA,KAAKQ,MAAMwQ,cAAmD,IAAnChR,KAAKQ,MAAMwQ,aAAa9P,SACvDlB,KAAKQ,MAAMuE,QAAQ7D,OAAS,GACF,GAAtBlB,KAAKQ,MAAM6P,SACbrQ,KAAKiR,mBAIT,IAAIK,EAAQ,KACRtR,KAAKQ,MAAMS,SAASC,OAAS,IAC/BoQ,EACEjQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASxB,KAAKQ,MAAMS,SAASC,SAKjD,IADA,IAAI6D,EAAU,GACLT,EAAI,EAAGA,EAAItE,KAAKQ,MAAMwQ,aAAa9P,OAAQoD,IAAK,CACvD,IAAI1D,EAAOZ,KAAKQ,MAAMwQ,aAAa1M,GAC/B4B,EACF7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQpE,EAAKoE,SACrB3D,EAAAC,EAAAC,cAAA,YAAOX,EAAKsE,MACZ7D,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,eAG5DgD,EAAQuB,KAAKJ,GAIf,OACE7E,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAO3B,YAAY,SAASC,SAAUtC,KAAK6Q,gBACvDxP,EAAAC,EAAAC,cAAA,UAAQI,GAAG,kBAAiBN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBM,MAAO,CAAEC,MAAO,eAE/EV,EAAAC,EAAAC,cAAA,UAAQI,GAAG,cAAcC,QAAS,kBAAMT,EAAKf,cAAa,KACxDiB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBM,MAAO,CAAEC,MAAO,YACjDuP,KAOPjQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACM,GAAlBuD,EAAQ7D,OACPG,EAAAC,EAAAC,cAAC6J,EAAD,CACE3J,IAAK8P,KACLvH,OAAO,kBACP1B,IAAI,sCAEJvD,GAGJ/E,KAAKQ,MAAMD,UACXc,EAAAC,EAAAC,cAACoP,GAAD,CACEvQ,aAAcJ,KAAKI,aACnBS,IAAKb,KAAKJ,MAAMiB,IAChBI,SAAUjB,KAAKQ,MAAMS,SACrB8D,QAAS/E,KAAKQ,MAAMuE,UACjB,aArJU/C,IAAMC,WCRzBwL,GAAgB,CACpBtL,EAAG,GACH6B,KAAM,OACNwN,UAAU,GA6HGC,eAzHb,SAAAA,EAAY7R,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyR,IACjB5R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2R,GAAAtR,KAAAH,KAAMJ,KAIR0C,SAAW,SAAAC,GACT1C,EAAKS,SAALR,OAAA+N,GAAA,EAAA/N,CAAA,GAAiByC,EAAME,OAAOyC,KAAO3C,EAAME,OAAOC,SANjC7C,EASnB6R,QAAU,SAAC1N,GACTnE,EAAKS,SAAS,CAAE0D,KAAMA,KAVLnE,EAanBiK,SAAW,WACTjK,EAAKD,MAAM+R,YAAW,GACtB9R,EAAKD,MAAMgS,WAAW,CACpBzP,EAAGtC,EAAKW,MAAM2B,EACd6B,KAAMnE,EAAKW,MAAMwD,QAjBFnE,EAqBnBgS,YAAc,SAACxR,GACbR,EAAKS,SAAS,CAAEkR,SAAUnR,KAtBTR,EAyBnBiS,SAAW,WACTjS,EAAKD,MAAM+R,YAAW,IAxBtB9R,EAAKW,MAAQiN,GAFI5N,wEA6BV,IAGHkS,EAHGrR,EAAAV,KAAA+N,EACuB/N,KAAKQ,MAA3B2B,EADD4L,EACC5L,EAAGqP,EADJzD,EACIyD,SAAUxN,EADd+J,EACc/J,KAmErB,OA9DE+N,EADEP,EAGAnQ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WACnBlB,EAAKgR,QAAQ,QACbhR,EAAKmR,aAAY,KAEjBxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAJd,QAKFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qCAGlBH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WACnBlB,EAAKgR,QAAQ,UACbhR,EAAKmR,aAAY,KAEjBxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAJd,YAOJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WACnBlB,EAAKgR,QAAQ,SACbhR,EAAKmR,aAAY,KAEjBxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAJd,YAUI,QAARwC,EAEA3C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMlB,EAAKmR,aAAY,KAC1CxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCADd,QAEFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAMP,UAARwC,EAEL3C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMlB,EAAKmR,aAAY,KAC1CxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCADd,UAEFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAOpBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMlB,EAAKmR,aAAY,KAC1CxQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BADd,SAEFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCASxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YACEI,GAAG,WACHuD,KAAK,IACL7C,YAAY,wBACZK,MAAOP,EACPG,SAAUtC,KAAKsC,WAEjBjB,EAAAC,EAAAC,cAAA,2BACCwQ,EACD1Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMI,QAAS5B,KAAK8J,UACpCzI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAClDV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKI,QAAS5B,KAAK8R,UACnCzQ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBM,MAAO,CAAEC,MAAO,YAAhD,eAlHaC,IAAMC,WCQzB+P,GAAiBxG,EAVF,SAAC5L,GACpB,OACEyB,EAAAC,EAAAC,cAAA,UAAQI,GAAG,aACTC,QAAS,WACPhC,EAAMqS,SACNrS,EAAMe,SAAS+L,cAHnB,YAWEwF,GAAa,SAACtS,GAElB,IAAI2H,EAAK,KAgBT,OAdEA,EADgB,QAAd3H,EAAMoE,KAEN3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAGG,UAAd5B,EAAMoE,KAEX3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAIhBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAIbH,EAAAC,EAAAC,cAAA,UACJgG,EACA3H,EAAMuC,EAELvC,EAAMuS,MACJ9Q,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASI,QAAS,kBAAMhC,EAAMwS,gBAAgBxS,EAAM+C,SACpEtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAEhB,OA2MK6Q,eArMb,SAAAA,EAAYzS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqS,IACjBxS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuS,GAAAlS,KAAAH,KAAMJ,KAUR0S,YAAc,SAACjS,GAMb,GALAR,EAAKS,SAAS,CACZiS,SAAUlS,KAIC,IAATA,GACE6C,IAAE,iBAAiBS,OAAS9D,EAAKW,MAAM0E,KAAM,CAC/C,IAAIsN,EAAUtP,IAAE,iBAAiBS,MACjC9D,EAAKS,SAAS,CACZ4E,KAAMsN,IAER3S,EAAKD,MAAM6S,QAAQD,GACnB3S,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNZ,KAAMsN,MA3BG3S,EAiCnB8R,WAAa,SAACtR,GACZR,EAAKS,SAAS,CACZoS,QAASrS,KAnCMR,EAuCnB+R,WAAa,SAACe,GACZ,IAAIC,EAAM/S,EAAKW,MAAMiE,SACrBmO,EAAItM,KAAKqM,GACT9S,EAAKS,SAAS,CAAEmE,SAAUmO,IAC1B/S,EAAKD,MAAMiT,YAAYD,GAEvB/S,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNrB,SAAUmO,KAhDG/S,EAoDnBuS,gBAAkB,SAACzP,GACjB,IAAIiQ,EAAM/S,EAAKW,MAAMiE,SACrBmO,EAAIzC,OAAOxN,EAAO,GAClB9C,EAAKS,SAAS,CAAEmE,SAAUmO,IAC1B/S,EAAKD,MAAMiT,YAAYD,GAEvB/S,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNrB,SAAUmO,KA7DG/S,EAiEnBiT,UAAY,SAACvQ,GACX,IAAIwQ,EAAYxQ,EAAME,OAAOuQ,MAAM,GAC/BC,EAAOpT,EAAKD,MAAMe,SAASwM,OAAOtN,EAAKD,MAAMiB,KAAKqS,IAAIH,GAE1DE,EAAKnP,GAAG,gBAAiB,SAACkF,GAGRA,EAASmK,iBAAmBnK,EAASoK,YAEpD,SAACzF,KAED,WAEDsF,EAAKjK,SAAS1B,IAAI+L,iBAAiB3N,KAAK,SAAC4N,GAEvCzT,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNd,OAAQsO,IAGZzT,EAAKS,SAAS,CAAE0E,OAAQsO,IACxBzT,EAAKD,MAAM2T,UAAUD,QAvFRzT,EA4FnB4S,QAAU,SAAClQ,GACT1C,EAAKS,SAAS,CAAE4E,KAAM3C,EAAME,OAAOC,SA3FnC7C,EAAKW,MAAQ,CACX+R,UAAU,EACV9N,SAAU5E,EAAKD,MAAM6E,SACrBS,KAAMrF,EAAKD,MAAMsF,KACjBwN,SAAS,EACT1N,OAAQnF,EAAKD,MAAMoF,QAPJnF,wEAgGV,IACH2T,EACAC,EACAvO,EACAT,EACAiP,EALGhT,EAAAV,KAiFP,OAzEIA,KAAKQ,MAAM+R,UACbiB,EACEnS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYI,QAAS,kBAAMlB,EAAK4R,aAAY,KAA9D,QAEFmB,EACEpS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAO2P,OAAO,UAAUhS,GAAG,aAAaW,SAAUtC,KAAK8S,YACnEzR,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWoS,IAAI,cAC9BvS,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQhF,KAAKQ,MAAMwE,OACzB6B,QACExF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAO5B0D,EACE7D,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAOxC,UAAU,eAAec,SAAUtC,KAAKyS,QAAS/P,MAAO1C,KAAKQ,MAAM0E,OAExFT,EACEpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXxB,KAAKQ,MAAMiE,SAASqG,IAAI,SAAC3F,EAASxC,GACjC,OAAOtB,EAAAC,EAAAC,cAACsS,GAAD,CACL1R,EAAGgD,EAAQhD,EACXiQ,gBAAiB1R,EAAK0R,gBACtBzP,MAAOA,EACPwP,OAAO,EACPnO,KAAMmB,EAAQnB,YAOtBwP,EACEnS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOI,QAAS,kBAAMlB,EAAK4R,aAAY,KAAOjR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBM,MAAO,CAAEC,MAAO,cAEnH0R,EACEpS,EAAAC,EAAAC,cAACwG,EAAD,CAAQ/C,OAAQhF,KAAKQ,MAAMwE,SAE7BE,EACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBxB,KAAKQ,MAAM0E,MAE5CT,EACEpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXxB,KAAKQ,MAAMiE,SAASqG,IAAI,SAAU3F,EAASxC,GAC1C,OAAOtB,EAAAC,EAAAC,cAACsS,GAAD,CACL1R,EAAGgD,EAAQhD,EACXgQ,OAAO,EACPnO,KAAMmB,EAAQnB,WAQtB0P,EADE1T,KAAKQ,MAAMkS,QAEXrR,EAAAC,EAAAC,cAACuS,GAAD,CACEnC,WAAY3R,KAAK2R,WACjB9Q,IAAKb,KAAKJ,MAAMiB,IAChB+Q,WAAY5R,KAAK4R,aAKnBvQ,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WAAQlB,EAAKiR,YAAW,KAAzC,YAMFtQ,EAAAC,EAAAC,cAAA,WAASC,UAAU,QAChBgS,EACAC,EACAvO,EACD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,iCACCkD,EACAiP,GAEHrS,EAAAC,EAAAC,cAACyQ,GAAD,CACEC,OAAQjS,KAAKJ,MAAMqS,iBA7LPjQ,IAAMC,+BCjDtB8R,GAAS,SAACnU,GACd,OACEyB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QAAShC,EAAMoU,UACjD3S,EAAAC,EAAAC,cAAA,QAAMC,UAAW5B,EAAMqU,YAKvBC,GACJ,CACE,CACE,CACE/R,EAAG,+CACH6B,KAAM,UAER,CACE7B,EAAG,wCACH6B,KAAM,SAER,CACE7B,EAAG,6BACH6B,KAAM,SAGV,CACE,CACE7B,EAAG,sCACH6B,KAAM,UAER,CACE7B,EAAG,uCACH6B,KAAM,UAER,CACE7B,EAAG,gCACH6B,KAAM,WAGV,CACE,CACE7B,EAAG,+CACH6B,KAAM,QAER,CACE7B,EAAG,4CACH6B,KAAM,WAGV,CACE,CACE7B,EAAG,+BACH6B,KAAM,SAER,CACE7B,EAAG,wCACH6B,KAAM,WAGV,CACE,CACE7B,EAAG,wBACH6B,KAAM,SAER,CACE7B,EAAG,0CACH6B,KAAM,UAER,CACE7B,EAAG,sBACH6B,KAAM,WAKRyJ,GAAgB,CACpB0G,WAAY,CACV,UACA,aACA,SACA,SACA,YAEFC,YAAa,EACX,GACA,GACA,GACA,GACA,GAEFC,iBAAkB,CAChB,EAAC,GAAO,GAAO,GACf,EAAC,GAAO,GAAO,GACf,EAAC,GAAO,GACR,EAAC,GAAO,GACR,EAAC,GAAO,GAAO,KCvFbC,GAAyB9I,cD4F7B,SAAA+I,EAAY3U,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuU,IACjB1U,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyU,GAAApU,KAAAH,KAAMJ,KAKR4U,eAAiB,SAAClQ,EAAGmQ,GACnB,IAAIC,EAAW7U,EAAKW,MAAM6T,iBAC1BK,EAASpQ,GAAGmQ,IAAMC,EAASpQ,GAAGmQ,GAC9B5U,EAAKS,SAAS,CAAE+T,iBAAkBK,KATjB7U,EAYnB8U,cAAgB,SAACrQ,GAEf,IAAIsO,EAAM/S,EAAKW,MAAM4T,YACrBxB,EAAItO,IAAMsO,EAAItO,GACdzE,EAAKS,SAAS,CAAE8T,YAAaxB,KAhBZ/S,EAmBnBiK,SAAW,WAET,IADA,IAAMrF,EAAW,GAAImQ,EAAI/U,EAAKW,MAAM6T,iBAC3B/P,EAAI,EAAGA,EAAIsQ,EAAE1T,OAAQoD,IAG5B,IAFA,IAAIsO,EAAMgC,EAAEtQ,GAEHmQ,EAAI,EAAGA,EAAI7B,EAAI1R,OAAQuT,KACf,IAAX7B,EAAI6B,IACNhQ,EAAS6B,KAAK4N,GAAY5P,GAAGmQ,IAMnC5U,EAAKD,MAAMiT,YAAYpO,GACvB5E,EAAKD,MAAMe,SACRC,KAAKf,EAAKD,MAAMiB,KAChBiF,OAAO,CACNrB,SAAUA,IACTiB,KAAK,WACN7F,EAAKD,MAAMiV,mBApCfhV,EAAKW,MAAQiN,GAFI5N,wEAkDjB,IAPO,IAAAa,EAAAV,KAAA+N,EAE6C/N,KAAKQ,MAAnD2T,EAFCpG,EAEDoG,WAAYC,EAFXrG,EAEWqG,YAAaC,EAFxBtG,EAEwBsG,iBAG3B5P,EAAW,GALRgM,EAAA,SAOEqE,GAEP,IAAI5O,OAAK,EAET,IAAwB,IAApBkO,EAAYU,GAAc,CAExBlC,EAAMsB,GAAYY,GAClBC,EAAQ,GACZ,IAJ4B,IAAAC,EAAA,SAInBP,GACP,IAAIjT,EAAY,GACZyT,EAAOrC,EAAI6B,GACXS,EAAMb,EAAiBS,GAAIL,GAG7BjT,EADE0T,EACU,sBAEA,aAGd,IAAI3N,EAAK,KAEPA,EADe,QAAb0N,EAAKjR,KAEL3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAGE,UAAbyT,EAAKjR,KAEV3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAIhBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAIpBuT,EAAMzO,KAAKjF,EAAAC,EAAAC,cAAA,UAAQC,UAAWA,EAAWI,QAAS,WAChDlB,EAAK8T,eAAeM,EAAIL,KAGvBS,EAAM7T,EAAAC,EAAAC,cAAA,QAAM4T,MAAM,kBAA0B,KAC5C5N,EACA0N,EAAK9S,KAjCDsS,EAAI,EAAGA,EAAI7B,EAAI1R,OAAQuT,IAAKO,EAA5BP,GAqCTvO,EACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMlB,EAAKiU,cAAcG,KACvCX,EAAWW,IAEbC,QAKL7O,EACE7E,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMlB,EAAKiU,cAAcG,KACvCX,EAAWW,IAIlBrQ,EAAS6B,KAAKJ,IA7DP4O,EAAK,EAAGA,EAAKV,EAAYlT,OAAQ4T,IAAM,KAMxClC,EACAmC,EAPwCtE,EAAvCqE,GA+DT,OACEzT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZiD,GAGHpD,EAAAC,EAAAC,cAAC6T,GAAD,CACEpB,SAAUhU,KAAK8J,SACfmK,QAAQ,0BA3HiBjS,IAAMC,YCnFnC8R,GAAS,SAACnU,GACd,OACEyB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QAAShC,EAAMoU,UACjD3S,EAAAC,EAAAC,cAAA,QAAMC,UAAW5B,EAAMqU,YAyJdoB,eAnJb,SAAAA,EAAYzV,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqV,IACjBxV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuV,GAAAlV,KAAAH,KAAMJ,KAMRiV,cAAgB,WACdhV,EAAKS,SAAS,CAAEgV,KAAMzV,EAAKW,MAAM8U,KAAO,KARvBzV,EAWnB0V,YAAc,WACZ1V,EAAKgV,iBAVLhV,EAAKW,MAAQ,CACX8U,KAAM,GAHSzV,wEAeV,IAEH2V,EAEAF,EAJG5U,EAAAV,KAKP,OAAQA,KAAKQ,MAAM8U,MACjB,KAAK,EAEDE,EACEnU,EAAAC,EAAAC,cAACkU,GAAD,CACEzB,SAAUhU,KAAK6U,cACfZ,QAAQ,wBAIZqB,EACEjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAK,MAAQvB,KAAKJ,MAAMsF,KAAO,KAC/B7D,EAAAC,EAAAC,cAAA,4FAAsFF,EAAAC,EAAAC,cAAA,OAAKE,IAAK8P,OAC/FiE,GAGL,MAEJ,KAAK,EAEDA,EACEnU,EAAAC,EAAAC,cAACkU,GAAD,CACEzB,SAAUhU,KAAK6U,cACfZ,QAAQ,wBAIZqB,EACEjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAK+E,MACjCnF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,+GACCiU,GAGL,MAEJ,KAAK,EAGDF,EAEIjU,EAAAC,EAAAC,cAAC+S,GAAD,CACEzT,IAAOb,KAAKJ,MAAMiB,IAClBgS,YAAa7S,KAAKJ,MAAMiT,YACxBgC,cAAe7U,KAAK6U,gBAG1B,MAEJ,KAAK,EAEDW,EACEnU,EAAAC,EAAAC,cAACkU,GAAD,CACEzB,SAAUhU,KAAK6U,cACfZ,QAAQ,wBAIZqB,EACEjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAKgF,MACjCpF,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,SAAOmU,QAAQ,aACbrU,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QACNN,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYqC,KAAK,OAAO3B,YAAY,gBAGlDhB,EAAAC,EAAAC,cAAA,0FACCiU,GAGL,MAEJ,KAAK,EAEDA,EACEnU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASI,QAAS5B,KAAKuV,aAAzC,UAGAlU,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKI,QAAS5B,KAAK6U,eAArC,YAMJS,EACEjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKkU,OACTH,GAGL,MAEJ,KAAK,EAEDA,EACEnU,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQI,QAAS,kBAAMlB,EAAKd,MAAMgW,eAAc,KAAlE,aAKFN,EACEjU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKE,IAAK4J,MACTmK,GAQX,OACEnU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZ8T,UA7IgBtT,IAAMC,WCRzB4T,GAAYrK,EAAa6G,IAEzByD,GAAetK,EAAaoF,IAE5BmF,GAAWvK,EAAa7L,GAExBqW,GAAYxK,EAAavB,GAEzBgM,GAAiBzK,EAAarH,GAGhCnD,GAAO,CACTkV,QAAS,GACTC,UAAW,EACXC,SAAU,KACVC,YAAY,EACZ7Q,KAAM,IAoNO8Q,eA/Mb,SAAAA,EAAY1W,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsW,IACjBzW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwW,GAAAnW,KAAAH,KAAMJ,KAYR2W,SAAW,aAbQ1W,EAiBnBuO,OAAS,SAACgI,GACRvW,EAAKS,SAAS,CACZ+V,YAAY,EACZD,SAAUA,KApBKvW,EAwBnB6O,WAAa,SAAC0H,GACZvW,EAAKS,SAAS,CACZ8V,SAAUA,KA1BKvW,EA+BnBmG,cAAgB,SAACD,GACflG,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GACJD,EAAKW,MAAM4V,SADR,CAENrQ,YAAaA,OAnCAlG,EAyCnB2W,cAAgB,WACd,OAAI3W,EAAKW,MAAM4V,SAASrQ,aAAelB,MAASC,OAAO,MA1CtCjF,EAkDnB0T,UAAY,SAACD,GACXzT,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GACJD,EAAKW,MAAM4V,SADR,CAENpR,OAAQsO,OAtDKzT,EA4DnBgC,aAAe,SAACc,GACd9C,EAAKS,SAAS,CACZ6V,UAAWxT,KA9DI9C,EAkEnB4S,QAAU,SAACvN,GACTrF,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GAEJD,EAAKW,MAAM4V,SAFR,CAGNlR,KAAMA,OAvEOrF,EA4EnBgT,YAAc,SAACpO,GACb5E,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GAEJD,EAAKW,MAAM4V,SAFR,CAGN3R,SAAUA,OAjFG5E,EAsFnBwR,WAAa,SAACtM,GACZlF,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GAEJD,EAAKW,MAAM4V,SAFR,CAGNrR,QAASA,OA3FIlF,EAgGnBiR,YAAc,SAAC7P,GACbpB,EAAKS,SAAS,CACZ8V,SAAStW,OAAAqO,EAAA,EAAArO,CAAA,GAEJD,EAAKW,MAAM4V,SAFR,CAGNnV,SAAUA,OArGGpB,EA0GnB+V,cAAgB,SAACvV,GACfR,EAAKS,SAAS,CAAE+V,WAAYhW,KA3GXR,EA+GnBoS,OAAS,WACPpS,EAAKS,SAAS,CACZ8V,SAAU,QA/GZvW,EAAKW,MAAQQ,GAFInB,qKAsHjB,OAA4B,OAAxBG,KAAKQ,MAAM4V,SAEX/U,EAAAC,EAAAC,cAACkV,GAAD,CACE/H,WAAY1O,KAAK0O,WACjBN,OAAQpO,KAAKoO,SAIVpO,KAAKQ,MAAM6V,WAEhBhV,EAAAC,EAAAC,cAACmV,GAAD,CACEd,cAAe5V,KAAK4V,cACpB1Q,KAAMlF,KAAKQ,MAAM4V,SAASlR,KAC1B2N,YAAa7S,KAAK6S,YAClBhS,IAAKb,KAAKQ,MAAM4V,SAASvV,OAS7BsV,EAD0B,GAAxBnW,KAAKQ,MAAM2V,UAEX9U,EAAAC,EAAAC,cAACyU,GAAD,CACEhR,OAAQhF,KAAKQ,MAAM4V,SAASpR,OAC5BE,KAAMlF,KAAKQ,MAAM4V,SAASlR,KAC1BrE,IAAKb,KAAKQ,MAAM4V,SAASvV,IACzBkE,QAAS/E,KAAKQ,MAAM4V,SAASrR,QAC7BS,KAAMxF,KAAKQ,MAAMgF,OAKU,GAAxBxF,KAAKQ,MAAM2V,UAGhB9U,EAAAC,EAAAC,cAACuU,GAAD,CACEjV,IAAKb,KAAKQ,MAAM4V,SAASvV,IACzBI,SAAUjB,KAAKQ,MAAM4V,SAASnV,SAC9B8D,QAAS/E,KAAKQ,MAAM4V,SAASrR,QAC7B+L,YAAa9Q,KAAK8Q,YAClBO,WAAYrR,KAAKqR,aAOnBhQ,EAAAC,EAAAC,cAACsU,GAAD,CACE5D,OAAQjS,KAAKiS,OACbxN,SAAUzE,KAAKQ,MAAM4V,SAAS3R,SAC9BS,KAAMlF,KAAKQ,MAAM4V,SAASlR,KAC1BrE,IAAKb,KAAKQ,MAAM4V,SAASvV,IACzBmE,OAAQhF,KAAKQ,MAAM4V,SAASpR,OAC5BuO,UAAWvT,KAAKuT,UAChBd,QAASzS,KAAKyS,QACdI,YAAa7S,KAAK6S,cAMtBxR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACwU,GAAD,CACElU,aAAc7B,KAAK6B,aACnBpB,eAAgBT,KAAKQ,MAAM4V,SAASnV,SAAWjB,KAAKQ,MAAM4V,SAASnV,SAASC,OAAS,EACrFL,IAAKb,KAAKQ,MAAM4V,SAASvV,MAE1BsV,EAED9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEdxB,KAAKwW,gBACJnV,EAAAC,EAAAC,cAAC0U,GAAD,CACEjR,OAAQhF,KAAKQ,MAAM4V,SAASpR,OAC5BD,QAAS/E,KAAKQ,MAAM4V,SAASrR,QAC7BG,KAAMlF,KAAKQ,MAAM4V,SAASlR,KAC1BrE,IAAKb,KAAKQ,MAAM4V,SAASvV,IACzBmF,cAAehG,KAAKgG,cACpBvB,SAAUzE,KAAKQ,MAAM4V,SAAS3R,SAAWzE,KAAKQ,MAAM4V,SAAS3R,SAAW,KAExE,OA/DR,IAAI0R,SA3IUnU,IAAMC,WCzBJ0U,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO5V,EAAAC,EAAAC,cAAC2V,EAAgBC,SAAjB,CAA0BzU,MAAO,IAAIwJ,GACrD7K,EAAAC,EAAAC,cAAC6V,GAAD,OAEAC,SAASC,eAAe,QDuHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/R,KAAK,SAAAgS,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAvU,EAAuB,qDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,uDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,sDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,kDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,uECAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,uDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB,qDCAxCqU,EAAAC,QAAiBC,EAAAvU,EAAuB","file":"static/js/main.2cf3d72b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport autosize from 'autosize';\nimport CheckinPost from './CheckinPost';\nimport ThoughtPost from './ThoughtPost';\nimport moment from 'moment';\nimport ThoughtInput from './ThoughtInput';\n\nimport graphics1 from '../graphics/1.png';\nimport ErrorMsg from './ErrorMsg';\n\nlet feedListen;\n\nclass FeedTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thoughts: [],\n      checkins: [],\n\n    }\n    //this.processTime = this.processTime.bind(this);\n  }\n  /*\n    -PpfURL : string (optional)\n    -name : string\n    -isMyPost : bool\n    -timestamp : string - e.g. a few seconds ago\n    -conversation : array\n\n  - example of conversation: \n  [\n    {\n      uid: 'fdsadsadaad'\n      PpfURL: '...'\n      poster: true //is message from poster\n      message: 'hi i love'\n      \n    },\n   ...\n  ]\n  */\n  componentDidMount() {\n    autosize($('textarea'));\n    let element = this;\n    let tempFeed = [];\n    let tempCheckins = this.state.checkins;\n    let tempThoughts = this.state.thoughts;\n    feedListen = this.props.firebase.user(this.props.uid).collection(\"feed\")\n      .onSnapshot((snapshot) => {\n        //let tempFeed = [];\n        snapshot.docChanges().forEach((change) => {\n          console.log(\"changety[e]: \" + change.type);\n          if (change.type === \"added\") {\n            console.log(\"New city: \", change.doc.data());\n            tempFeed.push(change.doc.id);\n            let dat = change.doc.data();\n            if (change.doc.data().checkin) {\n              tempCheckins.unshift({\n                uid: dat.uid,\n                name: dat.name,\n                PpfURL: dat.PpfURL,\n                timestamp: moment(dat.timestamp).format('lll'),\n                postid: change.doc.id,\n                checkinData: dat.checkinData\n              })\n            }\n            else {\n              tempThoughts.unshift({\n                uid: dat.uid,\n                name: dat.name,\n                PpfURL: dat.PpfURL,\n                thought: dat.thought,\n                message: dat.message,\n                comments: dat.comm_cont,\n                conversation: [],\n                postid: change.doc.id,\n                timestamp: moment(dat.timestamp).format('lll'),\n              })\n            }\n          }\n\n        });\n        console.log(JSON.stringify(tempCheckins));\n        console.log(JSON.stringify(tempThoughts));\n        element.setState({\n          checkins: tempCheckins,\n          thoughts: tempThoughts\n        })\n        /*element.setState({\n          checkins: tempCheckins,\n          thoughts: tempThoughts\n        })*/\n      });\n  }\n  componentWillUnmount() {\n    feedListen();\n  }\n\n  /*feed = this.props.feed;\n\n  for (var i = 0; i< feed.length; i++){\n    \n  }*/\n  /*<ThoughtPost /> \n  const listItems = numbers.map((number) =>\n    <li>{number}</li>\n  );\n  */\n  //const checkins = this.state.checkins;\n  render() {\n\n    let checkinItems = this.state.checkins.map((checkin, index) =>\n      <CheckinPost\n        uid={this.props.uid}\n        posterUid={checkin.uid}\n        \n        PpfURL={checkin.PpfURL}\n        yourPpfURL={this.props.PpfURL}\n        key={toString(index)}\n        name={checkin.name}\n        timestamp={checkin.timestamp}\n\n        postid={checkin.postid}\n        checkinData={checkin.checkinData}\n        firebase={this.props.firebase}\n      />\n    );\n    let thoughtItems = this.state.thoughts.map((thought, index) =>\n      <ThoughtPost\n        uid={this.props.uid}\n        posterUid={thought.uid}\n\n        PpfURL={thought.PpfURL}\n        yourPpfURL={this.props.PpfURL}\n        \n        key={toString(index)}\n        name={thought.name}\n        thought={thought.thought}\n        timestamp={thought.timestamp}\n        \n        message={thought.message}\n        postid={thought.postid}\n        firebase={this.props.firebase\n        } />\n    );\n\n\n    return (\n\n      <section className=\"feed\">\n        <ThoughtInput\n          PpfURL={this.props.PpfURL}\n          name={this.props.name}\n          uid={this.props.uid}\n          network={this.props.network}\n          firebase={this.props.firebase}\n        />\n        <h1 className=\"date-marker\">February 17</h1>\n        {checkinItems}\n        {thoughtItems}\n\n\n        <ErrorMsg\n          src={graphics1}\n          header='Nothing more.'\n          msg='Why not post a thought?'\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default FeedTab;\n","import React, { Component } from 'react';\nimport icon from './../graphics/icon.png';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestsLength: props.requestsLength\n    };\n  }\n\n  componentDidMount() {\n    //let element = this;\n    var requestsRef = this.props.firebase.user(this.props.uid);\n\n    requestsRef.onSnapshot((doc) => {\n      this.setState({ requestsLength: doc.data().requests.length })\n    })\n  }\n\n  setAddFriend = (bool) => {\n    this.setState({\n      addFriend: bool\n    });\n  }\n\n  render() {\n    let networkNotif = null;\n    if (this.state.requestsLength > 0) {\n      networkNotif = (\n        <span className=\"alert\">{this.state.requestsLength}</span>\n      );\n    }\n    return (\n      <nav className=\"main-nav\">\n        <div className=\"nav-content\">\n          <img className=\"logo-img\" src={icon} />\n          <span className=\"logo\">Newroots\n          <span className=\"sublogo\">give and get support.</span>\n          </span>\n          <button id=\"feed-but\" onClick={() => this.props.setActiveTab(0)}>\n            <span className=\"jam jam-messages-alt\" style={{ color: '#e38882' }}></span></button>\n          <button id=\"network-but\" onClick={() => this.props.setActiveTab(1)}>\n            <span className=\"jam jam-users\" style={{ color: '#85d0c6' }}>\n              {networkNotif}\n            </span>\n\n          </button>\n          <button id=\"user-but\" onClick={() => this.props.setActiveTab(2)}>\n          <span className=\"jam jam-user\" style={{ color: '#94cdea' }}></span></button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport texture1 from './../graphics/flower.png';\nimport texture2 from './../graphics/thing.png';\n\n\n\nconst TextQ = (props) => {\n  return (\n    <div className=\"ci-question\">\n      <h2>{props.q}</h2>\n      <textarea className=\"feelings\" rows=\"3\" placeholder=\"I think..\"\n        onChange={(event) => props.setAnswer(event.target.value, props.index)}></textarea>\n    </div>\n  );\n};\n\nclass YesNoQ extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: null\n    };\n  }\n  render() {\n    let yesClass = 'yes', noClass = 'no', answer = this.state.answer;\n    if (answer == 'yes') {\n      noClass += ' disabled';\n    } else if (answer == 'no') {\n      yesClass += ' disabled';\n    }\n    return (\n      <div className=\"ci-question\">\n        <h2>{this.props.q}</h2>\n        <div className=\"yesno\">\n          <button className={yesClass}\n            onClick={() => {\n              this.setState({ answer: 'yes' })\n              this.props.setAnswer('yes', this.props.index)\n            }}>\n            <span className=\"jam jam-check\" style={{ color: 'white' }}></span>\n          </button>\n          <button className={noClass}\n            onClick={() => {\n              this.setState({ answer: 'no' })\n              this.props.setAnswer('no', this.props.index)\n            }}>\n            <span className=\"jam jam-close\" style={{ color: '#8A8184' }}> </span>\n          </button>\n        </div>\n        <textarea\n          className=\"feelings\"\n          rows=\"1\"\n          placeholder=\"Other comments\"\n          onChange={(event) => this.props.setComment(event, this.props.index)}></textarea>\n      </div>\n    );\n  }\n\n}\n\nclass RangeQ extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    $('input[type=\"range\"]').each(function (index) {\n      let range = $(this).parent().find('.indicator');\n      let p = $(range).find('p');\n      $(range).hide();\n\n      $(this).focusin(function () {\n        $(range).css('left', ('calc(' + $(this).val() * (1 / 10) * 100) + '% - 60px)');\n        $(range).show();\n      });\n\n      $(this).focusout(function () {\n        $(range).hide();\n      });\n\n      $(this).on('input', function () {\n        $(range).css('left', ('calc(' + $(this).val() * (1 / 10) * 100) + '% - 60px)');\n        $(p).text($(this).val());\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ci-question\">\n        <h2>{this.props.q}</h2>\n        <div className=\"mood-measurer\">\n          <input type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={this.props.val}\n            onChange={(event) => this.props.setAnswer(event.target.value, this.props.index)} />\n          <div className=\"indicator\">\n            <p>4</p>\n          </div>\n          <div className=\"num\"><small>1</small><small>7</small></div>\n        </div>\n        <textarea\n          className=\"feelings\"\n          rows=\"1\"\n          placeholder=\"Other comments\"\n          onChange={(event) => this.props.setComment(event, this.props.index)}></textarea>\n      </div>\n    );\n  }\n};\n\nclass CheckinModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkins: props.checkins,\n      currIndex: 0\n    };\n  }\n\n\n\n  incrementCurrIndex = () => {\n    let i = this.state.currIndex;\n    this.setState({ currIndex: i + 1 });\n  }\n\n  setAnswer = (answer, checkinIndex) => {\n    let checkins = this.state.checkins;\n    checkins[checkinIndex].answer = answer;\n\n    this.setState({ checkins: checkins });\n  }\n\n  setComment = (event, checkinIndex) => {\n    let checkins = this.state.checkins;\n    checkins[checkinIndex].comment = event.target.value;\n\n    this.setState({ checkins: checkins });\n  }\n\n\n  //TOOD - SAVE CHECKIN DATA\n  saveCheckinData = () => {\n    let time = moment().format('L');\n\n    if (this.state.checkins.length !== 0) {\n      //save to feed of every person in the network\n      let network = this.props.network;\n      let PpfURL = this.props.PpfURL === undefined ? null : this.props.PpfURL;\n      let data = {\n        PpfURL: PpfURL,\n        name: this.props.name,\n        uid: this.props.uid,\n        checkin: true,\n        checkinData: this.state.checkins,\n        timestamp: new Date().toString()\n      };\n\n      //save to your feed\n      this.props.firebase.feed(this.props.uid).add(data).then((docRef) => {\n        let id = docRef.id;\n        for (let i = 0; i < network.length; i++) {\n          this.props.firebase.feed(network[i]).doc(id).set(data);\n        }\n\n        //save to post\n        this.props.firebase.posts().doc(id).set(data);\n      });\n    }\n\n\n    this.props.firebase.user(this.props.uid).update({\n      lastCheckin: time\n    }).then(() => {\n      this.props.updateCheckin(time);\n    });\n\n\n  }\n\n  render() {\n    let checkinQs = [], checkins = this.state.checkins, currIndex = this.state.currIndex;\n    for (var i = currIndex; i < checkins.length && i < currIndex + 1; i++) {\n      let addEl;\n      if (checkins[i].type == 'text') {\n        addEl = (\n          <TextQ\n            q={checkins[i].q}\n            index={i}\n            setAnswer={this.setAnswer}\n          />\n        );\n      }\n      else if (checkins[i].type == 'yes/no') {\n        addEl = (\n          <YesNoQ\n            q={checkins[i].q}\n            index={i}\n            setAnswer={this.setAnswer}\n            setComment={this.setComment}\n          />\n        );\n      }\n      else {\n        addEl = (\n          <RangeQ\n            q={checkins[i].q}\n            index={i}\n            val={checkins[i].answer ? checkins[i].answer : 5}\n            setAnswer={this.setAnswer}\n            setComment={this.setComment}\n          />\n        );\n      }\n      checkinQs.push(addEl);\n    }\n\n    if (checkins.length === 0) {\n      checkinQs.push(\n        <div className=\"ci-question\">\n          <h2>{'Good day, ' + this.props.name + '.'}</h2>\n          <p>\n            You've got nothing to check-in - have a great rest of the day.\n          </p>\n        </div>\n      );\n    }\n\n\n    let submitButton = null;\n    if (currIndex + 1 >= checkins.length) {\n      submitButton = (\n        <button id=\"submit\" onClick={this.saveCheckinData}>\n          <span className=\"jam jam-check\" style={{ color: '#9FC6C1' }}></span>\n        </button>\n      );\n    } else {\n      submitButton = (\n        <button id=\"submit\" onClick={this.incrementCurrIndex}>\n          <span className=\"jam jam-arrow-right\" style={{ color: '#9FC6C1' }}></span>\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"modal-bg\">\n        <div className=\"checkin modal\">\n          <img className=\"bg-texture first\" src={texture1} />\n          <img className=\"bg-texture second\" src={texture2} />\n          <div className=\"bg\"></div>\n          <h1>{moment().format('MMMM D')}</h1>\n          <h1 className=\"title\">\n            <div className=\"highlight\"></div><span>check-in</span>\n          </h1>\n          <div className=\"checkin-content\">\n            {checkinQs}\n\n            {submitButton}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckinModal;","\nimport React, { Component } from 'react';\n\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n   \n  }\n\n  render() {\n    let picStyle = this.props.PpfURL ? {\n      backgroundImage: 'url(' + this.props.PpfURL + ')',\n    } : null;\n\n    return (\n      <div className=\"pic\" style={picStyle}>\n        {this.props.content}\n      </div>\n    );\n  }\n}\n\n\nexport default Avatar;","import React, { Component } from 'react';\n\n\n/*\n  {\n        uid: 'fdsadsadaad'\n        PpfURL: '...'\n        poster: true //is message from poster,\n        timestamp: '..\n        message: 'hi i love'\n        \n      },\n*/\n\n/*\nprops:\n      uid,\n      PpfURL,\n      poster,\n      message,\n      firebase,\n      postid\n*/\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentBox: null\n    }\n  }\n\n  onChange = event => {\n    this.setState({ commentBox: event.target.value });\n  };\n\n  submitComment = () => {\n    let comment = this.state.commentBox;\n\n    let data = {\n      uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n    };\n\n    this.props.firebase.post(this.props.postid).collection('conversation').add(data);\n\n    this.setState({ commentBox: null });\n    this.comment.value = \"\";\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"leave-comment\">\n        <input type=\"text\" placeholder=\"comment..\" ref={el => this.comment = el}  onChange={this.onChange} />\n\n        <button onClick={this.submitComment} disabled={this.state.commentBox == null}>\n          <span className=\"jam jam-paper-plane\" style={{ color: '#9FC6C1' }} ></span>\n        </button>\n      </div>\n    );\n  }\n};\n\nexport default CommentBox;\n","import React, { Component } from 'react';\n\n\n/*\nloadComments\ncommentLength\n*/\n\nclass CommentBut extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <button\n        onClick = {this.props.loadComments}\n        className=\"comment-but\">\n        <span className=\"jam jam-message-alt\" ></span>\n        <span>{this.props.commentLength + ' comments'}</span>\n      </button>\n    );\n  }\n};\n\nexport default CommentBut;\n","import React, { Component } from 'react';\n\nimport Avatar from './Avatar';\n\n/*\nprops\n uid: this.props.uid,\n      PpfURL: this.props.PpfURL,\n      isMyPost: uid = this.uid\n      poster: this.props.poster,\n      timestamp: new Date().toString(),\n      message: comment\n*/\nconst Conversation = (props) => {\n  let classN;\n  if (!props.isMyPost) {\n    classN = 'reply';\n  } else {\n    classN = 'comment';\n  }\n\n  return (\n    <div className={classN}>\n      <Avatar PpfURL={props.PpfURL} />\n      <div className=\"bubble\">\n        <span>{props.message}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Conversation;\n","import React, { Component } from 'react';\nimport Conversation from './Conversation';\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log('hi ' +this.props.showComments);\n\n    if (this.props.showComments == false) {\n      return null;\n    }\n\n    let convo = [], conversation = this.props.conversation;\n    for (let i = 0; i < conversation.length; i++) {\n      let msg = conversation[i];\n      console.log(msg.isMyPost);\n      convo.push(\n        <Conversation\n          PpfURL={msg.PpfURL}\n          isMyPost={msg.isMyPost}\n          message={msg.message}\n        />\n      );\n    }\n\n    return (\n      <div className=\"all-comments\">\n        {convo.length === 0 ? \n        <p>No comments.</p>\n        : convo}\n      </div>\n    );\n  }\n};\n\nexport default Comments;\n","import React, { Component } from 'react';\nimport Avatar from './Avatar';\nimport CommentBox from './CommentBox';\nimport CommentBut from './CommentBut';\nimport Comments from './Comments';\nimport Conversation from './Conversation';\n\n\n/*\n  props:\n  -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -checkinData : array\n\n  -conversation :array\n\n  - example of checkinData: \n    [\n      {\n        q: 'How are you feeling today?'\n        type: 'range'\n        answer: '5',\n        comment: 'hi'\n      },\n      {\n        q: 'Did you take your medication?'\n        type: 'yes/no'\n        answer: 'yes'\n        comment: 'hi'\n      },\n      {\n        q: 'u gey?'\n        type: 'text'\n        answer: 'dsadsdsaadadada'\n      }\n    ]\n*/\nclass CheckinPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversation: [],\n      conversationLength: 0,\n      showComments: false\n    }\n  }\n  componentDidMount() {\n\n    this.props.firebase.posts().doc(this.props.postid).collection(\"conversation\").onSnapshot((snapshot) => {\n\n      let tempConvo = this.state.conversation;\n\n      if (this.loadedComments()) {\n\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            let dat = change.doc.data();\n            tempConvo.push({\n              uid: dat.uid,\n              isMyPost: dat.uid == this.props.uid,\n              PpfURL: dat.PpfURL,\n              poster: dat.poster,\n              timestamp: dat.timestamp,\n              message: dat.message\n            })\n          }\n\n        });\n      }\n      console.log(tempConvo);\n      this.setState({\n        conversation: tempConvo,\n        conversationLength: snapshot.size\n      });\n\n    });\n\n  }\n\n  loadedComments = () => {\n    return this.state.conversation.length !== 0;\n  }\n\n  loadComments = () => {\n\n    if (!this.loadedComments()) {\n\n      //load comments\n      let tempConvo = [];\n\n      //get once snapshot\n      this.props.firebase.posts().doc(this.props.postid).collection(\"conversation\").get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          let dat = doc.data();\n          console.log('id ' + dat.uid + '\\n' + this.props.uid);\n          tempConvo.push({\n            uid: dat.uid,\n            isMyPost: dat.uid == this.props.uid,\n            PpfURL: dat.PpfURL,\n            poster: dat.poster,\n            timestamp: dat.timestamp,\n            message: dat.message\n          })\n        });\n\n        //at end, set state of conversation and showconversation\n\n        this.setState({\n          conversation: tempConvo,\n          conversationLength: tempConvo.length,\n          showComments: !this.state.showComments\n        });\n      });\n\n\n    } else {\n      this.setState({ showComments: !this.state.showComments })\n    }\n  }\n\n\n\n  render() {\n\n    let checkinData = this.props.checkinData;\n\n    let editButton = null;\n    if (this.props.posterUid == this.props.uid) {\n      editButton = (\n        <button className=\"user-edit\">\n          <span className=\"jam jam-pencil\" style={{ color: '#EFF0DA' }}></span>\n        </button>\n      );\n    }\n\n    let checkins = [];\n\n    for (var i = 0; i < checkinData.length; i++) {\n      let checkin = checkinData[i];\n      let el = null;\n\n      if (checkin.type == 'range') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q} </span>\n              <div className=\"mood-icon\">{checkin.answer}</div>\n            </div>\n            <div className=\"content\">{checkin.comment}</div>\n          </div>\n        );\n      }\n      else if (checkin.type == 'yes/no') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q}</span>\n              {checkin.answer == 'yes' ?\n                <div className=\"mood-icon\">\n                  <span className=\"jam jam-check\" style={{ color: '#EFF0DA' }}>\n\n                  </span>\n                </div>\n                :\n                <div className=\"mood-icon\">\n                  <span className=\"jam jam-close\" style={{ color: '#EFF0DA' }}>\n\n                  </span>\n                </div>\n              }\n            </div>\n            <div className=\"content\">{checkin.comment}</div>\n          </div>\n        );\n      }\n      else if (checkin.type == 'text') {\n        el = (\n          <div>\n            <div className=\"mood\">\n              <span>{checkin.q} </span>\n            </div>\n            <div className=\"content\">{checkin.answer}</div>\n          </div>\n        );\n      }\n      checkins.push(el);\n    }\n\n    return (\n      <div className=\"checkin activity\">\n        <div className=\"header\">\n          <Avatar PpfURL={this.props.PpfURL} />\n          <div className=\"name-date\">\n            <div><span className=\"name\">{this.props.name}</span>\n              <span className=\"sub\">&nbsp;checked in</span></div>\n            <div><span className=\"date\">{this.props.timestamp}</span></div>\n          </div>\n          {editButton}\n        </div>\n        <div className=\"content\">\n\n          {checkins}\n\n        </div>\n\n    \n        <CommentBut\n          loadComments={this.loadComments}\n          commentLength={this.state.conversationLength}\n        />   \n         <Comments\n          showComments={this.state.showComments}\n          conversation={this.state.conversation}\n        />\n        <CommentBox\n          uid={this.props.uid}\n          PpfURL={this.props.yourPpfURL}\n          poster={this.props.name}\n          firebase={this.props.firebase}\n          postid={this.props.postid}\n        />\n      </div>\n    );\n  }\n};\n\nexport default CheckinPost;\n","import React, { Component } from 'react';\nimport Avatar from './Avatar';\nimport CommentBox from './CommentBox';\nimport CommentBut from './CommentBut';\nimport Comments from './Comments';\nimport Conversation from './Conversation';\n\n/*\n\nprops:\n -PpfURL : string (optional)\n  -name : string\n  -isMyPost : bool\n  -timestamp : string - e.g. a few seconds ago\n  -thought\n  -conversation : array\n\n  - example of conversation: \n    [\n      {\n        uid: 'fdsadsadaad'\n        PpfURL: '...'\n        poster: true //is message from poster,\n        timestamp: '..\n        message: 'hi i love'\n        \n      },\n     ...\n    ]\n\n*/\nlet convoListen;\n\nclass ThoughtPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversation: [],\n      conversationLength: 0,\n      showComments: false\n    }\n  }\n  componentDidMount() {\n\n    convoListen = this.props.firebase.posts().doc(this.props.postid).collection(\"conversation\").onSnapshot((snapshot) => {\n\n      let tempConvo = this.state.conversation;\n      \n      if (this.loadedComments()) {\n\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            let dat = change.doc.data();\n            tempConvo.push({\n              uid: dat.uid,\n              isMyPost: dat.uid == this.props.uid,\n              PpfURL: dat.PpfURL,\n              poster: dat.poster,\n              timestamp: dat.timestamp,\n              message: dat.message\n            })\n          }\n\n        });\n      }\n      console.log(tempConvo);\n      this.setState({\n        conversation: tempConvo,\n        conversationLength: snapshot.size\n      });\n\n    });\n\n  }\n  componentWillUnmount() {\n    //convoListen.detach();\n  }\n\n  loadedComments = () => {\n    return this.state.conversation.length !== 0;\n  }\n\n  loadComments = () => {\n\n    if (!this.loadedComments()) {\n\n      //load comments\n      let tempConvo = [];\n\n      //get once snapshot\n      this.props.firebase.posts().doc(this.props.postid).collection(\"conversation\").get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          let dat = doc.data();\n          tempConvo.push({\n            uid: dat.uid,\n            isMyPost: dat.uid == this.props.uid,\n            PpfURL: dat.PpfURL,\n            poster: dat.poster,\n            timestamp: dat.timestamp,\n            message: dat.message\n          })\n        });\n\n        //at end, set state of conversation and showconversation\n\n        this.setState({\n          conversation: tempConvo,\n          conversationLength: tempConvo.length,\n          showComments: !this.state.showComments\n        });\n      });\n\n\n    } else {\n      this.setState({ showComments: !this.state.showComments })\n    }\n  }\n\n\n  render() {\n    let editButton = null;\n    if (this.props.posterUid == this.props.uid) {\n      editButton = (\n        <button className=\"user-edit\">\n          <span className=\"jam jam-pencil\" style={{ color: '#8a8184' }}></span>\n        </button>\n      );\n    }\n    console.log('this.props.ismypost' + this.props.posterUid + \" \\n \" + this.props.uid);\n    let thought = (\n      <Conversation\n        isMyPost={this.props.posterUid == this.props.uid}\n        PpfURL={this.props.PpfURL}\n        message={this.props.thought}\n      />\n    );\n\n    return (\n      <div className=\"thought activity\">\n        <div className=\"header\">\n          <Avatar PpfURL={this.props.PpfURL} />\n          <div className=\"name-date\">\n            <div><span className=\"name\">{this.props.name}</span><span className=\"sub\">&nbsp;updated</span></div>\n            <div><span className=\"date\">{this.props.timestamp}</span></div>\n          </div>\n\n          {editButton}\n\n        </div>\n\n        {thought}\n\n       \n        <CommentBut\n          loadComments={this.loadComments}\n          commentLength={this.state.conversationLength}\n        />\n         <Comments\n          showComments={this.state.showComments}\n          conversation={this.state.conversation}\n        />\n        <CommentBox\n          uid={this.props.uid}\n          PpfURL={this.props.yourPpfURL}\n          poster={this.props.name}\n          firebase={this.props.firebase}\n          postid={this.props.postid}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ThoughtPost;\n","\nimport React, { Component } from 'react';\nimport $ from 'jquery';\n\n\nclass ThoughtInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thought: null\n    }\n  }\n\n  onThoughtChange = (event) => {\n    this.setState({ thought: event.target.value })\n  }\n\n  onSubmit = () => {\n    //save to feed of every person in the network\n    let network = this.props.network;\n    let thought = this.state.thought;\n    let PpfURL = this.props.PpfURL === undefined ? null : this.props.PpfURL;\n    let data = {\n      PpfURL: PpfURL,\n      name: this.props.name,\n      uid: this.props.uid,\n      timestamp: new Date().toString(),\n      thought: thought\n    };\n\n\n    //save to your feed\n    this.props.firebase.feed(this.props.uid).add(data).then((docRef) => {\n      let id = docRef.id;\n      for (let i = 0; i < network.length; i++) {\n        this.props.firebase.feed(network[i]).doc(id).set(data);\n      }\n\n      //save to post\n      this.props.firebase.posts().doc(id).set(data).then(() => {\n        this.setState({\n          thought: null\n        });\n        $('#thought-box').val('');\n      });\n\n    });\n\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"create-thought\">\n        <textarea rows=\"2\" id=\"thought-box\" placeholder=\"Your thoughts\" onChange={this.onThoughtChange}></textarea>\n        <button\n          id=\"update\"\n          onClick={this.onSubmit}\n          disabled={this.state.thought == null}>update</button>\n      </div>\n    );\n  }\n}\n\n\nexport default ThoughtInput;","\nimport React, { Component } from 'react';\n\n\nclass ErrorMsg extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"error-msg\">\n        <img src={this.props.src}></img>\n        <h2>{this.props.header}</h2>\n        <p>{this.props.msg}</p>\n      </div>\n    );\n  }\n}\n\n\nexport default ErrorMsg;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n\nconst config = {\n  apiKey: \"AIzaSyAE-aLJJ6ihwSxicksB67Yeg_84vE4J_wM\",\n  authDomain: \"treehacks2019.firebaseapp.com\",\n  databaseURL: \"https://treehacks2019.firebaseio.com\",\n  projectId: \"treehacks2019\",\n  storageBucket: \"treehacks2019.appspot.com\",\n  messagingSenderId: \"50059105382\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.store = app.storage();\n    this.fs = app.firestore();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  /*user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  feed = () => this.db.ref('feed');*/\n\n  user = uid => this.fs.collection('users').doc(uid);\n\n  users = () => this.fs.collection('users');\n\n  posts = () => this.fs.collection('posts');\n\n  feed = uid => this.fs.collection(\"users\").doc(uid).collection('feed');\n\n  post = postid => this.fs.collection('posts').doc(postid);\n\n  posts = () => this.fs.collection('posts');\n\n  // post = postid => this.fs.collection(\"posts\").doc(postid).collection(\"conversation\");\n\n  fs = () => this.fs;\n\n  photos = (uid) => this.store.ref(uid);\n\n}\n\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  passwordOne: '',\n  error: null,\n};\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = () => {\n    const { name, email, passwordOne } = this.state;\n    let element = this;\n    const default_vals = {\n      name: name,\n      email: email,\n      network: [],\n      requests: [],\n      checkins: [\n        {\n          q: 'How are you feeling today?',\n          type: 'range',\n        }\n      ],\n      PpfURL: null\n    };\n    let ID;\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        ID = authUser.user.uid;\n\n          return element.props.firebase\n            .user(ID)\n            .set({\n              uid: ID,\n              ...default_vals\n            }).then(()=>{  \n              this.setState({ ...INITIAL_STATE });\n              this.props.SignUp({\n              uid: ID,\n              ...default_vals\n\n          });\n        });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n  };\n\n  render() {\n    const {\n      name,\n      email,\n      passwordOne,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne === '' ||\n      email === '' ||\n      name === '';\n\n    return (\n      <div className=\"login-page\">\n        <h2>welcome 🌱\n            <button className=\"back-but\" onClick={() => this.props.setSignUp(false)}>\n            <span className=\"jam jam-arrow-left\" style={{ color: '#635358' }}></span>\n          </button>\n        </h2>\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"full name\"\n          value={name}\n          onChange={this.onChange}>\n        </input>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"email\"\n          value={email}\n          onChange={this.onChange}>\n        </input>\n        <input\n          name=\"passwordOne\"\n          type=\"password\"\n          placeholder=\"password\"\n          value={passwordOne}\n          onChange={this.onChange}>\n        </input>\n\n        {error && <p>{error.message}</p>}\n\n        <button disabled={isInvalid}\n          className=\"signup-but\"\n          onClick={() => this.onSubmit()}>\n          sign up\n          </button>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;","import React, { Component } from 'react';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  \n  onSubmit = () => {\n    let element = this;\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        let ID = authUser.user.uid;\n\n        /*this.props.firebase\n          .user(ID).once('value').then((snapshot)=>{\n            this.setState({ ...INITIAL_STATE });\n            this.props.checkLogin(snapshot.val());\n\n          });*/\n        this.props.firebase.user(ID).get().then(function(doc){\n            element.setState({\n                ...INITIAL_STATE\n            });\n            // console.log(JSON.stringify(doc.data()));\n            element.props.checkLogin(doc.data());\n        });\n\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <div className=\"login-page\">\n      <h2>Newroots\n       <button className=\"back-but\" onClick={()=>this.props.setLogin(false) }>\n         <span className=\"jam jam-arrow-left\" style={{color: '#635358'}}></span>\n       </button>\n     </h2>\n     <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"email\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"password\"\n        />\n      {error && <p>{error.message}</p>}\n     <button className=\"login-but\" onClick={this.onSubmit} disabled={isInvalid} >login</button>\n   </div>\n    );\n  }\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport plants from './../graphics/plants.png';\nimport hero from './../graphics/hero.gif';\nimport { withFirebase } from './Firebase';\n\nimport SignupForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nconst SignUpFormFB = withFirebase(SignupForm);\nconst LoginFormFB = withFirebase(LoginForm);\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signingUp: false,\n      loggingIn: false\n    };\n  }\n\n  setSignUp = (bool) => {\n    this.setState({\n      signingUp: bool\n    });\n  }\n\n  setLogin = (bool) => {\n    this.setState({\n      loggingIn: bool\n    });\n  }\n\n  render (){\n    var content;\n    if (this.state.loggingIn){\n      content = (\n        <LoginFormFB \n          checkLogin = {this.props.checkLogin}\n          setLogin = {this.setLogin} />\n      );\n    }else if (this.state.signingUp){\n      content = (\n        <SignUpFormFB \n          SignUp = {this.props.SignUp}\n          setSignUp = {this.setSignUp}/>\n      );\n    }else{\n      content = (\n        <div>\n          <h2>Newroots</h2>\n          <p>Give and get support from your support network. Feel safe with those you trust.</p>\n          <div className=\"buts\">\n            <button className=\"signup-but\" onClick={()=>this.setSignUp(true)} >sign up</button>\n            <button className=\"login-but\" onClick={()=>this.setLogin(true) }>login</button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"home-page\">\n        <img className=\"bg-texture\" src={hero}/>\n        <img src={plants}/>\n      {content}\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport plant from '../graphics/icon.png';\nimport $ from 'jquery';\nimport Avatar from './Avatar';\nimport * as firebase from 'firebase';\n\nclass AddFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: this.props.requests,\n      requestUsers: [],\n      loading: false,\n      network: this.props.network,\n      allUsers: [],\n      addedFriend: '',\n      invitedFriend: '',\n      loading: false\n    };\n  }\n\n\n  componentDidMount() {\n    let ref = this.props.firebase.user(this.props.uid);\n    ref.onSnapshot((doc) => {\n      let data = doc.data();\n      this.setState({\n        requests: data.requests,\n      })\n    })\n  }\n\n  setAddedFriend = (mssg) => {\n    this.setState({\n      addedFriend: mssg\n    });\n  }\n\n  setInvitedFriend = (mssg) => {\n    this.setState({\n      invitedFriend: mssg\n    });\n  }\n\n  addFriend = () => {\n    // if (this.state.loading === true) return;\n\n\n    let email = $('#add-friend-email').val();\n\n    let ref = this.props.firebase.users().where(\"email\", \"==\", email);\n\n    ref.get()\n      .then(querySnapshot => {\n        // console.log(this.props.uid)\n        this.props.firebase.users().doc(querySnapshot.docs[0].id)\n          .update({\n            \"requests\": firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n          });\n        this.setAddedFriend('sent request!');\n      })\n      .catch(err => {\n        this.setAddedFriend(\"couldn't find \" + email);\n      });\n\n    // if (this.state.allUsers.length == 0){\n\n    // }else{\n    //   this.sendRequest(users[i].uid);\n    // }\n\n    // let users = this.state.users;\n\n    // for (var i = 0; i < users.length; i++) {\n    //   console.log(JSON.stringify(users[i]));\n    //   if (users[i].email == email) {\n    //     //are they your friend?\n    //     let index = users.indexOf(users[i].uid);\n    //     if (index > -1) {\n    //       this.setAddedFriend(\"you're already friends!\");\n    //       return;\n    //     }\n    //     //send request\n\n    //     return;\n    //   }\n    // }\n  };\n\n  inviteFriend = () => {\n    this.setAddedFriend('invited!');\n  };\n\n  acceptRequest = (uid) => {\n    //remove uid from your request\n    this.removeRequest(uid);\n    //insert uid to your network array and their network array\n    //propogate backwards - update networktab's state and app's state\n    let network = this.state.network;\n    network.push(uid);\n\n    this.setState({ network: network });\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        network: network\n      });\n\n    this.props.firebase.user(uid)\n      .update({\n        network: firebase.firestore.FieldValue.arrayUnion(this.props.uid)\n      });\n\n  }\n\n  removeRequest = (uid) => {\n    //remove uid from your requests\n\n    // let requestArr = this.state.requests;\n    // let index = requestArr.indexOf(uid);\n    // if (index > -1) {\n    //   requestArr.splice(index, 1);\n    // }\n    // let usersArr = this.state.requestUsers;\n    // for (var i = 0; i < usersArr.length; i++) {\n    //   if (usersArr[i].uid == uid) {\n    //     usersArr.splice(i, 1);\n    //   }\n    // }\n    // this.setState({ requests: requestArr, requestUsers: usersArr });\n    // this.props.firebase\n    //   .user(this.props.uid)\n    //   .update({\n    //     requests: requestArr\n    //   });\n    this.props.firebase.user(this.props.uid).update({\n      \"requests\": firebase.firestore.FieldValue.arrayRemove(uid)\n    }).then(() => {\n      let users = this.state.requestUsers;\n      for (var i = 0; i < users.length; i++) {\n        if (users[i].uid == uid) {\n          users.splice(i, 1);\n          this.setState({ requestUsers: users });\n        }\n      }\n    });\n\n\n  }\n\n  loadRequestUsers = () => {\n    this.setState({ loading: true, requestUsers: [] });\n    let users = [];\n    let counter = 0;\n    for (var i = 0; i < this.state.requests.length; i++) {\n      let req = this.state.requests[i];\n      // console.log(req)\n      this.props.firebase\n        .user(req).get().then((doc) => {\n          users.push(doc.data());\n          // console.log(JSON.stringify(doc.data()));\n          this.setState({ requestUsers: users });\n          counter++;\n          if (counter === this.state.requests.length) {\n            // console.log(\"done loading\");\n            this.setState({ loading: false });\n          }\n        });\n    }\n  }\n\n  render() {\n    let { requestUsers, requests } = this.state;\n\n\n\n    if (requestUsers.length == 0 && requests.length > 0) {\n      if (this.state.loading == false) {\n        this.loadRequestUsers();\n      }\n    }\n\n    let addedFriend = (\n      <p>\n        {this.state.addedFriend}\n      </p>\n    );\n\n    let invitedFriend = (\n      <p>\n        {this.state.invitedFriend}\n      </p>\n    );\n\n    let req = [];\n    for (var i = 0; i < requestUsers.length; i++) {\n\n      let uid = requests[i];\n      // console.log('changing request users in addfriends'  + uid);\n\n      let user = requestUsers[i];\n      var addEl = (\n        <div className=\"preview\">\n          <Avatar PpfURL={user.PpfURL} />\n          <p>{user.name}</p>\n          <div className=\"yesno\">\n            <button className=\"yes\" onClick={() => this.acceptRequest(uid)}>\n              <span className=\"jam jam-check\" style={{ color: 'white' }}></span>\n            </button>\n            <button className=\"no\" onClick={() => this.removeRequest(uid)}>\n              <span className=\"jam jam-close\" style={{ color: '#8A8184' }}> </span>\n            </button>\n          </div>\n        </div>\n      );\n      req.push(addEl);\n    }\n\n    return (\n      <div className=\"modal network\">\n        <button className=\"close\" onClick={() => this.props.setAddFriend(false)}>\n\n\n          <span className=\"jam jam-close\"></span>\n        </button>\n        <img src={plant}></img>\n\n        {req ? <div className=\"scrolling-row\">{req}</div> : null}\n\n        <div className=\"add-friend\">\n          <h2>add friend</h2>\n          {addedFriend}\n          <div className=\"network-input\">\n            <input id=\"add-friend-email\" type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.addFriend}>request</button>\n          </div>\n        </div>\n        <div className=\"invite-friend\">\n          <h2>invite friend</h2>\n          {invitedFriend}\n          <div className=\"network-input\">\n            <input type=\"email\" placeholder=\"what's their email?\"></input>\n            <button onClick={this.inviteFriend}>invite</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default AddFriend;","import React, { Component } from 'react';\nimport AddFriend from './AddFriend';\nimport { withFirebase } from './Firebase';\nimport { request } from 'http';\nimport Avatar from './Avatar';\n\nimport graphics3 from '../graphics/3.png';\nimport ErrorMsg from './ErrorMsg';\n\nconst AddFriendFB = withFirebase(AddFriend);\n\nclass NetworkTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addFriend: false,\n      network: this.props.network,\n      networkUsers: [],\n      loading: false,\n      requests: this.props.requests,\n    };\n  }\n\n  componentDidMount() {\n    let ref = this.props.firebase.user(this.props.uid);\n\n    // console.log(JSON.stringify(this.state.requests));\n\n    ref.onSnapshot((doc) => {\n      let data = doc.data();\n      this.setNetworkUsers(data.network);\n      this.setRequests(data.requests);\n      // console.log(JSON.stringify(this.state.requests));\n    })\n  }\n\n  setAddFriend = (bool) => {\n    this.setState({\n      addFriend: bool\n    });\n  }\n\n  filterNetwork = (event) => {\n    let word = event.target.value;\n  }\n\n  setRequests = (requests) => {\n    this.setState({ requests: requests });\n    this.props.setRequests(requests);\n  }\n\n  //expect: array of uids\n  setNetworkUsers = (network) => {\n    let users = this.state.networkUsers;\n    if (users == null || users.length == 0) {\n      this.setState({ network: network });\n      this.loadNetworkUsers();\n    }\n    else {\n      //dfind difference  btw n prev state and this state, add to networkUsers\n      let prev = this.state.network;\n\n      let difference = network.filter(function (i) { return prev.indexOf(i) < 0 });\n\n      difference.forEach((val) => {\n        this.props.firebase\n          .user(val)\n          .get().then((doc) => {\n            users.push(doc.data());\n            this.setState({ networkUsers: users });\n          });\n      });\n\n      this.setState({ network: network });\n    }\n    this.props.setNetwork(network);\n  }\n\n  loadNetworkUsers = () => {\n    this.setState({ loading: true, networkUsers: [] });\n    let users = [];\n    let counter = 0;\n\n    for (let i = 0; i < this.state.network.length; i++) {\n\n      this.props.firebase\n        .user(this.state.network[i])\n        .get().then((doc) => {\n          users.push(doc.data());\n          this.setState({ networkUsers: users });\n          counter++;\n          if (counter === this.state.network.length) {\n            this.setState({ loading: false });\n          }\n        });\n    }\n  }\n\n  render() {\n    if ((!this.state.networkUsers || this.state.networkUsers.length === 0) &&\n      this.state.network.length > 0) {\n      if (this.state.loading == false) {\n        this.loadNetworkUsers();\n      }\n    }\n\n    let alert = null;\n    if (this.state.requests.length > 0) {\n      alert = (\n        <span className=\"alert\">{this.state.requests.length}</span>\n      );\n    }\n\n    let network = [];\n    for (var i = 0; i < this.state.networkUsers.length; i++) {\n      let user = this.state.networkUsers[i];\n      var addEl = (\n        <div className=\"friend\">\n          <Avatar PpfURL={user.PpfURL} />\n          <span>{user.name}</span>\n          <button><span className=\"jam jam-heart\" style={{ color: '#e38882' }}></span></button>\n        </div>\n      );\n      network.push(addEl);\n    }\n\n\n    return (\n      <section className=\"network\">\n        <h2>Your network</h2>\n        <div className=\"header\">\n          <div className=\"search-bar\">\n            <input type=\"text\" placeholder=\"search\" onChange={this.filterNetwork} />\n            <button id=\"search-friends\"><span className=\"jam jam-search\" style={{ color: '#9FC6C1' }}></span></button>\n          </div>\n          <button id=\"add-friends\" onClick={() => this.setAddFriend(true)} >\n            <span className=\"jam jam-user-plus\" style={{ color: '#9FC6C1' }}>\n              {alert}\n            </span>\n\n\n\n          </button>\n        </div>\n        <div className=\"friends\">\n          {network.length == 0 ?\n            <ErrorMsg\n              src={graphics3}\n              header='No support yet.'\n              msg='Why not invite someone you trust?'\n            />\n            : network\n          }\n        </div>\n        {(this.state.addFriend ?\n          <AddFriendFB\n            setAddFriend={this.setAddFriend}\n            uid={this.props.uid}\n            requests={this.state.requests}\n            network={this.state.network}\n          /> : null)}\n      </section>\n    );\n  }\n};\n\nexport default NetworkTab;","\nimport React, { Component } from 'react';\n\nconst INITIAL_STATE = {\n  q: '',\n  type: 'text',\n  dropdown: false\n};\n\nclass AddCheckin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  setType = (type) => {\n    this.setState({ type: type });\n  }\n\n  onSubmit = () => {\n    this.props.setAddMode(false);\n    this.props.addCheckin({\n      q: this.state.q,\n      type: this.state.type\n    });\n  }\n\n  setDropdown = (bool) => {\n    this.setState({ dropdown: bool });\n  }\n\n  onCancel = () => {\n    this.props.setAddMode(false);\n  }\n\n  render() {\n    const { q, dropdown, type } = this.state;\n\n    let dropdownEl;\n\n    if (dropdown) {\n      dropdownEl = (\n\n        <ul>\n          <li><button onClick={() => {\n            this.setType('text');\n            this.setDropdown(false);\n            }}>\n            <span className=\"jam checkicon jam-align-justify\"></span> Text\n            <span className=\"jam checkicon jam-chevron-down\"></span> \n        </button>\n          </li>\n          <li><button onClick={() => {\n            this.setType('yes/no');\n            this.setDropdown(false)\n            }}>\n            <span className=\"jam checkicon jam-brightness\"></span> Yes/No\n          </button>\n          </li>\n          <li><button onClick={() => { \n            this.setType('scale');\n            this.setDropdown(false)\n            }}>\n            <span className=\"jam checkicon jam-star\"></span> Scale</button>\n          </li>\n\n        </ul>\n      );\n    } else {\n      if (type == 'text') {\n        dropdownEl = (\n          <ul>\n            <li><button onClick={() => this.setDropdown(true)}>\n              <span className=\"jam checkicon jam-align-justify\"></span> Text\n              <span className=\"jam checkicon jam-chevron-down\"></span> \n            </button>\n            </li>\n          </ul>\n        );\n      }\n      else if (type == 'yes/no') {\n        dropdownEl = (\n          <ul>\n            <li><button onClick={() => this.setDropdown(true)}>\n              <span className=\"jam checkicon jam-brightness\"></span> Yes/No\n              <span className=\"jam checkicon jam-chevron-down\"></span> \n          </button>\n            </li>\n          </ul>\n        );\n      } else {\n        dropdownEl = (\n          <ul>\n            <li><button onClick={() => this.setDropdown(true)}>\n              <span className=\"jam checkicon jam-star\"></span> Scale\n              <span className=\"jam checkicon jam-chevron-down\"></span> \n              </button>\n            </li>\n          </ul>\n        );\n      }\n    }\n\n    return (\n      <div className=\"add-panel\">\n        <h1>Add Check-in</h1>\n        <textarea\n          id=\"check-in\"\n          name=\"q\"\n          placeholder=\"What's your check-in?\"\n          value={q}\n          onChange={this.onChange}>\n        </textarea>\n        <h3>Check-in type</h3>\n        {dropdownEl}\n        <div className=\"yesno\">\n          <button className=\"yes\" onClick={this.onSubmit}>\n            <span className=\"jam jam-check\" style={{ color: 'white' }}></span></button>\n          <button className=\"no\" onClick={this.onCancel}>\n            <span className=\"jam jam-close\" style={{ color: '#8A8184' }}> </span></button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default AddCheckin;","\nimport React, { Component } from 'react';\nimport AddCheckin from './AddCheckin';\nimport $ from 'jquery';\nimport { withFirebase } from './Firebase';\nimport Avatar from './Avatar';\n\nconst LogoutButton = (props) => {\n  return (\n    <button id=\"logout-but\"\n      onClick={() => {\n        props.logout();\n        props.firebase.doSignOut();\n      }}>logout</button>\n  )\n};\n\nconst LogoutButtonFB = withFirebase(LogoutButton);\n\n\nconst CheckInRow = (props) => {\n\n  let el = null;\n  if (props.type == 'text') {\n    el = (\n      <span className=\"jam checkicon jam-align-justify\"></span>\n    );\n  }\n  else if (props.type == 'yes/no') {\n    el = (\n      <span className=\"jam checkicon jam-brightness\"></span>\n    );\n  } else {\n    el = (\n      <span className=\"jam checkicon jam-star\"></span>\n    );\n  }\n\n  return <li>\n    {el}\n    {props.q}\n    {\n      props.trash ?\n        <button className=\"delete\" onClick={() => props.removeCheckinAt(props.index)}>\n          <span className=\"jam jam-trash\"></span>\n        </button>\n        : null\n    }\n  </li>;\n};\n\nclass UserTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      checkins: this.props.checkins,\n      name: this.props.name,\n      addMode: false,\n      PpfURL: this.props.PpfURL,\n    };\n  }\n\n  setEditMode = (bool) => {\n    this.setState({\n      editMode: bool\n    });\n\n    //TODO: save changes\n    if (bool === false) {\n      if ($('.profile-name').val() != this.state.name) {\n        let NameVal = $('.profile-name').val();\n        this.setState({\n          name: NameVal\n        });\n        this.props.setName(NameVal);\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            name: NameVal\n          });\n      }\n    }\n  };\n\n  setAddMode = (bool) => {\n    this.setState({\n      addMode: bool\n    });\n  };\n\n  addCheckin = (obj) => {\n    let arr = this.state.checkins;\n    arr.push(obj);\n    this.setState({ checkins: arr });\n    this.props.setCheckins(arr);\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: arr\n      });\n  }\n\n  removeCheckinAt = (index) => {\n    let arr = this.state.checkins;\n    arr.splice(index, 1);\n    this.setState({ checkins: arr });\n    this.props.setCheckins(arr);\n\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: arr\n      });\n  }\n\n  uploadPpf = (event) => {\n    let firstFile = event.target.files[0] // upload the first file only\n    let task = this.props.firebase.photos(this.props.uid).put(firstFile);\n\n    task.on('state_changed', (snapshot) => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\n    }, (error) => {\n      // Handle unsuccessful uploads\n    }, () => {\n      // Handle successful uploads on complete\n      task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\n        this.props.firebase\n          .user(this.props.uid)\n          .update({\n            PpfURL: downloadURL\n          });\n\n        this.setState({ PpfURL: downloadURL });\n        this.props.setPpfURL(downloadURL);\n      });\n    });\n  }\n\n  setName = (event) => {\n    this.setState({ name: event.target.value })\n  }\n\n  render() {\n    let cornerButton;\n    let pic;\n    let name;\n    let checkins;\n    let addQ;\n\n\n    if (this.state.editMode) {\n      cornerButton = (\n        <button className=\"edit done\" onClick={() => this.setEditMode(false)}>Done</button>\n      );\n      pic = (\n        <div>\n          <input type=\"file\" accept=\"image/*\" id=\"ppf-upload\" onChange={this.uploadPpf} />\n          <label className=\"edit-pic\" for=\"ppf-upload\">\n            <Avatar PpfURL={this.state.PpfURL}\n              content={\n                <div className=\"edit-pic-but\">\n                  <span className=\"jam jam-pencil\"></span>\n                </div>\n              }\n            />\n          </label>\n        </div>\n      );\n      name = (\n        <input type=\"text\" className=\"profile-name\" onChange={this.setName} value={this.state.name}></input>\n      );\n      checkins = (\n        <ul className=\"your-checkins\">\n          {this.state.checkins.map((checkin, index) => {\n            return <CheckInRow\n              q={checkin.q}\n              removeCheckinAt={this.removeCheckinAt}\n              index={index}\n              trash={true}\n              type={checkin.type}\n            />;\n          })}\n        </ul>\n      );\n    }\n    else {\n      cornerButton = (\n        <button className=\"edit\" onClick={() => this.setEditMode(true)}><span className=\"jam jam-pencil\" style={{ color: '#9FC6C1' }}></span></button>\n      );\n      pic = (\n        <Avatar PpfURL={this.state.PpfURL} />\n      );\n      name = (\n        <div className=\"profile-name\">{this.state.name}</div>\n      );\n      checkins = (\n        <ul className=\"your-checkins\">\n          {this.state.checkins.map(function (checkin, index) {\n            return <CheckInRow\n              q={checkin.q}\n              trash={false}\n              type={checkin.type}\n            />;\n          })}\n        </ul>\n      );\n    }\n\n    if (this.state.addMode) {\n      addQ = (\n        <AddCheckin\n          setAddMode={this.setAddMode}\n          uid={this.props.uid}\n          addCheckin={this.addCheckin}\n        />\n      );\n    } else {\n      addQ = (\n        <button onClick={() => { this.setAddMode(true) }}>add more\n        </button>\n      );\n    }\n\n    return (\n      <section className=\"user\">\n        {cornerButton}\n        {pic}\n        {name}\n        <div className=\"check-in-edit\">\n          <h2>Your Daily Check-in</h2>\n          {checkins}\n          {addQ}\n        </div>\n        <LogoutButtonFB\n          logout={this.props.logout}\n        />\n\n      </section>\n    );\n  }\n}\n\n\nexport default UserTab;","import React, { Component } from 'react';\n\nconst Button = (props) => {\n  return (\n    <button className=\"cont-onboarding\" onClick={props.Listener}>\n      <span className={props.Classes}></span>\n    </button>\n  );\n}\n\nconst defCheckins =\n  [\n    [\n      {\n        q: 'Have you made time to do something you love?',\n        type: 'yes/no'\n      },\n      {\n        q: 'How loving were you towards yourself?',\n        type: 'range'\n      },\n      {\n        q: 'What are you grateful for?',\n        type: 'text'\n      }\n    ],\n    [\n      {\n        q: 'Have you taken a deep breath today?',\n        type: 'yes/no'\n      },\n      {\n        q: 'Have you listened to relaxing music?',\n        type: 'yes/no'\n      },\n      {\n        q: 'Did you spend time in nature?',\n        type: 'yes/no'\n      }\n    ],\n    [\n      {\n        q: 'What was a memorable interaction from today?',\n        type: 'text'\n      },\n      {\n        q: 'Have you done something for someone else?',\n        type: 'yes/no'\n      }\n    ],\n    [\n      {\n        q: 'How overwhelmed do you feel?',\n        type: 'range'\n      },\n      {\n        q: 'Did you feel anxious about something?',\n        type: 'yes/no'\n      }\n    ],\n    [\n      {\n        q: 'How hydrated are you?',\n        type: 'range'\n      },\n      {\n        q: 'Have you stretched and moved your body?',\n        type: 'yes/no'\n      },\n      {\n        q: 'How was your sleep?',\n        type: 'range'\n      },\n    ],\n  ];\n\nconst INITIAL_STATE = {\n  categories: [\n    'mindful',\n    'relaxation',\n    'social',\n    'stress',\n    'physical'\n  ],\n  showOptions: [\n    false,\n    false,\n    false,\n    false,\n    false,\n  ],\n  selectedCheckins: [\n    [false, false, false],\n    [false, false, false],\n    [false, false],\n    [false, false],\n    [false, false, false],\n  ]\n};\n\nclass OnboardingCategories extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n\n  changeSelected = (i, j) => {\n    let selected = this.state.selectedCheckins;\n    selected[i][j] = !selected[i][j];\n    this.setState({ selectedCheckins: selected })\n  }\n\n  changeOptions = (i) => {\n    // console.log('i = ' + i);\n    let arr = this.state.showOptions;\n    arr[i] = !arr[i];\n    this.setState({ showOptions: arr })\n  }\n\n  onSubmit = () => {\n    const checkins = [], s = this.state.selectedCheckins;\n    for (let i = 0; i < s.length; i++) {\n      let arr = s[i];\n      // console.log(JSON.stringify(arr));\n      for (let j = 0; j < arr.length; j++) {\n        if (arr[j] === true) {\n          checkins.push(defCheckins[i][j])\n        }\n      }\n    }\n\n    // console.log(JSON.stringify(checkins));\n    this.props.setCheckins(checkins);\n    this.props.firebase\n      .user(this.props.uid)\n      .update({\n        checkins: checkins\n      }).then(() => {\n        this.props.incrementPage();\n      });\n  }\n\n\n  render() {\n\n    let { categories, showOptions, selectedCheckins } = this.state;\n\n\n    let checkins = [];\n\n    for (let ii = 0; ii < showOptions.length; ii++) {\n\n      let addEl;\n\n      if (showOptions[ii] === true) {\n        // console.log(ii + ' is true')\n        var arr = defCheckins[ii];\n        var defCh = [];\n        for (let j = 0; j < arr.length; j++) {\n          let className = '';\n          let item = arr[j];\n          let tru = selectedCheckins[ii][j];\n\n          if (tru) {\n            className = 'ob-cat-opt selected'\n          } else {\n            className = 'ob-cat-opt'\n          }\n\n          let el = null;\n          if (item.type == 'text') {\n            el = (\n              <span className=\"jam checkicon jam-align-justify\"></span>\n            );\n          }\n          else if (item.type == 'yes/no') {\n            el = (\n              <span className=\"jam checkicon jam-brightness\"></span>\n            );\n          } else {\n            el = (\n              <span className=\"jam checkicon jam-star\"></span>\n            );\n          }\n\n          defCh.push(<button className={className} onClick={() => {\n            this.changeSelected(ii, j);\n\n          }}>\n            {tru ? <span class=\"jam jam-check\"></span> : null}\n            {el}\n            {item.q}\n          </button>);\n        }\n\n        addEl = (\n          <div className=\"ob-cat\">\n            <button onClick={() => this.changeOptions(ii)}>\n              {categories[ii]}\n            </button>\n            {defCh}\n          </div>\n        );\n      }\n      else {\n        addEl = (\n          <button onClick={() => this.changeOptions(ii)}>\n            {categories[ii]}\n          </button>\n        );\n      }\n      checkins.push(addEl);\n    }\n    return (\n      <div className=\"page three\">\n        <h2>What would you like to check in about?</h2>\n        <div className=\"categories\">\n          {checkins}\n        </div>\n\n        <Button\n          Listener={this.onSubmit}\n          Classes=\"jam jam-check\"\n        />\n      </div>\n\n\n    );\n  }\n};\n\nexport default OnboardingCategories;","import React, { Component } from 'react';\nimport graphics1 from '../graphics/1.png';\nimport graphics2 from '../graphics/2.png';\nimport graphics3 from '../graphics/3.png';\nimport texture1 from './../graphics/flower.png';\nimport texture2 from './../graphics/thing.png';\nimport OnboardingCategories from './OnboardingCategories';\nimport { withFirebase } from './Firebase';\n\nconst OnboardingCategoriesFB = withFirebase(OnboardingCategories);\n\n/*\nprops:\n\nsetOnboarding(true)\n\n*/\nconst Button = (props) => {\n  return (\n    <button className=\"cont-onboarding\" onClick={props.Listener}>\n      <span className={props.Classes}></span>\n    </button>\n  );\n}\n\nclass Onboarding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    }\n  }\n\n  incrementPage = () => {\n    this.setState({ page: this.state.page + 1 })\n  }\n\n  enableNotif = () => {\n    this.incrementPage();\n  }\n\n  render() {\n\n    let button;\n\n    let page;\n    switch (this.state.page) {\n      case 0:\n        {\n          button = (\n            <Button\n              Listener={this.incrementPage}\n              Classes=\"jam jam-arrow-right\"\n            />\n          );\n\n          page = (\n            <div className=\"page one\">\n              <h1>{\"Hi \" + this.props.name + \",\"}</h1>\n              <p>Welcome to Newroots. We're going to take you through steps to best support you.</p><img src={graphics3} />\n              {button}\n            </div>\n          );\n          break;\n        }\n      case 1:\n        {\n          button = (\n            <Button\n              Listener={this.incrementPage}\n              Classes=\"jam jam-arrow-right\"\n            />\n          );\n\n          page = (\n            <div className=\"page two\">\n              <img className=\"bg-texture\" src={texture1} />\n              <h2>Let's create a check-in!</h2>\n              <p>A check-in means checking in every day about what matters to you - like sleep, feelings, and more.</p>\n              {button}\n            </div>\n          );\n          break;\n        }\n      case 2:\n        {\n\n          page = (\n           \n              <OnboardingCategoriesFB\n                uid = {this.props.uid}\n                setCheckins={this.props.setCheckins}\n                incrementPage={this.incrementPage}\n              />\n          );\n          break;\n        }\n      case 3:\n        {\n          button = (\n            <Button\n              Listener={this.incrementPage}\n              Classes=\"jam jam-arrow-right\"\n            />\n          );\n\n          page = (\n            <div className=\"page four\">\n              <img className=\"bg-texture\" src={texture2} />\n              <h2>Great! Who'll support you through this?</h2>\n              <label htmlFor=\"tag-typer\">\n                <div id=\"tags\">\n                  <input id=\"tag-typer\" type=\"text\" placeholder=\"Add email\" />\n                </div>\n              </label>\n              <p>Don't worry if you can't think of anyone - you can always add them later.    </p>\n              {button}\n            </div>\n          );\n          break;\n        }\n      case 4:\n        {\n          button = (\n            <div className=\"notif-buts\">\n              <button className=\"enable\" onClick={this.enableNotif}>\n                ENABLE\n            </button>\n              <button className=\"no\" onClick={this.incrementPage}>\n                NOT NOW\n            </button>\n            </div>\n          );\n\n          page = (\n            <div className=\"page five\">\n              <h2>Turn on notifications to get reminders</h2>\n              <img src={graphics2} />\n              {button}\n            </div>\n          );\n          break;\n        }\n      case 5:\n        {\n          button = (\n            <button className=\"start\" onClick={() => this.props.setOnboarding(false)}>\n              I'M READY\n            </button>\n          );\n\n          page = (\n            <div className=\"page six\">\n              <h2>This is your space to grow.</h2>\n              <p>Ready for your first check-in?</p>\n              <img src={graphics1} />\n              {button}\n            </div>\n          );\n          break;\n        }\n    }\n\n\n    return (\n      <div className=\"onboarding\">\n        {page}\n      </div>\n\n    );\n  }\n};\n\nexport default Onboarding;","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\n\nimport './App.css';\nimport NavBar from './components/NavBar.js';\nimport CheckinModal from './components/CheckinModal.js';\nimport FeedTab from './components/FeedTab.js';\nimport HomePage from './components/HomePage.js';\nimport NetworkTab from './components/NetworkTab.js';\nimport UserTab from './components/UserTab.js';\nimport Onboarding from './components/Onboarding.js';\n\n\nimport { withFirebase } from './components/Firebase';\n\n\nconst UserTabFB = withFirebase(UserTab);\n\nconst NetworkTabFB = withFirebase(NetworkTab);\n\nconst NavBarFB = withFirebase(NavBar);\n\nconst FeedTabFB = withFirebase(FeedTab);\n\nconst CheckinModalFB = withFirebase(CheckinModal);\n//let feedListen;\n\nvar data = {\n  baseURL: '',\n  activeTab: 0,\n  userData: null,\n  onboarding: false,\n  feed: []\n},\n  userBase = 'users';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = data;\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n    //feedListen();\n  }\n\n  fillFeed = () => {\n\n  }\n\n  SignUp = (userData) => {\n    this.setState({\n      onboarding: true,\n      userData: userData,\n    });\n  }\n\n  checkLogin = (userData) => {\n    this.setState({\n      userData: userData,\n    });\n  }\n\n  // update this.state.lastCheckin as well as input checkin data to feed/database\n  updateCheckin = (lastCheckin) => {\n    this.setState({\n      userData: {\n        ...this.state.userData,\n        lastCheckin: lastCheckin\n      }\n    });\n  }\n\n  //check this.state.lastCheckin and see whether user has checked in today\n  needToCheckin = () => {\n    if (this.state.userData.lastCheckin != moment().format('L')) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  setPpfURL = (downloadURL) => {\n    this.setState({\n      userData: {\n        ...this.state.userData,\n        PpfURL: downloadURL\n      }\n    });\n    \n  }\n\n  setActiveTab = (index) => {\n    this.setState({\n      activeTab: index,\n    });\n  }\n\n  setName = (name) => {\n    this.setState({\n      userData:\n      {\n        ...this.state.userData,\n        name: name\n      }\n    })\n  }\n\n  setCheckins = (checkins) => {\n    this.setState({\n      userData:\n      {\n        ...this.state.userData,\n        checkins: checkins\n      }\n    })\n  }\n\n  setNetwork = (network) => {\n    this.setState({\n      userData:\n      {\n        ...this.state.userData,\n        network: network\n      }\n    })\n  }\n\n  setRequests = (requests) => {\n    this.setState({\n      userData:\n      {\n        ...this.state.userData,\n        requests: requests\n      }\n    })\n  }\n\n  setOnboarding = (bool) => {\n    this.setState({ onboarding: bool })\n  }\n\n  //logout\n  logout = () => {\n    this.setState({\n      userData: null\n    });\n  }\n\n  render() {\n    if (this.state.userData === null) {\n      return (\n        <HomePage\n          checkLogin={this.checkLogin}\n          SignUp={this.SignUp}\n        />\n      );\n    }\n    else if (this.state.onboarding) {\n      return (\n        <Onboarding\n          setOnboarding={this.setOnboarding}\n          name={this.state.userData.name}\n          setCheckins={this.setCheckins}\n          uid={this.state.userData.uid}\n        />\n      );\n    }\n\n\n    var activeTab;\n    //active tab is feed\n    if (this.state.activeTab == 0) {\n      activeTab = (\n        <FeedTabFB\n          PpfURL={this.state.userData.PpfURL}\n          name={this.state.userData.name}\n          uid={this.state.userData.uid}\n          network={this.state.userData.network}\n          feed={this.state.feed}\n        />\n      );\n    }\n    //active tab is network\n    else if (this.state.activeTab == 1) {\n      // console.log('app.js req-'+JSON.stringify(this.state.userData.requests));\n      activeTab = (\n        <NetworkTabFB\n          uid={this.state.userData.uid}\n          requests={this.state.userData.requests}\n          network={this.state.userData.network}\n          setRequests={this.setRequests}\n          setNetwork={this.setNetwork}\n        />\n      );\n    }\n    //active tab is profile\n    else {\n      activeTab = (\n        <UserTabFB\n          logout={this.logout}\n          checkins={this.state.userData.checkins}\n          name={this.state.userData.name}\n          uid={this.state.userData.uid}\n          PpfURL={this.state.userData.PpfURL}\n          setPpfURL={this.setPpfURL}\n          setName={this.setName}\n          setCheckins={this.setCheckins}\n        />\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <NavBarFB\n          setActiveTab={this.setActiveTab}\n          requestsLength={this.state.userData.requests ? this.state.userData.requests.length : 0}\n          uid={this.state.userData.uid}\n        />\n        {activeTab}\n\n        <div className=\"bg\"></div>\n        <div className=\"main-bg-texture\"></div>\n\n        {this.needToCheckin() ?\n          <CheckinModalFB\n            PpfURL={this.state.userData.PpfURL}\n            network={this.state.userData.network}\n            name={this.state.userData.name}\n            uid={this.state.userData.uid}\n            updateCheckin={this.updateCheckin}\n            checkins={this.state.userData.checkins ? this.state.userData.checkins : []}\n          />\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(<FirebaseContext.Provider value={new Firebase()}>\n<App />\n</FirebaseContext.Provider>, \ndocument.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.6c535c0e.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.7de446bf.png\";","module.exports = __webpack_public_path__ + \"static/media/thing.9dafac6d.png\";","module.exports = __webpack_public_path__ + \"static/media/1.bf41d086.png\";","module.exports = __webpack_public_path__ + \"static/media/3.f6810802.png\";","module.exports = __webpack_public_path__ + \"static/media/plants.6ec7813f.png\";","module.exports = __webpack_public_path__ + \"static/media/hero.b294932a.gif\";","module.exports = __webpack_public_path__ + \"static/media/2.6dfd6078.png\";"],"sourceRoot":""}